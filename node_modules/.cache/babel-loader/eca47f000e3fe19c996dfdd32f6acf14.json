{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\common\\\\DisplayStatus.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../utils/API/API\";\nimport Loading from \"../loading/Loading\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass DisplayStatus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      status: \"\"\n    };\n\n    this.displayStatus = status => {\n      console.log(sta);\n      return React.createElement(\"p\", {\n        style: {\n          color: `${status.color}`\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, status.title);\n    };\n  }\n\n  componentDidMount() {\n    API.get(\"/statuses\").then(response => {\n      this.setState(_objectSpread({}, this.state, {\n        statuses: response.data,\n        loading: false\n      }));\n    }).catch(error => {\n      this.setState(_objectSpread({}, this.state, {\n        loading: false\n      }));\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          status = _this$props.status,\n          loading = _this$props.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.displayStatus(status));\n  }\n\n}\n\nexport default connect(mapStateToProps)(DisplayStatus);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/common/DisplayStatus.jsx"],"names":["React","Component","connect","API","Loading","mapStateToProps","state","DisplayStatus","loading","status","displayStatus","console","log","sta","color","title","componentDidMount","get","then","response","setState","statuses","data","catch","error","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AACD;;AAED,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACNE,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD4B;;AAAA,SAuBpCC,aAvBoC,GAuBpBD,MAAM,IAAI;AAC5BE,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACI,aAAO;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEL,MAAM,CAACK,KAAM;AAAzB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCL,MAAM,CAACM,KAAhD,CAAP;AACD,KA1BmC;AAAA;;AAKpCC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,GAAG,CAACc,GAAJ,CAAQ,WAAR,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,mBACK,KAAKd,KADV;AAEEe,QAAAA,QAAQ,EAAEF,QAAQ,CAACG,IAFrB;AAGEd,QAAAA,OAAO,EAAE;AAHX;AAKD,KAPH,EAQGe,KARH,CAQSC,KAAK,IAAI;AACd,WAAKJ,QAAL,mBACK,KAAKd,KADV;AAEEE,QAAAA,OAAO,EAAE;AAFX;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,KAdH;AAeD;;AAMDC,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCjB,MADD,eACCA,MADD;AAAA,UACSD,OADT,eACSA,OADT;;AAEP,QAAIA,OAAJ,EAAa;AACX,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKE,aAAL,CAAmBD,MAAnB,CAAN,CAAP;AACD;;AAjCmC;;AAoCtC,eAAeP,OAAO,CAACG,eAAD,CAAP,CAAyBE,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass DisplayStatus extends Component {\r\n  state = {\r\n    loading: true,\r\n    status: \"\"\r\n  };\r\n  componentDidMount() {\r\n    API.get(\"/statuses\")\r\n      .then(response => {\r\n        this.setState({\r\n          ...this.state,\r\n          statuses: response.data,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  displayStatus = status => {\r\nconsole.log(sta)\r\n    return <p style={{ color: `${status.color}` }}>{status.title}</p>;\r\n  };\r\n  render() {\r\n    const { status, loading } = this.props;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return <div>{this.displayStatus(status)}</div>;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DisplayStatus);\r\n"]},"metadata":{},"sourceType":"module"}