{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/ContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreateContact = e => {\n      e.preventDefault();\n      const contact = this.state.contact;\n      axios.post(`contacts`, contact).then(response => {\n        console.log(response);\n\n        if (response.data.duplicated) {\n          this.setState({\n            dublicated: true,\n            dublicatedContact: response.data.contact\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: 'Cannot save the data'\n        });\n      });\n    };\n\n    this.handleInputChange = e => {\n      const phoneRegex = /^\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4})$/;\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === 'phone') {\n        value = value.replace(phoneRegex, '($1) $2-$3');\n      }\n\n      let contact = _objectSpread({}, this.state.contact, {\n        [field]: value\n      });\n\n      this.setState({\n        contact\n      });\n    };\n\n    this.state = {\n      contact: {\n        name: '',\n        phone: '',\n        email: ''\n      }\n    };\n  }\n\n  render() {\n    const contact = this.state.contact;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleCreateContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 2,\n      m: 2,\n      xl: 2,\n      label: \"Name\",\n      name: \"name\",\n      value: contact.name,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone (no space, no +1)\",\n      name: \"phone\",\n      value: contact.phone,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 4,\n      xl: 4,\n      label: \"Email\",\n      email: true,\n      validate: true,\n      value: contact.email,\n      name: \"email\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"save\"))), this.state.dublicated && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"A contact has been found with this phone number\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Name: \", this.state.dublicatedContact.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Phone: \", this.state.dublicatedContact.phone), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Email: \", this.state.dublicatedContact.email), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Use this contact\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Create a new one\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/ContactForm.jsx"],"names":["React","Component","connect","TextInput","Icon","Button","Row","axios","ContactForm","constructor","props","handleCreateContact","e","preventDefault","contact","state","post","then","response","console","log","data","duplicated","setState","dublicated","dublicatedContact","catch","error","errorMessage","handleInputChange","phoneRegex","field","target","name","value","replace","phone","email","render","marginTop","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass ContactForm extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            contact: {\n                name: '',\n                phone: '',\n                email: ''\n            }\n        }\n    }\n\n    handleCreateContact = (e) => {\n        e.preventDefault()\n\n        const contact = this.state.contact\n\n        axios.post(`contacts`, contact).then(response => {\n            console.log(response)\n            if(response.data.duplicated){\n                this.setState({\n                    dublicated: true,\n                    dublicatedContact: response.data.contact\n                })\n\n            } \n        }).catch(error => {\n           \n            this.setState({\n                errorMessage: 'Cannot save the data'\n            })\n        })\n    }\n\n    handleInputChange = (e) => {\n        const phoneRegex = /^\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4})$/\n        const field = e.target.name \n        let value = e.target.value \n\n        if(field === 'phone'){\n            value = value.replace(phoneRegex, '($1) $2-$3')\n        }\n\n        let contact = {\n            ...this.state.contact,\n            [field]: value\n        }\n       \n        this.setState({\n            contact\n        })\n\n    }\n\n    render() {\n        const contact = this.state.contact \n       \n        return (\n            <div>\n                <form onSubmit={this.handleCreateContact}>\n                    <Row>\n                        <TextInput\n                            s={12}\n                            l={2}\n                            m={2}\n                            xl={2}\n                            label='Name'\n                            name='name'\n                            value={contact.name}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={3}\n                            m={3}\n                            xl={3}\n                            label='Phone (no space, no +1)'\n                            name='phone'\n                            value={contact.phone}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={4}\n                            xl={4}\n                            label='Email'\n                            email\n                            validate\n                            value={contact.email}\n                            name='email'\n                            onChange={this.handleInputChange}\n                        />\n                        <Button\n                            node='button'\n                            type='submit'\n                            waves='light'\n                            style={{marginTop: '20px'}}\n                        >\n                            Save\n                            <Icon left>save</Icon>\n                        </Button>\n                    </Row>\n                    \n                        {this.state.dublicated && <Row>\n                            <h6 className=\"red-text\">A contact has been found with this phone number</h6>\n                            <p>Name: {this.state.dublicatedContact.name}</p>\n                            <p>Phone: {this.state.dublicatedContact.phone}</p>\n                            <p>Email: {this.state.dublicatedContact.email}</p>\n                            <Button>Use this contact</Button>\n                            <Button>Create a new one</Button>\n                        </Row>}\n                   \n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}