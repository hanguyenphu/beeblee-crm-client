{"ast":null,"code":"var _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/EditContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Row, Icon, Button } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport API from \"../../utils/API/API\";\nimport formatedPhone from \"../../utils/commons/FormatPhone\";\n\nclass EditContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleUpdateContact = e => {\n      e.preventDefault();\n      const contact = this.state.contact;\n      API.patch(`contacts/${contact._id}`, contact).then(response => {\n        this.props.updateContact(response.data);\n        this.props.closeEditContact();\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleInputChange = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === \"phone\") {\n        value = formatedPhone(value);\n      }\n\n      let contact = {\n        _id: this.state.contact._id,\n        name: this.state.contact.name,\n        phone: this.state.contact.phone,\n        email: this.state.contact.email,\n        [field]: value\n      };\n      this.setState({\n        contact\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      contact: this.props.contact\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.contact._id !== this.props.contact._id) {\n      this.setState({\n        contact: this.props.contact\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.contact) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    const contact = this.state.contact;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUpdateContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 2,\n      m: 2,\n      xl: 2,\n      label: \"Name\",\n      name: \"name\",\n      value: contact.name,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone\",\n      name: \"phone\",\n      value: contact.phone,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 4,\n      xl: 4,\n      label: \"Email\",\n      email: true,\n      validate: true,\n      value: contact.email,\n      name: \"email\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"save\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/EditContactForm.jsx"],"names":["React","Component","connect","TextInput","Row","Icon","Button","Loading","API","formatedPhone","EditContactForm","state","handleUpdateContact","e","preventDefault","contact","patch","_id","then","response","props","updateContact","data","closeEditContact","catch","error","console","log","handleInputChange","field","target","name","value","phone","email","setState","componentDidMount","componentDidUpdate","prevProps","render","marginTop","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Row, Icon, Button } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport API from \"../../utils/API/API\";\nimport formatedPhone from \"../../utils/commons/FormatPhone\";\n\nclass EditContactForm extends Component {\n    state = {};\n\n    componentDidMount() {\n        this.setState({\n            contact: this.props.contact\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.contact._id !== this.props.contact._id) {\n            this.setState({\n                contact: this.props.contact\n            });\n        }\n    }\n\n    handleUpdateContact = e => {\n        e.preventDefault();\n        const contact = this.state.contact;\n        API.patch(`contacts/${contact._id}`, contact)\n            .then(response => {\n                this.props.updateContact(response.data);\n                this.props.closeEditContact();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    };\n\n    handleInputChange = e => {\n        const field = e.target.name;\n        let value = e.target.value;\n\n        if (field === \"phone\") {\n            value = formatedPhone(value);\n        }\n\n        let contact = {\n            _id: this.state.contact._id,\n            name: this.state.contact.name,\n            phone: this.state.contact.phone,\n            email: this.state.contact.email,\n            [field]: value\n        };\n        this.setState({\n            contact\n        });\n    };\n\n    render() {\n        if (!this.state.contact) {\n            return <Loading />;\n        }\n        const { contact } = this.state;\n        return (\n            <div>\n                <form onSubmit={this.handleUpdateContact}>\n                    <Row>\n                        <TextInput\n                            s={12}\n                            l={2}\n                            m={2}\n                            xl={2}\n                            label='Name'\n                            name='name'\n                            value={contact.name}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={3}\n                            m={3}\n                            xl={3}\n                            label='Phone'\n                            name='phone'\n                            value={contact.phone}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={4}\n                            xl={4}\n                            label='Email'\n                            email\n                            validate\n                            value={contact.email}\n                            name='email'\n                            onChange={this.handleInputChange}\n                        />\n                        <Button\n                            node='button'\n                            type='submit'\n                            waves='light'\n                            style={{ marginTop: \"20px\" }}\n                        >\n                            Save\n                            <Icon left>save</Icon>\n                        </Button>\n                    </Row>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);\n"]},"metadata":{},"sourceType":"module"}