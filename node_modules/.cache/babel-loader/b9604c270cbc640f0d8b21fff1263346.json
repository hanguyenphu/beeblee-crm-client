{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AUTHENTICATE, LOGOUT, UPDATE_PROFILE, FETCH_PROVINCE, FETCH_BUSINESS } from \"../constants/action-types\";\nimport axios from \"axios\";\nimport API from \"../../utils/API/API\";\nconst initialState = {\n  user: {\n    authenticated: false\n  }\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    //this check the token in localStorage and set the default values for authenticated request from client\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\"); // API.defaults.baseURL = \"http://localhost:3000/\";\n      // API.defaults.headers.common = { Authorization: `Bearer ${token}` };\n\n      return Object.assign({}, state, {\n        user: {\n          authenticated: action.payload.authenticated,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          phone: action.payload.user.phone,\n          role: action.payload.user.role\n        }\n      });\n    }\n  } // Update profile in Profile Page\n\n\n  if (action.type === UPDATE_PROFILE) {\n    return Object.assign({}, state, {\n      user: _objectSpread({}, state.user, {\n        email: action.payload.email,\n        name: action.payload.name,\n        phone: action.payload.phone\n      })\n    });\n  }\n\n  if (action.type === FETCH_PROVINCE) {\n    return Object.assign({}, state, {\n      provinces: action.payload\n    });\n  }\n\n  if (action.type === FETCH_BUSINESS) {\n    return Object.assign({}, state, {\n      businesses: action.payload\n    });\n  } //logout the user and delete the token in localStorage and in the server as well\n\n\n  if (action.type === LOGOUT) {\n    API.post(`users/logout`).then(response => {\n      axios.defaults.baseURL = \"\";\n      axios.defaults.headers.common = {\n        Authorization: ``\n      };\n    }).catch(error => {});\n    localStorage.clear();\n    return Object.assign({}, state, {\n      user: {\n        authenticated: false\n      }\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","UPDATE_PROFILE","FETCH_PROVINCE","FETCH_BUSINESS","axios","API","initialState","user","authenticated","rootReducer","state","action","type","localStorage","getItem","token","Object","assign","payload","email","name","phone","role","provinces","businesses","post","then","response","defaults","baseURL","headers","common","Authorization","catch","error","clear"],"mappings":"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","sourcesContent":["import {\r\n  AUTHENTICATE,\r\n  LOGOUT,\r\n  UPDATE_PROFILE,\r\n  FETCH_PROVINCE,\r\n  FETCH_BUSINESS\r\n} from \"../constants/action-types\";\r\nimport axios from \"axios\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    authenticated: false\r\n  }\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === AUTHENTICATE) {\r\n    //this check the token in localStorage and set the default values for authenticated request from client\r\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      // API.defaults.baseURL = \"http://localhost:3000/\";\r\n      // API.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n      return Object.assign({}, state, {\r\n        user: {\r\n          authenticated: action.payload.authenticated,\r\n          email: action.payload.user.email,\r\n          name: action.payload.user.name,\r\n          phone: action.payload.user.phone,\r\n          role: action.payload.user.role\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Update profile in Profile Page\r\n  if (action.type === UPDATE_PROFILE) {\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        ...state.user,\r\n        email: action.payload.email,\r\n        name: action.payload.name,\r\n        phone: action.payload.phone\r\n      }\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_PROVINCE) {\r\n    return Object.assign({}, state, {\r\n      provinces: action.payload\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_BUSINESS) {\r\n    return Object.assign({}, state, {\r\n      businesses: action.payload\r\n    });\r\n  }\r\n\r\n  //logout the user and delete the token in localStorage and in the server as well\r\n  if (action.type === LOGOUT) {\r\n    API.post(`users/logout`)\r\n      .then(response => {\r\n        axios.defaults.baseURL = \"\";\r\n        axios.defaults.headers.common = { Authorization: `` };\r\n      })\r\n      .catch(error => {});\r\n    localStorage.clear();\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        authenticated: false\r\n      }\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}