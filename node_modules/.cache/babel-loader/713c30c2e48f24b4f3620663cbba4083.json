{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\projects\\\\ProjectTable.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"react-materialize\";\nimport API from \"../../utils/API/API\";\nimport Loading from \"../loading/Loading\";\nimport formatDate from \"../../utils/commons/FormatDate\";\n\nfunction mapStateToProps(state) {\n  return {};\n} //Display all project in a table\n//required Projects array as a prop\n\n\nclass ProjectTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      projects: [],\n      statuses: []\n    };\n\n    this.displayProjects = projects => {\n      const statuses = this.state.statuses;\n      return projects.map(project => {\n        const startDate = new Date(project.startDate);\n        const completedDate = new Date(project.completedDate);\n        const status = statuses.filter(status => status._id === project.status)[0];\n        return React.createElement(\"tr\", {\n          key: project._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/projects/\" + project._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, project.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, project.price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, status && React.createElement(\"p\", {\n          style: {\n            color: `${status.color}`\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, status.title)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, project.startDate && formatDate(startDate)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, project.completedDate && formatDate(completedDate)));\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.projects) {\n      this.setState(_objectSpread({}, this.state, {\n        projects: this.props.projects,\n        loading: false\n      }));\n    }\n\n    API.get(\"/statuses\").then(response => {\n      this.setState(_objectSpread({}, this.state, {\n        statuses: response.data,\n        loading: false\n      }));\n    }).catch(error => {\n      this.setState(_objectSpread({}, this.state, {\n        loading: false\n      }));\n      console.log(error);\n    });\n  }\n\n  render() {\n    const loading = this.state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n\n    const projects = this.props.projects;\n    return React.createElement(Table, {\n      className: \"animated fadeIn\",\n      striped: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      \"data-field\": \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Completed Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, projects.length > 0 ? this.displayProjects(projects) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"There is no project found!\"))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ProjectTable);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/projects/ProjectTable.jsx"],"names":["React","Component","connect","Table","API","Loading","formatDate","mapStateToProps","state","ProjectTable","loading","projects","statuses","displayProjects","map","project","startDate","Date","completedDate","status","filter","_id","name","price","color","title","componentDidMount","props","setState","get","then","response","data","catch","error","console","log","render","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AACD,C,CAED;AACA;;;AACA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC3B;AACNE,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD2B;;AAAA,SAgCnCC,eAhCmC,GAgCjBF,QAAQ,IAAI;AAAA,YACrBC,QADqB,GACT,KAAKJ,KADI,CACrBI,QADqB;AAG5B,aAAOD,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAI;AAC7B,cAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACC,SAAjB,CAAlB;AACA,cAAME,aAAa,GAAG,IAAID,IAAJ,CAASF,OAAO,CAACG,aAAjB,CAAtB;AACA,cAAMC,MAAM,GAAGP,QAAQ,CAACQ,MAAT,CAAgBD,MAAM,IAAIA,MAAM,CAACE,GAAP,KAAeN,OAAO,CAACI,MAAjD,EAAyD,CAAzD,CAAf;AAEA,eACE;AAAI,UAAA,GAAG,EAAEJ,OAAO,CAACM,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAE,eAAeN,OAAO,CAACM,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsCN,OAAO,CAACO,IAA9C,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKP,OAAO,CAACQ,KAAb,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEJ,MAAM,IAAI;AAAG,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAG,GAAEL,MAAM,CAACK,KAAM;AAAzB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyCL,MAAM,CAACM,KAAhD,CADZ,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKV,OAAO,CAACC,SAAR,IAAqBV,UAAU,CAACU,SAAD,CAApC,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,OAAO,CAACG,aAAR,IAAyBZ,UAAU,CAACY,aAAD,CAAxC,CATF,CADF;AAaD,OAlBM,CAAP;AAmBD,KAtDkC;AAAA;;AAMnCQ,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWhB,QAAf,EAAyB;AACvB,WAAKiB,QAAL,mBACK,KAAKpB,KADV;AAEEG,QAAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWhB,QAFvB;AAGED,QAAAA,OAAO,EAAE;AAHX;AAKD;;AAEDN,IAAAA,GAAG,CAACyB,GAAJ,CAAQ,WAAR,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,WAAKH,QAAL,mBACK,KAAKpB,KADV;AAEEI,QAAAA,QAAQ,EAAEmB,QAAQ,CAACC,IAFrB;AAGEtB,QAAAA,OAAO,EAAE;AAHX;AAKD,KAPD,EAQCuB,KARD,CAQOC,KAAK,IAAI;AACd,WAAKN,QAAL,mBACK,KAAKpB,KADV;AAEEE,QAAAA,OAAO,EAAE;AAFX;AAIAyB,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAdD;AAeD;;AA0BDG,EAAAA,MAAM,GAAG;AAAA,UACC3B,OADD,GACa,KAAKF,KADlB,CACCE,OADD;;AAEP,QAAIA,OAAJ,EAAa;AACX,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAJM,UAKCC,QALD,GAKc,KAAKgB,KALnB,CAKChB,QALD;AAOP,WACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAoC,MAAA,OAAO,EAAE,IAA7C;AAAmD,MAAA,UAAU,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,oBAAW,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAI,oBAAW,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAI,oBAAW,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAI,oBAAW,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAI,oBAAW,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAAC2B,MAAT,GAAgB,CAAhB,GACC,KAAKzB,eAAL,CAAqBF,QAArB,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CAJJ,CAVF,CADF;AAsBD;;AArFkC;;AAwFrC,eAAeT,OAAO,CAACK,eAAD,CAAP,CAAyBE,YAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport formatDate from \"../../utils/commons/FormatDate\"\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\n//Display all project in a table\r\n//required Projects array as a prop\r\nclass ProjectTable extends Component {\r\n  state = {\r\n    loading: true,\r\n    projects: [],\r\n    statuses: []\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.projects) {\r\n      this.setState({\r\n        ...this.state,\r\n        projects: this.props.projects,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    API.get(\"/statuses\")\r\n    .then(response => {\r\n      this.setState({\r\n        ...this.state,\r\n        statuses: response.data,\r\n        loading: false\r\n      });\r\n    })\r\n    .catch(error => {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false\r\n      });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  displayProjects = projects => {\r\n    const {statuses} = this.state\r\n\r\n    return projects.map(project => {\r\n      const startDate = new Date(project.startDate);\r\n      const completedDate = new Date(project.completedDate);\r\n      const status = statuses.filter(status => status._id === project.status)[0]\r\n\r\n      return (\r\n        <tr key={project._id}>\r\n          <td>\r\n            <a href={\"/projects/\" + project._id}>{project.name}</a>\r\n          </td>\r\n          <td>{project.price}</td>\r\n          <td>\r\n           {status && <p style={{ color: `${status.color}` }}>{status.title}</p>}\r\n          </td>\r\n          <td>{project.startDate && formatDate(startDate)}</td>\r\n          <td>{project.completedDate && formatDate(completedDate)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    const { projects } = this.props;\r\n\r\n    return (\r\n      <Table className=\"animated fadeIn\"  striped={true} responsive={true}>\r\n        <thead>\r\n          <tr>\r\n            <th data-field=\"id\">Project Name</th>\r\n            <th data-field=\"name\">Price</th>\r\n            <th data-field=\"price\">Status</th>\r\n            <th data-field=\"price\">Start Date</th>\r\n            <th data-field=\"price\">Completed Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.length>0 ? (\r\n            this.displayProjects(projects)\r\n          ) : (\r\n            <tr>\r\n              <td>There is no project found!</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectTable);\r\n"]},"metadata":{},"sourceType":"module"}