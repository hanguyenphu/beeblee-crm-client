{"ast":null,"code":"import{createStore}from\"redux\";import rootReducer from\"../reducers/index\";//persists the user data into localStorage\n//that prevent refreshing erase redux states\nfunction saveToLocalStorage(user){try{var serializedUser=JSON.stringify(user);localStorage.setItem(\"user\",serializedUser);}catch(e){console.log(e);}}//load the saved user data from localstorage for Redux state\nfunction loadFromLocalStorage(){try{var serializedUser=localStorage.getItem(\"user\");if(serializedUser===null){var _user=new Object({authenticated:false});return Object.assign({},{user:_user});}var user=JSON.parse(serializedUser);return Object.assign({},{user:user});}catch(e){var _user2=new Object({authenticated:false});return Object.assign({},{user:_user2});}}//User Data load from localStorage\nvar persistedState=loadFromLocalStorage();// export const configureStore = () => {\n//     const store = createStore(rootReducer,  persistedState,\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n//     return store;\n// }\nvar store=createStore(rootReducer,persistedState,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());store.subscribe(function(){return saveToLocalStorage(store.getState().user);});export default store;","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/redux/store/index.js"],"names":["createStore","rootReducer","saveToLocalStorage","user","serializedUser","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","Object","authenticated","assign","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState"],"mappings":"AAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CAEA;AACA;AACA,QAASC,CAAAA,kBAAT,CAA4BC,IAA5B,CAAkC,CAC9B,GAAI,CACA,GAAMC,CAAAA,cAAc,CAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAvB,CACAI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BJ,cAA7B,EACH,CAAC,MAAOK,CAAP,CAAU,CACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACH,CACJ,CAED;AACA,QAASG,CAAAA,oBAAT,EAAgC,CAC5B,GAAI,CACA,GAAMR,CAAAA,cAAc,CAAGG,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAvB,CACA,GAAIT,cAAc,GAAK,IAAvB,CAA6B,CACzB,GAAMD,CAAAA,KAAI,CAAG,GAAIW,CAAAA,MAAJ,CAAW,CACpBC,aAAa,CAAE,KADK,CAAX,CAAb,CAGA,MAAOD,CAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,CAAkB,CAAEb,IAAI,CAAJA,KAAF,CAAlB,CAAP,CACH,CACD,GAAMA,CAAAA,IAAI,CAAGE,IAAI,CAACY,KAAL,CAAWb,cAAX,CAAb,CACA,MAAOU,CAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,CAAkB,CAAEb,IAAI,CAAJA,IAAF,CAAlB,CAAP,CAEH,CAAC,MAAOM,CAAP,CAAU,CACR,GAAMN,CAAAA,MAAI,CAAG,GAAIW,CAAAA,MAAJ,CAAW,CACpBC,aAAa,CAAE,KADK,CAAX,CAAb,CAIA,MAAOD,CAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,CAAkB,CAAEb,IAAI,CAAJA,MAAF,CAAlB,CAAP,CACH,CACJ,CAED;AACA,GAAMe,CAAAA,cAAc,CAAGN,oBAAoB,EAA3C,CAIA;AACA;AACA;AAEA;AACA;AAEA,GAAMO,CAAAA,KAAK,CAAGnB,WAAW,CACrBC,WADqB,CAErBiB,cAFqB,CAGrBE,MAAM,CAACC,4BAAP,EAAuCD,MAAM,CAACC,4BAAP,EAHlB,CAAzB,CAMAF,KAAK,CAACG,SAAN,CAAgB,iBAAMpB,CAAAA,kBAAkB,CAACiB,KAAK,CAACI,QAAN,GAAiBpB,IAAlB,CAAxB,EAAhB,EAEA,cAAegB,CAAAA,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\n//persists the user data into localStorage\r\n//that prevent refreshing erase redux states\r\nfunction saveToLocalStorage(user) {\r\n    try {\r\n        const serializedUser = JSON.stringify(user);\r\n        localStorage.setItem(\"user\", serializedUser);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//load the saved user data from localstorage for Redux state\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedUser = localStorage.getItem(\"user\");\r\n        if (serializedUser === null) {\r\n            const user = new Object({\r\n                authenticated: false\r\n            });\r\n            return Object.assign({}, { user });\r\n        }\r\n        const user = JSON.parse(serializedUser);\r\n        return Object.assign({}, { user });\r\n\r\n    } catch (e) {\r\n        const user = new Object({\r\n            authenticated: false\r\n        });\r\n\r\n        return Object.assign({}, { user });\r\n    }\r\n}\r\n\r\n//User Data load from localStorage\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n\r\n\r\n// export const configureStore = () => {\r\n//     const store = createStore(rootReducer,  persistedState,\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n//     return store;\r\n// }\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState().user));\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}