{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { AUTHENTICATE, LOGOUT, UPDATE_PROFILE, FETCH_PROVINCE, FETCH_BUSINESS } from \"../constants/action-types\";\nimport axios from \"axios\";\nimport API from \"../../utils/API/API\";\nconst initialState = {\n  user: {\n    authenticated: false\n  },\n  businesses: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    //this check the token in localStorage and set the default values for authenticated request from client\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\n      const token = localStorage.getItem(\"token\");\n      API.defaults.baseURL = 'http://localhost:3000/';\n      API.defaults.headers.common = {\n        'Authorization': `Bearer ${token}`\n      };\n      return Object.assign({}, state, {\n        user: {\n          authenticated: action.payload.authenticated,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          phone: action.payload.user.phone\n        }\n      });\n    }\n  } // Update profile in Profile Page\n\n\n  if (action.type === UPDATE_PROFILE) {\n    return Object.assign({}, state, {\n      user: _objectSpread({}, state.user, {\n        email: action.payload.email,\n        name: action.payload.name,\n        phone: action.payload.phone\n      })\n    });\n  }\n\n  if (action.type === FETCH_PROVINCE) {\n    return Object.assign({}, state, {\n      provinces: action.payload\n    });\n  }\n\n  if (action.type === FETCH_BUSINESS) {\n    return Object.assign({}, state, {\n      businesses: action.payload\n    });\n  } //logout the user and delete the token in localStorage and in the server as well\n\n\n  if (action.type === LOGOUT) {\n    API.post(`users/logout`).then(response => {\n      console.log(response.data);\n      axios.defaults.baseURL = \"\";\n      axios.defaults.headers.common = {\n        Authorization: ``\n      };\n    }).catch(error => {});\n    localStorage.clear();\n    return Object.assign({}, state, {\n      user: {\n        authenticated: false\n      }\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","UPDATE_PROFILE","FETCH_PROVINCE","FETCH_BUSINESS","axios","API","initialState","user","authenticated","businesses","rootReducer","state","action","type","localStorage","getItem","token","defaults","baseURL","headers","common","Object","assign","payload","email","name","phone","provinces","post","then","response","console","log","data","Authorization","catch","error","clear"],"mappings":"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","sourcesContent":["import {\r\n    AUTHENTICATE,\r\n    LOGOUT,\r\n    UPDATE_PROFILE,\r\n    FETCH_PROVINCE,\r\n    FETCH_BUSINESS\r\n} from \"../constants/action-types\";\r\nimport axios from \"axios\";\r\nimport API from \"../../utils/API/API\";\r\n\r\n\r\nconst initialState = {\r\n    user: {\r\n        authenticated: false\r\n    },\r\n    businesses: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === AUTHENTICATE) {\r\n        //this check the token in localStorage and set the default values for authenticated request from client\r\n        if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\r\n            const token = localStorage.getItem(\"token\");\r\n            API.defaults.baseURL = 'http://localhost:3000/'\r\n            API.defaults.headers.common= {'Authorization': `Bearer ${token}`}\r\n\r\n            return Object.assign({}, state, {\r\n                user: {\r\n                    authenticated: action.payload.authenticated,\r\n                    email: action.payload.user.email,\r\n                    name: action.payload.user.name,\r\n                    phone: action.payload.user.phone\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Update profile in Profile Page\r\n    if (action.type === UPDATE_PROFILE) {\r\n        return Object.assign({}, state, {\r\n            user: {\r\n                ...state.user,\r\n                email: action.payload.email,\r\n                name: action.payload.name,\r\n                phone: action.payload.phone\r\n            }\r\n        });\r\n    }\r\n\r\n    if(action.type === FETCH_PROVINCE) {\r\n        return Object.assign({}, state, {\r\n            provinces: action.payload\r\n        })\r\n    }\r\n\r\n    if(action.type === FETCH_BUSINESS) {\r\n        return Object.assign({}, state, {\r\n            businesses: action.payload\r\n        })\r\n    }\r\n\r\n    //logout the user and delete the token in localStorage and in the server as well\r\n    if (action.type === LOGOUT) {\r\n        API.post(`users/logout`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                axios.defaults.baseURL = \"\";\r\n                axios.defaults.headers.common = { Authorization: `` };\r\n            })\r\n            .catch(error => {});\r\n            localStorage.clear();\r\n        return Object.assign({}, state, {\r\n            user: {\r\n                authenticated: false\r\n            }\r\n        });\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}