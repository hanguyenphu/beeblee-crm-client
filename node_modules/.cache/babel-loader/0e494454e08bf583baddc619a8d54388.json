{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/BusinessModalDetail.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, TextInput, Select } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\n\nclass BusinessModalDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      business: this.props.business\n    });\n    this.getBusinessDetail(this.props.business._id);\n  }\n\n  getBusinessDetail(id) {\n    this.setState(_objectSpread({}, this.state, {\n      loading: true\n    }));\n    axios.get(`businesses/${id}`).then(response => {\n      if (response.data.businesses) {\n        this.setState(_objectSpread({}, this.state, {\n          contacts: response.data.businesses.contacts,\n          province: response.data.businesses.province,\n          loading: false\n        }));\n      }\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  displayProvince(_id) {\n    const provinces = this.props.provinces;\n    const province = provinces.filter(province => province._id === _id)[0];\n    return React.createElement(Select, {\n      options: {\n        classes: \"\",\n        dropdownOptions: {\n          alignment: \"center\",\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: true,\n          container: null,\n          coverTrigger: true,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }\n      },\n      value: province._id,\n      name: \"province\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Select Province\"), provinces.map(province => {\n      return React.createElement(\"option\", {\n        className: \"black-text\",\n        key: province._id,\n        value: province._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, province.name);\n    }));\n  }\n\n  render() {\n    const business = this.props.business;\n    return React.createElement(Modal, {\n      actions: [React.createElement(Button, {\n        flat: true,\n        modal: \"close\",\n        node: \"button\",\n        waves: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Close\")],\n      open: true,\n      style: {\n        boder: \"none\"\n      },\n      bottomSheet: false,\n      fixedFooter: false,\n      header: \"Business Detail\",\n      id: \"modal1\",\n      options: {\n        dismissible: true,\n        endingTop: \"10%\",\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        opacity: 0.5,\n        outDuration: 250,\n        preventScrolling: true,\n        startingTop: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Name:\",\n      value: business.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Address\",\n      value: business.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Phone:\",\n      value: business.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.displayProvince(business.province))) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    provinces: state.provinces\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessModalDetail);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/BusinessModalDetail.jsx"],"names":["React","Component","connect","Modal","Button","Row","TextInput","Select","Loading","axios","BusinessModalDetail","constructor","props","state","componentDidMount","setState","business","getBusinessDetail","_id","id","loading","get","then","response","data","businesses","contacts","province","catch","err","displayProvince","provinces","filter","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","map","name","render","boder","dismissible","endingTop","opacity","preventScrolling","startingTop","address","phone","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, TextInput, Select } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\n\nclass BusinessModalDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.setState({\n            business: this.props.business\n        });\n        this.getBusinessDetail(this.props.business._id)\n    }\n\n    getBusinessDetail (id) {\n        this.setState({\n            ...this.state,\n            loading: true\n        })\n        axios.get(`businesses/${id}`).then(response => {\n            if(response.data.businesses) {\n                this.setState({\n                    ...this.state,\n                    contacts: response.data.businesses.contacts,\n                    province: response.data.businesses.province,\n                    loading:false\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                loading:false\n            })\n        })\n    }\n\n    displayProvince (_id) {\n        const {provinces} = this.props\n        const province = provinces.filter(province => province._id === _id)[0]\n        return     <Select\n       \n        options={{\n            classes: \"\",\n            dropdownOptions: {\n                alignment: \"center\",\n                autoTrigger: true,\n                closeOnClick: true,\n                constrainWidth: true,\n                container: null,\n                coverTrigger: true,\n                hover: false,\n                inDuration: 150,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                outDuration: 250\n            }\n        }}\n        value={province._id}\n        name='province'\n    >\n        <option disabled value=''>\n            Select Province\n        </option>\n        {provinces.map(province => {\n            return (\n                <option\n                    className='black-text'\n                    key={province._id}\n                    value={province._id}\n                >\n                    {province.name}\n                </option>\n            );\n        })}\n    </Select>\n    }\n\n    render() {\n        const { business } = this.props;\n      \n\n        return (\n            <Modal\n                actions={[\n                    <Button flat modal='close' node='button' waves='green'>\n                        Close\n                    </Button>\n                ]}\n                open={true}\n                style={{ boder: \"none\" }}\n                bottomSheet={false}\n                fixedFooter={false}\n                header='Business Detail'\n                id='modal1'\n                options={{\n                    dismissible: true,\n                    endingTop: \"10%\",\n                    inDuration: 250,\n                    onCloseEnd: null,\n                    onCloseStart: null,\n                    onOpenEnd: null,\n                    onOpenStart: null,\n                    opacity: 0.5,\n                    outDuration: 250,\n                    preventScrolling: true,\n                    startingTop: \"4%\"\n                }}\n            >\n                {!this.state.loading? \n                <form>\n                    <Row>\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Name:'\n                            value={business.name}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Address'\n                            value={business.address}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Phone:'\n                            value={business.phone}\n                        />\n\n                        {this.displayProvince(business.province)}\n\n                    \n                    </Row>\n                </form> : <Loading/>}\n            </Modal>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { provinces: state.provinces };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BusinessModalDetail);\n"]},"metadata":{},"sourceType":"module"}