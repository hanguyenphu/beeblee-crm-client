{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\common\\\\ProvinceDropdown.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Select } from \"react-materialize\";\nimport API from \"../../utils/API/API\";\nimport Loading from \"../loading/Loading\";\n\nfunction mapStateToProps(state) {\n  return {\n    provinces: state.provinces\n  };\n} // Display province drop down, with a props called handleChange\n\n\nclass ProvinceDropdown extends Component {\n  componentDidMount() {\n    if (this.props.provinces) {\n      this.setState({\n        provinces: this.props.provinces,\n        province: this.props.province\n      });\n    } else {\n      API.get('/provinces').then(response => {\n        console.log(response.data);\n        this.setState({\n          provinces: response.data,\n          province: this.props.province\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          provinces = _this$props.provinces,\n          province = _this$props.province;\n    return React.createElement(Select, {\n      options: {\n        classes: \"\",\n        dropdownOptions: {\n          alignment: \"left\",\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: true,\n          container: null,\n          coverTrigger: true,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }\n      },\n      value: province,\n      name: \"province\",\n      onChange: this.props.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Select Province\"), provinces.map(province => {\n      return React.createElement(\"option\", {\n        className: \"black-text\",\n        key: province._id,\n        value: province._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, province.name);\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ProvinceDropdown);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/common/ProvinceDropdown.jsx"],"names":["React","Component","connect","Select","API","Loading","mapStateToProps","state","provinces","ProvinceDropdown","componentDidMount","props","setState","province","get","then","response","console","log","data","catch","error","render","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","handleChange","map","_id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADZ,GAAP;AAGD,C,CAED;;;AACA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AAEvCS,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKC,KAAL,CAAWH,SAAd,EAAwB;AACtB,WAAKI,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWH,SADV;AAEZK,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFT,OAAd;AAID,KALD,MAKO;AACLT,MAAAA,GAAG,CAACU,GAAJ,CAAQ,YAAR,EAAsBC,IAAtB,CAA2BC,QAAQ,IAAI;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,aAAKP,QAAL,CAAc;AACZJ,UAAAA,SAAS,EAAEQ,QAAQ,CAACG,IADR;AAEZN,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFT,SAAd;AAID,OAND,EAMGO,KANH,CAMSC,KAAK,IAAI;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,OARD;AASD;AAEF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKX,KAD9B;AAAA,UACCH,SADD,eACCA,SADD;AAAA,UACYK,QADZ,eACYA,QADZ;AAGP,WACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE;AACPU,QAAAA,OAAO,EAAE,EADF;AAEPC,QAAAA,eAAe,EAAE;AACfC,UAAAA,SAAS,EAAE,MADI;AAEfC,UAAAA,WAAW,EAAE,IAFE;AAGfC,UAAAA,YAAY,EAAE,IAHC;AAIfC,UAAAA,cAAc,EAAE,IAJD;AAKfC,UAAAA,SAAS,EAAE,IALI;AAMfC,UAAAA,YAAY,EAAE,IANC;AAOfC,UAAAA,KAAK,EAAE,KAPQ;AAQfC,UAAAA,UAAU,EAAE,GARG;AASfC,UAAAA,UAAU,EAAE,IATG;AAUfC,UAAAA,YAAY,EAAE,IAVC;AAWfC,UAAAA,SAAS,EAAE,IAXI;AAYfC,UAAAA,WAAW,EAAE,IAZE;AAafC,UAAAA,WAAW,EAAE;AAbE;AAFV,OADX;AAmBE,MAAA,KAAK,EAAExB,QAnBT;AAoBE,MAAA,IAAI,EAAC,UApBP;AAqBE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAW2B,YArBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAuBE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAvBF,EA0BG9B,SAAS,CAAC+B,GAAV,CAAc1B,QAAQ,IAAI;AACzB,aACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,GAAG,EAAEA,QAAQ,CAAC2B,GAFhB;AAGE,QAAA,KAAK,EAAE3B,QAAQ,CAAC2B,GAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG3B,QAAQ,CAAC4B,IALZ,CADF;AASD,KAVA,CA1BH,CADF;AAwCD;;AAjEsC;;AAoEzC,eAAevC,OAAO,CAACI,eAAD,CAAP,CAAyBG,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Select } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    provinces: state.provinces\r\n  };\r\n}\r\n\r\n// Display province drop down, with a props called handleChange\r\nclass ProvinceDropdown extends Component {\r\n\r\n  componentDidMount(){\r\n    if(this.props.provinces){\r\n      this.setState({\r\n        provinces: this.props.provinces,\r\n        province: this.props.province\r\n      })\r\n    } else {\r\n      API.get('/provinces').then(response => {\r\n        console.log(response.data)\r\n        this.setState({\r\n          provinces: response.data,\r\n          province: this.props.province\r\n        })\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { provinces, province } = this.props;\r\n\r\n    return (\r\n      <Select\r\n        options={{\r\n          classes: \"\",\r\n          dropdownOptions: {\r\n            alignment: \"left\",\r\n            autoTrigger: true,\r\n            closeOnClick: true,\r\n            constrainWidth: true,\r\n            container: null,\r\n            coverTrigger: true,\r\n            hover: false,\r\n            inDuration: 150,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            outDuration: 250\r\n          }\r\n        }}\r\n        value={province}\r\n        name=\"province\"\r\n        onChange={this.props.handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          Select Province\r\n        </option>\r\n        {provinces.map(province => {\r\n          return (\r\n            <option\r\n              className=\"black-text\"\r\n              key={province._id}\r\n              value={province._id}\r\n            >\r\n              {province.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceDropdown);\r\n"]},"metadata":{},"sourceType":"module"}