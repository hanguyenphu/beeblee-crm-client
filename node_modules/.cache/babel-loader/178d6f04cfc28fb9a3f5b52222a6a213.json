{"ast":null,"code":"import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\"; //persists the user data into localStorage\n//that prevent refreshing erase redux states\n\nfunction saveToLocalStorage(user) {\n  try {\n    const serializedUser = JSON.stringify(user);\n    localStorage.setItem(\"user\", serializedUser);\n  } catch (e) {\n    console.log(e);\n  }\n} //load the saved user data from localstorage for Redux state\n\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedUser = localStorage.getItem(\"user\");\n\n    if (serializedUser === null) {\n      const user = new Object({\n        authenticated: false\n      });\n      return Object.assign({}, {\n        user\n      });\n    }\n\n    const user = JSON.parse(serializedUser);\n    return Object.assign({}, {\n      user\n    });\n  } catch (e) {\n    const user = new Object({\n      authenticated: false\n    });\n    return Object.assign({}, {\n      user\n    });\n  }\n} //User Data load from localStorage\n\n\nconst persistedState = loadFromLocalStorage(); // export const configureStore = () => {\n//     const store = createStore(rootReducer,  persistedState,\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n//     return store;\n// }\n\nconst store = createStore(rootReducer, persistedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nstore.subscribe(() => saveToLocalStorage(store.getState().user));\nexport default store;","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/redux/store/index.js"],"names":["createStore","rootReducer","saveToLocalStorage","user","serializedUser","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","Object","authenticated","assign","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;AACA;;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;AAC9B,MAAI;AACA,UAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAvB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,cAA7B;AACH,GAHD,CAGE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,C,CAED;;;AACA,SAASG,oBAAT,GAAgC;AAC5B,MAAI;AACA,UAAMR,cAAc,GAAGG,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAvB;;AACA,QAAIT,cAAc,KAAK,IAAvB,EAA6B;AACzB,YAAMD,IAAI,GAAG,IAAIW,MAAJ,CAAW;AACpBC,QAAAA,aAAa,EAAE;AADK,OAAX,CAAb;AAGA,aAAOD,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkB;AAAEb,QAAAA;AAAF,OAAlB,CAAP;AACH;;AACD,UAAMA,IAAI,GAAGE,IAAI,CAACY,KAAL,CAAWb,cAAX,CAAb;AACA,WAAOU,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkB;AAAEb,MAAAA;AAAF,KAAlB,CAAP;AAEH,GAXD,CAWE,OAAOM,CAAP,EAAU;AACR,UAAMN,IAAI,GAAG,IAAIW,MAAJ,CAAW;AACpBC,MAAAA,aAAa,EAAE;AADK,KAAX,CAAb;AAIA,WAAOD,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkB;AAAEb,MAAAA;AAAF,KAAlB,CAAP;AACH;AACJ,C,CAED;;;AACA,MAAMe,cAAc,GAAGN,oBAAoB,EAA3C,C,CAIA;AACA;AACA;AAEA;AACA;;AAEA,MAAMO,KAAK,GAAGnB,WAAW,CACrBC,WADqB,EAErBiB,cAFqB,EAGrBE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHlB,CAAzB;AAMAF,KAAK,CAACG,SAAN,CAAgB,MAAMpB,kBAAkB,CAACiB,KAAK,CAACI,QAAN,GAAiBpB,IAAlB,CAAxC;AAEA,eAAegB,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\n//persists the user data into localStorage\r\n//that prevent refreshing erase redux states\r\nfunction saveToLocalStorage(user) {\r\n    try {\r\n        const serializedUser = JSON.stringify(user);\r\n        localStorage.setItem(\"user\", serializedUser);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//load the saved user data from localstorage for Redux state\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedUser = localStorage.getItem(\"user\");\r\n        if (serializedUser === null) {\r\n            const user = new Object({\r\n                authenticated: false\r\n            });\r\n            return Object.assign({}, { user });\r\n        }\r\n        const user = JSON.parse(serializedUser);\r\n        return Object.assign({}, { user });\r\n\r\n    } catch (e) {\r\n        const user = new Object({\r\n            authenticated: false\r\n        });\r\n\r\n        return Object.assign({}, { user });\r\n    }\r\n}\r\n\r\n//User Data load from localStorage\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n\r\n\r\n// export const configureStore = () => {\r\n//     const store = createStore(rootReducer,  persistedState,\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n//     return store;\r\n// }\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState().user));\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}