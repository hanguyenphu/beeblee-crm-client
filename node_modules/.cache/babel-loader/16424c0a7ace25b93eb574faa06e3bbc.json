{"ast":null,"code":"import { AUTHENTICATE, LOGOUT } from \"../constants/action-types\";\nimport axios from \"axios\";\nconst initialState = {\n  authenticated: false,\n  user: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    //this check the token in localStorage and set the default values for authenticated request from client\n    if (localStorage.getItem('user') && localStorage.getItem('token')) {\n      const token = localStorage.getItem('token');\n      axios.defaults.baseURL = 'http://localhost:3000/';\n      axios.defaults.headers.common = {\n        'Authorization': `Bearer ${token}`\n      };\n      console.log(\"login successful\");\n      return Object.assign({}, state, {\n        authenticated: action.payload.authenticated,\n        user: {\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          phone: action.payload.user.phone\n        }\n      });\n    }\n  }\n\n  if (action.type === LOGOUT) {\n    localStorage.clear();\n    axios.post(`users/logout`).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    return Object.assign({}, state, {\n      authenticated: false,\n      user: {}\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","axios","initialState","authenticated","user","rootReducer","state","action","type","localStorage","getItem","token","defaults","baseURL","headers","common","console","log","Object","assign","payload","email","name","phone","clear","post","then","response","catch","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAqC,2BAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AAE/C,MAAIA,MAAM,CAACC,IAAP,KAAgBT,YAApB,EAAkC;AAC9B;AACA,QAAGU,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnC,EAAkE;AAC9D,YAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAT,MAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;AACAZ,MAAAA,KAAK,CAACW,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,GAAgC;AAAC,yBAAkB,UAASJ,KAAM;AAAlC,OAAhC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,EAAyB;AAC5BH,QAAAA,aAAa,EAAEI,MAAM,CAACa,OAAP,CAAejB,aADF;AAE5BC,QAAAA,IAAI,EAAE;AACFiB,UAAAA,KAAK,EAAEd,MAAM,CAACa,OAAP,CAAehB,IAAf,CAAoBiB,KADzB;AAEFC,UAAAA,IAAI,EAAEf,MAAM,CAACa,OAAP,CAAehB,IAAf,CAAoBkB,IAFxB;AAGFC,UAAAA,KAAK,EAAEhB,MAAM,CAACa,OAAP,CAAehB,IAAf,CAAoBmB;AAHzB;AAFsB,OAAzB,CAAP;AAQH;AACJ;;AAED,MAAIhB,MAAM,CAACC,IAAP,KAAgBR,MAApB,EAA4B;AACxBS,IAAAA,YAAY,CAACe,KAAb;AACAvB,IAAAA,KAAK,CAACwB,IAAN,CAAY,cAAZ,EAA2BC,IAA3B,CAAgCC,QAAQ,IAAI;AACxCX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AAEH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,KALD;AAMA,WAAOX,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,EAAyB;AAC5BH,MAAAA,aAAa,EAAE,KADa;AAE5BC,MAAAA,IAAI,EAAE;AAFsB,KAAzB,CAAP;AAMH;;AACD,SAAOE,KAAP;AACH;;AAED,eAAeD,WAAf","sourcesContent":["import { AUTHENTICATE, LOGOUT } from \"../constants/action-types\";\nimport axios from \"axios\"\n\nconst initialState = {\n    authenticated: false,\n    user: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n\n    if (action.type === AUTHENTICATE) {\n        //this check the token in localStorage and set the default values for authenticated request from client\n        if(localStorage.getItem('user') && localStorage.getItem('token')) {\n            const token = localStorage.getItem('token')\n            axios.defaults.baseURL = 'http://localhost:3000/'\n            axios.defaults.headers.common = {'Authorization': `Bearer ${token}`}\n            console.log(\"login successful\")\n            return Object.assign({}, state, {\n                authenticated: action.payload.authenticated,\n                user: {\n                    email: action.payload.user.email,\n                    name: action.payload.user.name,\n                    phone: action.payload.user.phone\n                }\n            });\n        }\n    }\n\n    if (action.type === LOGOUT) {\n        localStorage.clear()\n        axios.post(`users/logout`).then(response => {\n            console.log(response)\n           \n        }).catch(error => {\n            console.log(error)\n        })\n        return Object.assign({}, state, {\n            authenticated: false,\n            user: {\n            }\n        })\n       \n    }\n    return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}