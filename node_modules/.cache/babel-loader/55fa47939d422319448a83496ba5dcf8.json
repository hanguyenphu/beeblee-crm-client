{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\upload\\\\UploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, TextInput, Button } from \"react-materialize\";\nimport API from \"../../utils/API/API\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass UploadForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      upload: {\n        title: \"\",\n        description: \"\",\n        file: null\n      },\n      edited: false,\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const upload = this.state.upload;\n      const projectId = this.props.projectId;\n      let data = new FormData();\n      data.append('file', upload.file);\n      data.append('title', upload.title);\n      data.append('description', upload.description);\n      API.post(`/uploads/${projectId}`, data).then(response => {\n        this.setState({\n          successMessage: \"File Upload Successfully\",\n          errorMessage: \"\"\n        });\n        this.props.getProjectDetail();\n      }).catch(error => {\n        this.setState({\n          successMessage: \"\",\n          errorMessage: \"Errors have been occurred!\"\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      const field = e.target.name;\n      let upload = this.state.upload;\n\n      if (field === \"file\") {\n        upload.file = e.target.files[0];\n      } else {\n        upload[field] = e.target.value;\n      }\n\n      this.setState({\n        upload,\n        edited: true\n      });\n    };\n  }\n\n  render() {\n    const edited = this.state.edited;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Title:\",\n      name: \"title\" //   value={account.domain}\n      ,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Description:\",\n      name: \"description\" //   value={account.domain}\n      ,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      label: \"Select File\",\n      type: \"file\",\n      name: \"file\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      className: edited ? \"gradient-btn btn-primary\" : \"\",\n      waves: \"green\",\n      disabled: !edited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.successMessage && React.createElement(Row, {\n      className: \"animated shake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"green-text animated bounceOutLeft delay-3s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.successMessage)), this.state.errorMessage && React.createElement(Row, {\n      className: \"animated rubberBand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"red-text animated bounceOutLeft delay-3s \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.errorMessage))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(UploadForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/upload/UploadForm.jsx"],"names":["React","Component","connect","Row","TextInput","Button","API","mapStateToProps","state","UploadForm","upload","title","description","file","edited","successMessage","errorMessage","handleSubmit","e","preventDefault","projectId","props","data","FormData","append","post","then","response","setState","getProjectDetail","catch","error","handleChange","field","target","name","files","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, TextInput, Button } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadForm extends Component {\r\n    state = {\r\n        upload: {\r\n            title: \"\",\r\n            description:\"\",\r\n            file: null\r\n        },\r\n        edited: false,\r\n        successMessage:\"\",\r\n        errorMessage:\"\"\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {upload} = this.state\r\n        const {projectId} = this.props\r\n        let data = new FormData()\r\n        data.append('file', upload.file)\r\n        data.append('title', upload.title)\r\n        data.append('description',upload.description)\r\n        API.post(`/uploads/${projectId}`, data).then(response => {\r\n            this.setState({\r\n                successMessage:\"File Upload Successfully\",\r\n                errorMessage:\"\"\r\n            })\r\n            this.props.getProjectDetail()\r\n        }).catch(error => {\r\n            this.setState({\r\n                successMessage:\"\",\r\n                errorMessage:\"Errors have been occurred!\"\r\n            })\r\n        })\r\n    }\r\n    handleChange = (e)=> {\r\n        const field = e.target.name\r\n        let upload = this.state.upload\r\n        if(field === \"file\"){\r\n            upload.file = e.target.files[0]\r\n        } else {\r\n            upload[field] = e.target.value\r\n        }\r\n        this.setState({\r\n            upload,\r\n            edited: true\r\n        })\r\n    }\r\n  render() {\r\n      const {edited} = this.state\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Title:\"\r\n              name=\"title\"\r\n              //   value={account.domain}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              //   value={account.domain}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Select File\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-primary\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Submit\r\n            </Button>\r\n            </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadForm);\r\n"]},"metadata":{},"sourceType":"module"}