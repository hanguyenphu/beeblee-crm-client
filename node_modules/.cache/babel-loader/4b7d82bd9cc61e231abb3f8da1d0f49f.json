{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/profile/Profile.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, TextInput, Button, Icon } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { update_profile } from \"../../redux/actions/index\";\nimport API from \"../../utils/API/API\";\nimport formatPhone from \"../../utils/commons/FormatPhone\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update_profile: newProfile => dispatch(update_profile(newProfile))\n  };\n}\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const user = _objectSpread({}, this.state.user);\n\n      const field = e.target.name;\n      let newValue = e.target.value;\n\n      if (field === \"phone\") {\n        newValue = formatPhone(newValue);\n      }\n\n      user[field] = newValue;\n      this.setState({\n        user\n      });\n    };\n\n    this.handlePasswordInputChange = e => {\n      const field = e.target.name;\n      const newValue = e.target.value;\n      this.setState({\n        [field]: newValue\n      });\n    };\n\n    this.handleSubmitNewPassword = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            currentPassword = _this$state.currentPassword,\n            newPassword = _this$state.newPassword,\n            repeatPassword = _this$state.repeatPassword;\n      this.setState({\n        errMessage: \"\",\n        sussess: false\n      });\n\n      if (newPassword !== repeatPassword) {\n        this.setState({\n          errMessage: \"Passwords do not match!\"\n        });\n      } else {\n        const data = {\n          currentPassword,\n          newPassword\n        };\n        API.patch(`/users/update/password`, {\n          data\n        }).then(response => {\n          this.setState({\n            sussess: true,\n            currentPassword: \"\",\n            newPassword: \"\",\n            repeatPassword: \"\"\n          });\n        }).catch(error => {\n          {\n            this.setState({\n              errMessage: \"Incorrect Current Password or some errors have been occurred\"\n            });\n          }\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = this.state.user;\n      this.setState({\n        errMessage: \"\",\n        sussess: false\n      }); //get the token for verifying request\n      // this.includeTokenWithRequest();\n\n      API.patch(`users/update/profil`, {\n        data\n      }).then(response => {\n        const user = response.data;\n        this.props.update_profile(user);\n        this.setState({\n          sussess: true\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          errMessage: \"Some errors has been occurred!\"\n        });\n      });\n    };\n\n    this.state = {\n      user: {\n        name: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      currentPassword: \"\",\n      newPassword: \"\",\n      repeatPassword: \"\",\n      errMessage: \"\",\n      sussess: false\n    };\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n    this.setState(prevState => _objectSpread({}, prevState, {\n      user: _objectSpread({}, this.state.user, {\n        email: user.email,\n        name: user.name,\n        phone: user.phone\n      })\n    }));\n  }\n\n  render() {\n    if (!this.state.user) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n\n    const _this$state2 = this.state,\n          user = _this$state2.user,\n          currentPassword = _this$state2.currentPassword,\n          newPassword = _this$state2.newPassword,\n          repeatPassword = _this$state2.repeatPassword,\n          errMessage = _this$state2.errMessage,\n          sussess = _this$state2.sussess;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        backgroundColor: \"white\",\n        marginTop: \"30px\",\n        padding: \"30px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"User Profile\"), sussess && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"green-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Update Sussessfully\", \" \"))), errMessage && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \" deep-orange-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, errMessage || \"\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"Name\",\n      value: user.name,\n      name: \"name\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      email: true,\n      validate: true,\n      disabled: true,\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"Email\",\n      value: user.email,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"Phone\",\n      name: \"phone\",\n      value: user.phone,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"send\")))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmitNewPassword,\n      style: {\n        backgroundColor: \"white\",\n        padding: \"30px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(Col, {\n      s: 12,\n      m: 12,\n      l: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      password: true,\n      required: true,\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"Current Password\",\n      name: \"currentPassword\",\n      value: currentPassword,\n      onChange: this.handlePasswordInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      password: true,\n      required: true,\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"New Password\",\n      name: \"newPassword\",\n      value: newPassword,\n      onChange: this.handlePasswordInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(Col, {\n      s: 12,\n      m: 6,\n      l: 6,\n      xl: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      password: true,\n      required: true,\n      s: 12,\n      l: 12,\n      m: 12,\n      label: \"Repeat Password\",\n      name: \"repeatPassword\",\n      value: repeatPassword,\n      onChange: this.handlePasswordInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Change Password\", React.createElement(Icon, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"lock\")))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/profile/Profile.jsx"],"names":["React","Component","Row","Col","TextInput","Button","Icon","connect","Loading","axios","update_profile","API","formatPhone","mapStateToProps","state","user","mapDispatchToProps","dispatch","newProfile","Profile","constructor","props","handleInputChange","e","field","target","name","newValue","value","setState","handlePasswordInputChange","handleSubmitNewPassword","preventDefault","currentPassword","newPassword","repeatPassword","errMessage","sussess","data","patch","then","response","catch","error","handleSubmit","console","log","email","phone","componentDidMount","prevState","render","backgroundColor","marginTop","padding","boxShadow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, TextInput, Button, Icon } from \"react-materialize\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { update_profile } from \"../../redux/actions/index\";\nimport API from \"../../utils/API/API\";\nimport formatPhone from \"../../utils/commons/FormatPhone\"\n\nconst mapStateToProps = state => {\n    return { user: state.user };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        update_profile: newProfile => dispatch(update_profile(newProfile))\n    };\n}\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {\n                name: \"\",\n                email: \"\",\n                phone: \"\"\n            },\n            currentPassword: \"\",\n            newPassword: \"\",\n            repeatPassword: \"\",\n            errMessage: \"\",\n            sussess: false\n        };\n       \n    }\n\n    componentDidMount() {\n        const user = this.props.user;\n        this.setState(prevState => ({\n            ...prevState,\n            user: {\n                ...this.state.user,\n                email: user.email,\n                name: user.name,\n                phone: user.phone\n            }\n        }));\n    }\n\n    handleInputChange = e => {\n        const user = { ...this.state.user };\n        const field = e.target.name;\n        let newValue = e.target.value;\n        if(field === \"phone\"){\n            newValue = formatPhone(newValue)\n        }\n        user[field] = newValue;\n        this.setState({ user });\n    };\n\n    handlePasswordInputChange = e => {\n        const field = e.target.name;\n        const newValue = e.target.value;\n        this.setState({\n            [field]: newValue\n        });\n    };\n\n    handleSubmitNewPassword = e => {\n        e.preventDefault();\n        const { currentPassword, newPassword, repeatPassword } = this.state;\n\n        this.setState({\n            errMessage: \"\",\n            sussess: false\n        });\n        if (newPassword !== repeatPassword) {\n            this.setState({\n                errMessage: \"Passwords do not match!\"\n            });\n        } else {\n            const data = { currentPassword, newPassword };\n           \n            API\n                .patch(`/users/update/password`, {\n                    data\n                })\n                .then(response => {\n                    this.setState({\n                        sussess: true,\n                        currentPassword: \"\",\n                        newPassword: \"\",\n                        repeatPassword: \"\"\n                    });\n                })\n                .catch(error => {\n                    {\n                        this.setState({\n                            errMessage:\n                                \"Incorrect Current Password or some errors have been occurred\"\n                        });\n                    }\n                });\n        }\n    };\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const data = this.state.user;\n        this.setState({\n            errMessage: \"\",\n            sussess: false\n        });\n\n        //get the token for verifying request\n        // this.includeTokenWithRequest();\n\n        API\n            .patch(`users/update/profil`, {\n                data\n            })\n            .then(response => {\n                const user = response.data;\n                this.props.update_profile(user);\n                this.setState({\n                    sussess: true\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({\n                    errMessage: \"Some errors has been occurred!\"\n                });\n            });\n    };\n\n    render() {\n        if (!this.state.user) {\n            return <Loading />;\n        }\n        const {\n            user,\n            currentPassword,\n            newPassword,\n            repeatPassword,\n            errMessage,\n            sussess\n        } = this.state;\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.handleSubmit}\n                    style={{\n                        backgroundColor: \"white\",\n                        marginTop: \"30px\",\n                        padding: \"30px\",\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\n                    }}\n                >\n                    <h6>User Profile</h6>\n\n                    {sussess && (\n                        <Row>\n                            <Col s={12} m={6} l={6} xl={6}>\n                                <p className='green-text '>\n                                    Update Sussessfully{\" \"}\n                                </p>\n                            </Col>\n                        </Row>\n                    )}\n\n                    {errMessage && (\n                        <Row>\n                            <Col s={12} m={6} l={6} xl={6}>\n                                <p className=' deep-orange-text '>\n                                    {errMessage || \"\"}\n                                </p>\n                            </Col>\n                        </Row>\n                    )}\n                    <Row>\n                        <Col s={12} m={6} l={6} xl={6}>\n                            <TextInput\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='Name'\n                                value={user.name}\n                                name='name'\n                                onChange={this.handleInputChange}\n                            />\n                        </Col>\n                        <Col s={12} m={6} l={6} xl={6}>\n                            <TextInput\n                                email\n                                validate\n                                disabled\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='Email'\n                                value={user.email}\n                                readOnly\n                            />\n                        </Col>\n                        <Col s={12} m={6} l={6} xl={6}>\n                            <TextInput\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='Phone'\n                                name='phone'\n                                value={user.phone}\n                                onChange={this.handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button node='button' type='submit' waves='light'>\n                            Save\n                            <Icon right>send</Icon>\n                        </Button>\n                    </Row>\n                </form>\n                <form\n                    onSubmit={this.handleSubmitNewPassword}\n                    style={{\n                        backgroundColor: \"white\",\n                        padding: \"30px\",\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\n                    }}\n                >\n                    <Row>\n                        <h6>Change Password</h6>\n                        <Col s={12} m={12} l={12} xl={12}>\n                            <TextInput\n                                password\n                                required\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='Current Password'\n                                name='currentPassword'\n                                value={currentPassword}\n                                onChange={this.handlePasswordInputChange}\n                            />\n                        </Col>\n                        <Col s={12} m={6} l={6} xl={6}>\n                            <TextInput\n                                password\n                                required\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='New Password'\n                                name='newPassword'\n                                value={newPassword}\n                                onChange={this.handlePasswordInputChange}\n                            />\n                        </Col>\n                        <Col s={12} m={6} l={6} xl={6}>\n                            <TextInput\n                                password\n                                required\n                                s={12}\n                                l={12}\n                                m={12}\n                                label='Repeat Password'\n                                name='repeatPassword'\n                                value={repeatPassword}\n                                onChange={this.handlePasswordInputChange}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Button node='button' type='submit' waves='light'>\n                            Change Password\n                            <Icon right>lock</Icon>\n                        </Button>\n                    </Row>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}