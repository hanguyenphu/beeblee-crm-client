{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/BusinessModalDetail.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, TextInput } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\n\nclass BusinessModalDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      business: this.props.business\n    });\n    this.getBusinessDetail(this.props.business._id);\n  }\n\n  getBusinessDetail(id) {\n    this.setState(_objectSpread({}, this.state, {\n      loading: true\n    }));\n    axios.get(`businesses/${id}`).then(response => {\n      if (response.data.businesses) {\n        this.setState(_objectSpread({}, this.state, {\n          contacts: response.data.businesses.contacts,\n          province: response.data.businesses.province,\n          loading: false\n        }));\n      }\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const business = this.props.business;\n    return React.createElement(Modal, {\n      actions: [React.createElement(Button, {\n        flat: true,\n        modal: \"close\",\n        node: \"button\",\n        waves: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Close\")],\n      open: true,\n      style: {\n        boder: \"none\"\n      },\n      bottomSheet: false,\n      fixedFooter: false,\n      header: \"Business Detail\",\n      id: \"modal1\",\n      options: {\n        dismissible: true,\n        endingTop: \"10%\",\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        opacity: 0.5,\n        outDuration: 250,\n        preventScrolling: true,\n        startingTop: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Name:\",\n      value: business.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Address\",\n      value: business.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Phone:\",\n      value: business.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Province\",\n      value: business.province,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    provinces: state.provinces\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessModalDetail);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/BusinessModalDetail.jsx"],"names":["React","Component","connect","Modal","Button","Row","TextInput","Loading","axios","BusinessModalDetail","constructor","props","state","componentDidMount","setState","business","getBusinessDetail","_id","id","loading","get","then","response","data","businesses","contacts","province","catch","err","render","boder","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","name","address","phone","mapStateToProps","provinces","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, TextInput } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\n\nclass BusinessModalDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.setState({\n            business: this.props.business\n        });\n        this.getBusinessDetail(this.props.business._id)\n    }\n\n    getBusinessDetail (id) {\n        this.setState({\n            ...this.state,\n            loading: true\n        })\n        axios.get(`businesses/${id}`).then(response => {\n            if(response.data.businesses) {\n                this.setState({\n                    ...this.state,\n                    contacts: response.data.businesses.contacts,\n                    province: response.data.businesses.province,\n                    loading:false\n                })\n            }\n        }).catch(err => {\n            this.setState({\n                loading:false\n            })\n        })\n    }\n\n    render() {\n        const { business } = this.props;\n        \n\n        return (\n            <Modal\n                actions={[\n                    <Button flat modal='close' node='button' waves='green'>\n                        Close\n                    </Button>\n                ]}\n                open={true}\n                style={{ boder: \"none\" }}\n                bottomSheet={false}\n                fixedFooter={false}\n                header='Business Detail'\n                id='modal1'\n                options={{\n                    dismissible: true,\n                    endingTop: \"10%\",\n                    inDuration: 250,\n                    onCloseEnd: null,\n                    onCloseStart: null,\n                    onOpenEnd: null,\n                    onOpenStart: null,\n                    opacity: 0.5,\n                    outDuration: 250,\n                    preventScrolling: true,\n                    startingTop: \"4%\"\n                }}\n            >\n                {!this.state.loading? \n                <form>\n                    <Row>\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Name:'\n                            value={business.name}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Address'\n                            value={business.address}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Phone:'\n                            value={business.phone}\n                        />\n\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={6}\n                            xl={6}\n                            label='Province'\n                            value={business.province}\n                        />\n\n                    \n                    </Row>\n                </form> : <Loading/>}\n            </Modal>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { provinces: state.provinces };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BusinessModalDetail);\n"]},"metadata":{},"sourceType":"module"}