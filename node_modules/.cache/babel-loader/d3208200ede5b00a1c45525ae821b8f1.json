{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\projects\\\\ProjectForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, TextInput, Button, Textarea, DatePicker } from \"react-materialize\"; // import PickDate from '../common/DatePicker'\n\nimport StatusDropdown from \"../common/StatusDropdown\";\nimport CategoryDropdown from \"../common/CategoryDropdown\";\nimport API from \"../../utils/API/API\";\nimport formatDate from \"../../utils/commons/FormatDate\";\nimport Loading from \"../loading/Loading\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass ProjectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // project: {\n      //   business: \"\",\n      //   name: \"\",\n      //   description: \"\",\n      //   price: \"\",\n      //   googleLink: \"\",\n      //   startDate: \"\",\n      //   completedDate: \"\",\n      //   status: \"\",\n      //   category: \"\"\n      // },\n      edited: false,\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n\n    this.handleChangeProject = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n      let project = this.state.project;\n      project[field] = value;\n      this.setState({\n        project,\n        edited: true\n      });\n    };\n\n    this.createProject = project => {\n      console.log(project);\n      API.post(\"/projects\", project).then(response => {\n        this.setState({\n          edited: false,\n          successMessage: \"Saved successfully!\",\n          errorMessage: \"\"\n        });\n        this.props.getBusinessData();\n        this.props.closeCreateProjectModal();\n      }).catch(error => {\n        this.setState({\n          edited: false,\n          successMessage: \"\",\n          errorMessage: \"An Error has been occurred\"\n        });\n      });\n    };\n\n    this.updateProject = project => {\n      API.patch(`/projects/${project._id}`, project).then(response => {\n        this.setState({\n          edited: false,\n          successMessage: \"Saved successfully!\",\n          errorMessage: \"\"\n        });\n      }).catch(error => {\n        this.setState({\n          edited: false,\n          successMessage: \"\",\n          errorMessage: \"An Error has been occurred\"\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const project = this.state.project;\n\n      if (!project._id) {\n        this.createProject(project);\n      } else {\n        this.updateProject(project);\n      }\n    };\n  }\n\n  componentDidMount() {\n    let project = {\n      business: \"\",\n      name: \"\",\n      description: \"\",\n      price: \"\",\n      googleLink: \"\",\n      startDate: \"\",\n      completedDate: \"\",\n      status: \"\",\n      category: \"\"\n    };\n\n    if (this.props.business) {\n      project.business = this.props.business._id;\n      this.setState(_objectSpread({}, this.state, {\n        project\n      }));\n    }\n\n    if (this.props.project) {\n      project = this.props.project;\n      this.setState(_objectSpread({}, this.state, {\n        project\n      }));\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          edited = _this$state.edited,\n          project = _this$state.project;\n\n    if (!project) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      label: \"Name:\",\n      name: \"name\",\n      value: project.name,\n      onChange: this.handleChangeProject,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Textarea, {\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      label: \"Description\",\n      name: \"description\",\n      value: project.description || \"- Menu Link: \\n\\n- Template Link: \\n\\n- Additional: \\n\\n \",\n      onChange: this.handleChangeProject,\n      \"data-length\": 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(StatusDropdown, {\n      handleChangeProject: this.handleChangeProject,\n      status: project.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(CategoryDropdown, {\n      handleChangeProject: this.handleChangeProject,\n      category: project.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Price:\",\n      name: \"price\",\n      value: project.price,\n      onChange: this.handleChangeProject,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Google Link:\",\n      name: \"googleLink\",\n      value: project.googleLink,\n      onChange: this.handleChangeProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"startDate\",\n      label: \"Start Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\",\n        defaultDate: new Date(formatDate(project.startDate)),\n        setDefaultDate: true\n      },\n      required: true,\n      value: formatDate(project.startDate),\n      onChange: value => {\n        let project = Object.assign(this.state.project, {\n          startDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          project\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"completedDate\",\n      label: \"Completed Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\",\n        defaultDate: new Date(formatDate(project.completedDate)),\n        setDefaultDate: true\n      },\n      value: formatDate(project.completedDate),\n      onChange: value => {\n        let project = Object.assign(this.state.project, {\n          completedDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          project\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      className: edited ? \"gradient-btn btn-green\" : \"\",\n      waves: \"green\",\n      disabled: !edited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, this.state.successMessage && React.createElement(Row, {\n      className: \"animated shake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"green-text animated bounceOutLeft delay-3s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.state.successMessage)), this.state.errorMessage && React.createElement(Row, {\n      className: \"animated rubberBand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"red-text animated bounceOutLeft delay-3s \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, this.state.errorMessage))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ProjectForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/projects/ProjectForm.jsx"],"names":["React","Component","connect","Row","TextInput","Button","Textarea","DatePicker","StatusDropdown","CategoryDropdown","API","formatDate","Loading","mapStateToProps","state","ProjectForm","edited","successMessage","errorMessage","handleChangeProject","e","field","target","name","value","project","setState","createProject","console","log","post","then","response","props","getBusinessData","closeCreateProjectModal","catch","error","updateProject","patch","_id","handleSubmit","preventDefault","componentDidMount","business","description","price","googleLink","startDate","completedDate","status","category","render","format","defaultDate","Date","setDefaultDate","Object","assign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Button,\r\n  Textarea,\r\n  DatePicker\r\n} from \"react-materialize\";\r\n// import PickDate from '../common/DatePicker'\r\nimport StatusDropdown from \"../common/StatusDropdown\";\r\nimport CategoryDropdown from \"../common/CategoryDropdown\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatDate from \"../../utils/commons/FormatDate\"\r\nimport Loading from \"../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectForm extends Component {\r\n  state = {\r\n    // project: {\r\n    //   business: \"\",\r\n    //   name: \"\",\r\n    //   description: \"\",\r\n    //   price: \"\",\r\n    //   googleLink: \"\",\r\n    //   startDate: \"\",\r\n    //   completedDate: \"\",\r\n    //   status: \"\",\r\n    //   category: \"\"\r\n    // },\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleChangeProject = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let project = this.state.project;\r\n    project[field] = value;\r\n    this.setState({\r\n      project,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let  project = {\r\n      business: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      googleLink: \"\",\r\n      startDate: \"\",\r\n      completedDate: \"\",\r\n      status: \"\",\r\n      category: \"\"\r\n    }\r\n    if (this.props.business) {\r\n\r\n      project.business = this.props.business._id;\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        project\r\n      });\r\n    }\r\n    if (this.props.project) {\r\n      project = this.props.project;\r\n      this.setState({\r\n        ...this.state,\r\n        project\r\n      });\r\n    }\r\n  }\r\n\r\n  createProject = project => {\r\n    console.log(project)\r\n    API.post(\"/projects\", project).then(response => {\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"Saved successfully!\",\r\n        errorMessage: \"\"\r\n      });\r\n      this.props.getBusinessData();\r\n      this.props.closeCreateProjectModal()\r\n    }).catch(error => {\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"\",\r\n        errorMessage: \"An Error has been occurred\"\r\n      });\r\n    });\r\n  };\r\n\r\n  updateProject = project => {\r\n    API.patch(`/projects/${project._id}`, project).then(response => {\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"Saved successfully!\",\r\n        errorMessage: \"\"\r\n      });\r\n    }).catch(error => {\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"\",\r\n        errorMessage: \"An Error has been occurred\"\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const project = this.state.project\r\n    if (!project._id) {\r\n      this.createProject(project)\r\n    } else {\r\n      this.updateProject(project)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { edited, project } = this.state;\r\n\r\n    if(!project){\r\n      return <Loading/>\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row className=\"\">\r\n            <TextInput\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Name:\"\r\n              name=\"name\"\r\n              value={project.name}\r\n              onChange={this.handleChangeProject}\r\n              required\r\n            />\r\n\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={project.description || \"- Menu Link: \\n\\n- Template Link: \\n\\n- Additional: \\n\\n \"}\r\n              onChange={this.handleChangeProject}\r\n              data-length={200}\r\n            />\r\n            <StatusDropdown\r\n              handleChangeProject={this.handleChangeProject}\r\n              status={project.status}\r\n            />\r\n            <CategoryDropdown\r\n              handleChangeProject={this.handleChangeProject}\r\n              category={project.category}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price:\"\r\n              name=\"price\"\r\n              value={project.price}\r\n              onChange={this.handleChangeProject}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Google Link:\"\r\n              name=\"googleLink\"\r\n              value={project.googleLink}\r\n              onChange={this.handleChangeProject}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate:  new Date(formatDate(project.startDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              required\r\n              value={formatDate(project.startDate)}\r\n              onChange={value => {\r\n                let project = Object.assign(this.state.project, {startDate: value})\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  project\r\n                });\r\n              }}\r\n            />\r\n\r\n            {/* <TextInput type='date' className='datepicker'  /> */}\r\n\r\n            <DatePicker\r\n              name=\"completedDate\"\r\n              label=\"Completed Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate:  new Date(formatDate(project.completedDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(project.completedDate)}\r\n              onChange={value => {\r\n                let project = Object.assign(this.state.project, {completedDate: value})\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  project\r\n                });\r\n              }}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectForm);\r\n"]},"metadata":{},"sourceType":"module"}