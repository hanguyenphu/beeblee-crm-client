{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\account\\\\AccountForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, TextInput, Textarea, Button, DatePicker } from \"react-materialize\";\nimport API from \"../../utils/API/API\";\nimport formatDate from \"../../utils/commons/FormatDate\";\nimport Loading from \"../loading/Loading\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass AccountForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // account: {\n      //   domain: \"\",\n      //   username: \"\",\n      //   password: \"\",\n      //   startDate: \"\",\n      //   expireDate: \"\",\n      //   price: \"\",\n      //   description: \"\"\n      // },\n      edited: false,\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n\n    this.handleChangeAccount = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n      let account = this.state.account;\n      account[field] = value;\n      this.setState({\n        account,\n        edited: true\n      });\n    };\n\n    this.updateAccount = account => {\n      API.patch(`/accounts/${account._id}`, account).then(response => {\n        this.setState({\n          successMessage: \"Saved Successfully\",\n          errorMessage: \"\",\n          edited: false\n        });\n      }).catch(error => {\n        this.setState({\n          successMessage: \"\",\n          errorMessage: \"Some errors have been occured!\",\n          edited: false\n        });\n      });\n    };\n\n    this.createAccount = account => {\n      API.post(`/accounts`, account).then(response => {\n        let account = {\n          domain: \"\",\n          username: \"\",\n          password: \"\",\n          startDate: \"\",\n          expireDate: \"\",\n          price: \"\",\n          description: \"\",\n          project: this.props.account.project\n        };\n        this.setState({\n          successMessage: \"Saved Successfully\",\n          errorMessage: \"\",\n          edited: false,\n          account\n        });\n        this.props.getProjectDetail();\n      }).catch(error => {\n        this.setState({\n          successMessage: \"\",\n          errorMessage: \"Some errors have been occured!\",\n          edited: false\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const account = this.state.account;\n\n      if (account._id) {\n        this.updateAccount(account);\n      } else {\n        this.createAccount(account);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.account) {\n      let account = this.props.account;\n\n      if (account.price.$numberDecimal) {\n        account.price = account.price.$numberDecimal;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        account\n      }));\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          account = _this$state.account,\n          edited = _this$state.edited;\n\n    if (!account) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Domain:\",\n      name: \"domain\",\n      value: account.domain,\n      onChange: this.handleChangeAccount,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Username:\",\n      name: \"username\",\n      value: account.username,\n      onChange: this.handleChangeAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Password:\",\n      name: \"password\",\n      value: account.password,\n      onChange: this.handleChangeAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"startDate\",\n      label: \"Start Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\",\n        defaultDate: new Date(formatDate(account.startDate)),\n        setDefaultDate: true\n      },\n      value: formatDate(account.startDate),\n      onChange: value => {\n        let account = Object.assign(this.state.account, {\n          startDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          account\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"expireDate\",\n      label: \"Expire Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\",\n        defaultDate: new Date(formatDate(account.expireDate)),\n        setDefaultDate: true\n      },\n      value: formatDate(account.expireDate),\n      onChange: value => {\n        let account = Object.assign(this.state.account, {\n          expireDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          account\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Price: (per year)\",\n      name: \"price\",\n      value: account.price,\n      onChange: this.handleChangeAccount,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Textarea, {\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      label: \"Description:\",\n      name: \"description\",\n      value: account.description,\n      onChange: this.handleChangeAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      className: edited ? \"gradient-btn btn-primary\" : \"\",\n      waves: \"green\",\n      disabled: !edited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, this.state.successMessage && React.createElement(Row, {\n      className: \"animated shake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"green-text animated bounceOutLeft delay-3s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.successMessage)), this.state.errorMessage && React.createElement(Row, {\n      className: \"animated rubberBand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"red-text animated bounceOutLeft delay-3s \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.state.errorMessage))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(AccountForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/account/AccountForm.jsx"],"names":["React","Component","connect","Row","TextInput","Textarea","Button","DatePicker","API","formatDate","Loading","mapStateToProps","state","AccountForm","edited","successMessage","errorMessage","handleChangeAccount","e","field","target","name","value","account","setState","updateAccount","patch","_id","then","response","catch","error","createAccount","post","domain","username","password","startDate","expireDate","price","description","project","props","getProjectDetail","handleSubmit","preventDefault","componentDidMount","$numberDecimal","render","format","defaultDate","Date","setDefaultDate","Object","assign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AACD;;AAED,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCW,KADkC,GAC1B;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAAA,MAAM,EAAE,KAVF;AAWNC,MAAAA,cAAc,EAAE,EAXV;AAYNC,MAAAA,YAAY,EAAE;AAZR,KAD0B;;AAAA,SA6BlCC,mBA7BkC,GA6BZC,CAAC,IAAI;AACzB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,UAAIC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAArB;AAEA,UAAIC,OAAO,GAAG,KAAKX,KAAL,CAAWW,OAAzB;AACAA,MAAAA,OAAO,CAACJ,KAAD,CAAP,GAAiBG,KAAjB;AACA,WAAKE,QAAL,CAAc;AACZD,QAAAA,OADY;AAEZT,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAvCiC;;AAAA,SAyClCW,aAzCkC,GAyClBF,OAAO,IAAI;AACzBf,MAAAA,GAAG,CAACkB,KAAJ,CAAW,aAAYH,OAAO,CAACI,GAAI,EAAnC,EAAsCJ,OAAtC,EACGK,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKL,QAAL,CAAc;AACZT,UAAAA,cAAc,EAAE,oBADJ;AAEZC,UAAAA,YAAY,EAAE,EAFF;AAGZF,UAAAA,MAAM,EAAE;AAHI,SAAd;AAKD,OAPH,EAQGgB,KARH,CAQSC,KAAK,IAAI;AACd,aAAKP,QAAL,CAAc;AACZT,UAAAA,cAAc,EAAE,EADJ;AAEZC,UAAAA,YAAY,EAAE,gCAFF;AAGZF,UAAAA,MAAM,EAAE;AAHI,SAAd;AAKD,OAdH;AAeD,KAzDiC;;AAAA,SA2DlCkB,aA3DkC,GA2DlBT,OAAO,IAAI;AACzBf,MAAAA,GAAG,CAACyB,IAAJ,CAAU,WAAV,EAAsBV,OAAtB,EACGK,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIN,OAAO,GAAG;AACZW,UAAAA,MAAM,EAAE,EADI;AAEZC,UAAAA,QAAQ,EAAE,EAFE;AAGZC,UAAAA,QAAQ,EAAE,EAHE;AAIZC,UAAAA,SAAS,EAAE,EAJC;AAKZC,UAAAA,UAAU,EAAE,EALA;AAMZC,UAAAA,KAAK,EAAE,EANK;AAOZC,UAAAA,WAAW,EAAE,EAPD;AAQZC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWnB,OAAX,CAAmBkB;AARhB,SAAd;AAUA,aAAKjB,QAAL,CAAc;AACZT,UAAAA,cAAc,EAAE,oBADJ;AAEZC,UAAAA,YAAY,EAAE,EAFF;AAGZF,UAAAA,MAAM,EAAE,KAHI;AAIZS,UAAAA;AAJY,SAAd;AAMA,aAAKmB,KAAL,CAAWC,gBAAX;AACD,OAnBH,EAoBGb,KApBH,CAoBSC,KAAK,IAAI;AACd,aAAKP,QAAL,CAAc;AACZT,UAAAA,cAAc,EAAE,EADJ;AAEZC,UAAAA,YAAY,EAAE,gCAFF;AAGZF,UAAAA,MAAM,EAAE;AAHI,SAAd;AAKD,OA1BH;AA2BD,KAvFiC;;AAAA,SAyFlC8B,YAzFkC,GAyFnB1B,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAAC2B,cAAF;AADkB,YAEVtB,OAFU,GAEE,KAAKX,KAFP,CAEVW,OAFU;;AAGlB,UAAIA,OAAO,CAACI,GAAZ,EAAiB;AACf,aAAKF,aAAL,CAAmBF,OAAnB;AACD,OAFD,MAEO;AACL,aAAKS,aAAL,CAAmBT,OAAnB;AACD;AACF,KAjGiC;AAAA;;AAelCuB,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKJ,KAAL,CAAWnB,OAAf,EAAwB;AACtB,UAAIA,OAAO,GAAG,KAAKmB,KAAL,CAAWnB,OAAzB;;AACA,UAAIA,OAAO,CAACgB,KAAR,CAAcQ,cAAlB,EAAkC;AAChCxB,QAAAA,OAAO,CAACgB,KAAR,GAAgBhB,OAAO,CAACgB,KAAR,CAAcQ,cAA9B;AACD;;AAED,WAAKvB,QAAL,mBACK,KAAKZ,KADV;AAEEW,QAAAA;AAFF;AAID;AACF;;AAwEDyB,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKpC,KAD1B;AAAA,UACCW,OADD,eACCA,OADD;AAAA,UACUT,MADV,eACUA,MADV;;AAEP,QAAI,CAACS,OAAL,EAAc;AACZ,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKqB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,SALR;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,KAAK,EAAErB,OAAO,CAACW,MAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKjB,mBARjB;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,WALR;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAEM,OAAO,CAACY,QAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKlB,mBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAsBE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,WALR;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,KAAK,EAAEM,OAAO,CAACa,QAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKnB,mBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAiCE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,CAAC,EAAE,EAHL;AAIE,MAAA,CAAC,EAAE,CAJL;AAKE,MAAA,CAAC,EAAE,CALL;AAME,MAAA,EAAE,EAAE,CANN;AAOE,MAAA,OAAO,EAAE;AACPgC,QAAAA,MAAM,EAAE,cADD;AAEPC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,CAAS1C,UAAU,CAACc,OAAO,CAACc,SAAT,CAAnB,CAFN;AAGPe,QAAAA,cAAc,EAAE;AAHT,OAPX;AAYE,MAAA,KAAK,EAAE3C,UAAU,CAACc,OAAO,CAACc,SAAT,CAZnB;AAaE,MAAA,QAAQ,EAAEf,KAAK,IAAI;AACjB,YAAIC,OAAO,GAAG8B,MAAM,CAACC,MAAP,CAAc,KAAK1C,KAAL,CAAWW,OAAzB,EAAkC;AAC9Cc,UAAAA,SAAS,EAAEf;AADmC,SAAlC,CAAd;AAGA,aAAKE,QAAL,mBACK,KAAKZ,KADV;AAEEE,UAAAA,MAAM,EAAE,IAFV;AAGES,UAAAA;AAHF;AAKD,OAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EA0DE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,CAAC,EAAE,EAHL;AAIE,MAAA,CAAC,EAAE,CAJL;AAKE,MAAA,CAAC,EAAE,CALL;AAME,MAAA,EAAE,EAAE,CANN;AAOE,MAAA,OAAO,EAAE;AACP0B,QAAAA,MAAM,EAAE,cADD;AAEPC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,CAAS1C,UAAU,CAACc,OAAO,CAACe,UAAT,CAAnB,CAFN;AAGPc,QAAAA,cAAc,EAAE;AAHT,OAPX;AAYE,MAAA,KAAK,EAAE3C,UAAU,CAACc,OAAO,CAACe,UAAT,CAZnB;AAaE,MAAA,QAAQ,EAAEhB,KAAK,IAAI;AACjB,YAAIC,OAAO,GAAG8B,MAAM,CAACC,MAAP,CAAc,KAAK1C,KAAL,CAAWW,OAAzB,EAAkC;AAC9Ce,UAAAA,UAAU,EAAEhB;AADkC,SAAlC,CAAd;AAGA,aAAKE,QAAL,mBACK,KAAKZ,KADV;AAEEE,UAAAA,MAAM,EAAE,IAFV;AAGES,UAAAA;AAHF;AAKD,OAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,EAmFE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,mBALR;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,KAAK,EAAEA,OAAO,CAACgB,KAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKtB,mBARjB;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFF,EA8FE,oBAAC,QAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,EAFL;AAGE,MAAA,CAAC,EAAE,EAHL;AAIE,MAAA,EAAE,EAAE,EAJN;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,IAAI,EAAC,aANP;AAOE,MAAA,KAAK,EAAEM,OAAO,CAACiB,WAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKvB,mBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9FF,CADF,EA0GE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEH,MAAM,GAAG,0BAAH,GAAgC,EAFnD;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAE,CAACA,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA1GF,CADF,EAsHE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWG,cAAX,IACC,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWG,cADd,CADF,CAFJ,EAQG,KAAKH,KAAL,CAAWI,YAAX,IACC,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,2CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWI,YADd,CADF,CATJ,CAtHF,CADF;AAyID;;AAjPiC;;AAoPpC,eAAed,OAAO,CAACS,eAAD,CAAP,CAAyBE,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Textarea,\r\n  Button,\r\n  DatePicker\r\n} from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatDate from \"../../utils/commons/FormatDate\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass AccountForm extends Component {\r\n  state = {\r\n    // account: {\r\n    //   domain: \"\",\r\n    //   username: \"\",\r\n    //   password: \"\",\r\n    //   startDate: \"\",\r\n    //   expireDate: \"\",\r\n    //   price: \"\",\r\n    //   description: \"\"\r\n    // },\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.account) {\r\n      let account = this.props.account;\r\n      if (account.price.$numberDecimal) {\r\n        account.price = account.price.$numberDecimal;\r\n      }\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        account\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeAccount = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let account = this.state.account;\r\n    account[field] = value;\r\n    this.setState({\r\n      account,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  updateAccount = account => {\r\n    API.patch(`/accounts/${account._id}`, account)\r\n      .then(response => {\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  createAccount = account => {\r\n    API.post(`/accounts`, account)\r\n      .then(response => {\r\n        let account = {\r\n          domain: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          startDate: \"\",\r\n          expireDate: \"\",\r\n          price: \"\",\r\n          description: \"\",\r\n          project: this.props.account.project\r\n        }\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false,\r\n          account\r\n        });\r\n        this.props.getProjectDetail();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { account } = this.state;\r\n    if (account._id) {\r\n      this.updateAccount(account);\r\n    } else {\r\n      this.createAccount(account);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { account, edited } = this.state;\r\n    if (!account) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Domain:\"\r\n              name=\"domain\"\r\n              value={account.domain}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Username:\"\r\n              name=\"username\"\r\n              value={account.username}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Password:\"\r\n              name=\"password\"\r\n              value={account.password}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.startDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.startDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  startDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"expireDate\"\r\n              label=\"Expire Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.expireDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.expireDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  expireDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price: (per year)\"\r\n              name=\"price\"\r\n              value={account.price}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              value={account.description}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-primary\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AccountForm);\r\n"]},"metadata":{},"sourceType":"module"}