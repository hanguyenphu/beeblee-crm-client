{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\contact\\\\ContactTable.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Table, Icon } from \"react-materialize\";\nimport EditContactForm from \"./EditContactForm\";\nimport API from \"../../utils/API/API\";\nexport class ContactTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRemoveContact = contactId => () => {\n      const business = this.props.business;\n      const confirmed = window.confirm(\"Do you want to remove this contact from the business?\");\n\n      if (confirmed) {\n        API.patch(`businesses/removeContact/${business._id}`, {\n          contactId\n        }).then(response => {\n          let contactIds = response.data.contacts;\n          let contacts = this.state.contacts;\n          contacts = contacts.filter(contact => {\n            return contactIds.includes(contact._id);\n          });\n          this.setState(_objectSpread({}, this.state, {\n            contacts\n          }));\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.handleEditContact = contact => () => {\n      this.setState({\n        individualContact: contact\n      });\n    };\n\n    this.handleCloseEditContact = () => {\n      this.setState({\n        individualContact: null\n      });\n    };\n\n    this.updateContact = updatedContact => {\n      let contacts = this.state.contacts;\n      contacts = contacts.map(contact => {\n        return contact._id == updatedContact._id ? updatedContact : contact;\n      });\n      this.setState({\n        contacts\n      });\n    };\n\n    this.state = {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      contacts: this.props.contacts\n    });\n  }\n\n  componentWillReceiveProps(prevProps) {\n    if (prevProps.contacts.length !== this.props.contacts.length) {\n      this.setState({\n        contacts: this.props.contacts\n      });\n    }\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      x: 12,\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Table, {\n      x: 12,\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      className: \"radius-corner\",\n      striped: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      \"data-field\": \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      \"data-field\": \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      \"data-field\": \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, contacts.map(contact => {\n      return React.createElement(\"tr\", {\n        key: contact._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, contact.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, contact.phone), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, contact.email), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        style: {\n          marginRight: \"20px\"\n        },\n        onClick: this.handleEditContact(contact),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"create\")), React.createElement(\"a\", {\n        href: \"#\",\n        style: {\n          color: \"red\"\n        },\n        onClick: this.handleRemoveContact(contact._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"clear\"))));\n    })))), this.state.individualContact && React.createElement(EditContactForm, {\n      contact: this.state.individualContact,\n      updateContact: this.updateContact,\n      closeEditContact: this.handleCloseEditContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactTable);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/contact/ContactTable.jsx"],"names":["React","Component","connect","Row","Col","Table","Icon","EditContactForm","API","ContactTable","constructor","props","handleRemoveContact","contactId","business","confirmed","window","confirm","patch","_id","then","response","contactIds","data","contacts","state","filter","contact","includes","setState","catch","error","console","log","handleEditContact","individualContact","handleCloseEditContact","updateContact","updatedContact","map","componentDidMount","componentWillReceiveProps","prevProps","length","render","name","phone","email","marginRight","color","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Table, Icon } from \"react-materialize\";\r\nimport EditContactForm from \"./EditContactForm\";\r\nimport API from \"../../utils/API/API\";\r\nexport class ContactTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            contacts: this.props.contacts\r\n        })\r\n    }\r\n    componentWillReceiveProps(prevProps) {\r\n        if(prevProps.contacts.length !== this.props.contacts.length) {\r\n\r\n            this.setState({\r\n                contacts: this.props.contacts\r\n            })\r\n        }\r\n    }\r\n\r\n    handleRemoveContact = (contactId) => () => {\r\n        const {business} = this.props\r\n        const confirmed = window.confirm(\"Do you want to remove this contact from the business?\")\r\n\r\n        if(confirmed) {\r\n\r\n            API.patch(`businesses/removeContact/${business._id}`, {contactId}).then(response => {\r\n                let contactIds  = response.data.contacts\r\n                let contacts = this.state.contacts\r\n                contacts = contacts.filter(contact => {\r\n                    return contactIds.includes(contact._id)\r\n                })\r\n                this.setState({\r\n                    ...this.state,\r\n                    contacts\r\n                })\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditContact = (contact) => () => {\r\n        this.setState({\r\n            individualContact: contact\r\n        })\r\n    }\r\n\r\n    handleCloseEditContact = () => {\r\n        this.setState({\r\n            individualContact: null\r\n        })\r\n    }\r\n\r\n    updateContact = (updatedContact) => {\r\n        let contacts = this.state.contacts\r\n        contacts = contacts.map(contact => {\r\n            return contact._id == updatedContact._id? updatedContact:contact\r\n        })\r\n        this.setState({\r\n            contacts\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { contacts } = this.state;\r\n\r\n        return (\r\n            <Row >\r\n                <Col x={12} s={12} l={12} m={12} xl={12}>\r\n                    <Table x={12} s={12} l={12} m={12} xl={12}  className=\"radius-corner\" striped={true} responsive={true}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th data-field='id'>Name</th>\r\n                                <th data-field='name'>Phone</th>\r\n                                <th data-field='email'>Email</th>\r\n                                <th data-field='action'>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {contacts.map(contact => {\r\n                                return (\r\n                                    <tr key={contact._id}>\r\n                                        <td>{contact.name}</td>\r\n                                        <td>{contact.phone}</td>\r\n                                        <td>{contact.email}</td>\r\n                                        <td>\r\n                                            <a href='#'\r\n                                             style={{\r\n                                                marginRight: \"20px\",\r\n\r\n                                            }}\r\n                                            onClick={this.handleEditContact(contact)}>\r\n                                                <Icon>create</Icon>\r\n                                            </a>\r\n                                            <a\r\n                                                href='#'\r\n                                                style={{\r\n\r\n                                                    color: \"red\"\r\n                                                }}\r\n                                                onClick={this.handleRemoveContact(contact._id)}\r\n                                            >\r\n                                                <Icon>clear</Icon>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n\r\n                {this.state.individualContact && <EditContactForm contact={this.state.individualContact} updateContact={this.updateContact} closeEditContact={this.handleCloseEditContact}/>}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactTable);\r\n"]},"metadata":{},"sourceType":"module"}