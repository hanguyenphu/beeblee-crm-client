{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\business\\\\BusinessDetailPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport API from '../../utils/API/API';\nimport Loading from '../loading/Loading';\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass BusinessDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const businessId = this.props.match.params.id;\n    API.get(`businesses/${businessId}`).then(response => {\n      this.setState(_objectSpread({}, this.state, {\n        business: response.data,\n        loading: false,\n        errorMessage: \"\"\n      }));\n    }).catch(error => {\n      this.setState({\n        business: {},\n        loading: false,\n        errorMessage: \"Cannot fetch the business\"\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          business = _this$state.business,\n          errorMessage = _this$state.errorMessage,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, business.name);\n  }\n\n}\n\nexport default connect(mapStateToProps)(BusinessDetailPage);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/business/BusinessDetailPage.jsx"],"names":["React","Component","connect","API","Loading","mapStateToProps","state","BusinessDetailPage","loading","errorMessage","componentDidMount","businessId","props","match","params","id","get","then","response","setState","business","data","catch","error","render","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO,EAAP;AAGH;;AAED,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCK,KADuC,GAC/B;AACJE,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,YAAY,EAAC;AAFT,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACAZ,IAAAA,GAAG,CAACa,GAAJ,CAAS,cAAaL,UAAW,EAAjC,EAAoCM,IAApC,CAAyCC,QAAQ,IAAI;AACjD,WAAKC,QAAL,mBACO,KAAKb,KADZ;AAEIc,QAAAA,QAAQ,EAAEF,QAAQ,CAACG,IAFvB;AAGIb,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,YAAY,EAAC;AAJjB;AAMH,KAPD,EAOGa,KAPH,CAOSC,KAAK,IAAI;AACd,WAAKJ,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,EADA;AAEVZ,QAAAA,OAAO,EAAE,KAFC;AAGVC,QAAAA,YAAY,EAAC;AAHH,OAAd;AAMH,KAdD;AAeH;;AACDe,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKlB,KAD1C;AAAA,UACEc,QADF,eACEA,QADF;AAAA,UACYX,YADZ,eACYA,YADZ;AAAA,UAC0BD,OAD1B,eAC0BA,OAD1B;;AAEL,QAAGA,OAAH,EAAW;AACR,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKY,QAAQ,CAACK,IADd,CADJ;AAKH;;AAjCsC;;AAoC3C,eAAevB,OAAO,CAClBG,eADkB,CAAP,CAEbE,kBAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport API from '../../utils/API/API';\r\nimport Loading from '../loading/Loading';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nclass BusinessDetailPage extends Component {\r\n    state = {\r\n        loading: true,\r\n        errorMessage:\"\"\r\n    }\r\n    componentDidMount() {\r\n        const businessId = this.props.match.params.id\r\n        API.get(`businesses/${businessId}`).then(response => {\r\n            this.setState({\r\n                ...this.state,\r\n                business: response.data,\r\n                loading: false,\r\n                errorMessage:\"\"\r\n            })\r\n        }).catch(error => {\r\n            this.setState({\r\n                business: {},\r\n                loading: false,\r\n                errorMessage:\"Cannot fetch the business\"\r\n            })\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const {business, errorMessage, loading} = this.state\r\n        if(loading){\r\n           return <Loading/>\r\n        }\r\n        return (\r\n            <div>\r\n                {business.name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(BusinessDetailPage);"]},"metadata":{},"sourceType":"module"}