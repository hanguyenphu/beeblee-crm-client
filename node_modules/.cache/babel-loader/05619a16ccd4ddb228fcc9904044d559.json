{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/login/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { TextInput, Row, Col, Button, Icon } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { authenticate } from \"../../redux/actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authenticate: authenticated => dispatch(authenticate(authenticated))\n  };\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      axios.post(`http://localhost:3000/users/login`, {\n        email,\n        password\n      }).then(response => {\n        response.data.user.authenticated = true;\n        localStorage.setItem(\"token\", response.data.token);\n\n        if (response.data) {\n          response.data.authenticated = true;\n          this.props.authenticate(response.data);\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Incorrect Email or Password\",\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      errorMessage: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          loading = _this$state2.loading,\n          errorMessage = _this$state2.errorMessage;\n    const user = this.props.user;\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: \"70px\",\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Login\")), React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"email\",\n      value: email,\n      email: true,\n      label: \"Email\",\n      validate: true,\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      label: \"Password\",\n      name: \"password\",\n      value: password,\n      password: true,\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), errorMessage && React.createElement(\"div\", {\n      className: \"red-text text-accent-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errorMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), !loading ? React.createElement(Button, {\n      node: \"button\",\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Login\", React.createElement(Icon, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"send\")) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(Login); // export default Login","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/login/Login.jsx"],"names":["React","Component","TextInput","Row","Col","Button","Icon","Loading","axios","authenticate","connect","mapDispatchToProps","dispatch","authenticated","Login","constructor","props","handleChange","e","setState","state","target","name","value","handleSubmit","preventDefault","email","password","post","then","response","data","user","localStorage","setItem","token","catch","error","errorMessage","loading","render","marginTop","backgroundColor","padding","boxShadow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextInput, Row, Col, Button, Icon } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { authenticate } from \"../../redux/actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authenticate: authenticated => dispatch(authenticate(authenticated))\n    };\n}\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            errorMessage: \"\"\n        };\n    }\n\n    handleChange = e => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        axios\n            .post(`http://localhost:3000/users/login`, {\n                email,\n                password\n            })\n            .then(response => {\n                response.data.user.authenticated = true;\n                localStorage.setItem(\"token\", response.data.token);\n                if (response.data) {\n                    response.data.authenticated = true\n                    this.props.authenticate(response.data);             \n                }\n              \n            })\n            .catch(error => {\n                this.setState({\n                    errorMessage: \"Incorrect Email or Password\",\n                    loading: false\n                });\n            });\n    };\n\n    render() {\n        const { email, password, loading, errorMessage } = this.state;\n        const {user} = this.props\n        return (\n            <div style={{ marginTop: \"70px\",  backgroundColor: \"white\",\n            padding: \"20px\",\n            boxShadow: \"1px 1px 1px #9E9E9E\" }}>\n                <Row>\n                    <Col m={4}></Col>\n                    <Col m={4}>\n                        <h3> Login</h3>\n                    </Col>\n                    <Col m={4}></Col>\n                </Row>\n\n                <form onSubmit={this.handleSubmit} className='col s12'>\n                    <TextInput\n                        name='email'\n                        value={email}\n                        email\n                        label='Email'\n                        validate\n                        required\n                        onChange={this.handleChange}\n                    />\n\n                    <TextInput\n                        label='Password'\n                        name='password'\n                        value={password}\n                        password\n                        required\n                        onChange={this.handleChange}\n                    />\n\n                    {errorMessage && (\n                        <div className='red-text text-accent-2'>\n                            {errorMessage}\n                        </div>\n                    )}\n                    <br />\n                    {!loading ? (\n                        <Button node='button' waves='light'>\n                            Login\n                            <Icon right>send</Icon>\n                        </Button>\n                    ) : (\n                        <Loading />\n                    )}\n                </form>\n            </div>\n        );\n    }\n}\nexport default connect(null, mapDispatchToProps)(Login);\n// export default Login"]},"metadata":{},"sourceType":"module"}