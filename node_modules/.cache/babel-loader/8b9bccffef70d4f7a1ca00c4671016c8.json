{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { AUTHENTICATE, LOGOUT, UPDATE_PROFILE, FETCH_PROVINCE, PUSH_BUSINESS_TO_MODAL } from \"../constants/action-types\";\nimport axios from \"axios\";\nimport API from \"../../utils/API/API\";\nconst initialState = {\n  user: {\n    authenticated: false\n  },\n  business: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    //this check the token in localStorage and set the default values for authenticated request from client\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\n      //const token = localStorage.getItem(\"token\");\n      // axios.defaults.baseURL = 'http://localhost:3000/'\n      // axios.defaults.headers.common= {'Authorization': `Bearer ${token}`}\n      return Object.assign({}, state, {\n        user: {\n          authenticated: action.payload.authenticated,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          phone: action.payload.user.phone\n        }\n      });\n    }\n  } // Update profile in Profile Page\n\n\n  if (action.type === UPDATE_PROFILE) {\n    return Object.assign({}, state, {\n      user: _objectSpread({}, state.user, {\n        email: action.payload.email,\n        name: action.payload.name,\n        phone: action.payload.phone\n      })\n    });\n  }\n\n  if (action.type === FETCH_PROVINCE) {\n    return Object.assign({}, state, {\n      provinces: action.payload\n    });\n  }\n\n  if (action.type === PUSH_BUSINESS_TO_MODAL) {\n    return Object.assign({}, state, {\n      business: action.payload\n    });\n  } //logout the user and delete the token in localStorage and in the server as well\n\n\n  if (action.type === LOGOUT) {\n    localStorage.clear();\n    API.post(`users/logout`).then(response => {\n      axios.defaults.baseURL = \"\";\n      axios.defaults.headers.common = {\n        Authorization: ``\n      };\n    }).catch(error => {\n      console.log(error);\n    });\n    return Object.assign({}, state, {\n      user: {\n        authenticated: false\n      }\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","UPDATE_PROFILE","FETCH_PROVINCE","PUSH_BUSINESS_TO_MODAL","axios","API","initialState","user","authenticated","business","rootReducer","state","action","type","localStorage","getItem","Object","assign","payload","email","name","phone","provinces","clear","post","then","response","defaults","baseURL","headers","common","Authorization","catch","error","console","log"],"mappings":"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","sourcesContent":["import {\n    AUTHENTICATE,\n    LOGOUT,\n    UPDATE_PROFILE,\n    FETCH_PROVINCE, \n    PUSH_BUSINESS_TO_MODAL\n} from \"../constants/action-types\";\nimport axios from \"axios\";\nimport API from \"../../utils/API/API\";\n\nconst initialState = {\n    user: {\n        authenticated: false\n    },\n    business: {}\n\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === AUTHENTICATE) {\n        //this check the token in localStorage and set the default values for authenticated request from client\n        if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\n            //const token = localStorage.getItem(\"token\");\n            // axios.defaults.baseURL = 'http://localhost:3000/'\n            // axios.defaults.headers.common= {'Authorization': `Bearer ${token}`}\n\n            return Object.assign({}, state, {\n                user: {\n                    authenticated: action.payload.authenticated,\n                    email: action.payload.user.email,\n                    name: action.payload.user.name,\n                    phone: action.payload.user.phone\n                }\n            });\n        }\n    }\n\n    // Update profile in Profile Page\n    if (action.type === UPDATE_PROFILE) {\n        return Object.assign({}, state, {\n            user: {\n                ...state.user,\n                email: action.payload.email,\n                name: action.payload.name,\n                phone: action.payload.phone\n            }\n        });\n    }\n\n    if(action.type === FETCH_PROVINCE) {\n        return Object.assign({}, state, {\n            provinces: action.payload\n        })\n    }\n\n    if(action.type === PUSH_BUSINESS_TO_MODAL) {\n        return Object.assign({}, state, {\n            business: action.payload\n        })\n    }\n\n    //logout the user and delete the token in localStorage and in the server as well\n    if (action.type === LOGOUT) {\n        localStorage.clear();\n        API\n            .post(`users/logout`)\n            .then(response => {\n                axios.defaults.baseURL = \"\";\n                axios.defaults.headers.common = { Authorization: `` };\n            })\n            .catch(error => {\n                console.log(error)\n            });\n        return Object.assign({}, state, {\n            user: {\n                authenticated: false\n            }\n        });\n    }\n    return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}