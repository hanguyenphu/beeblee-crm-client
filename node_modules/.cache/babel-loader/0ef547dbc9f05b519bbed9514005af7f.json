{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/ContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreateContact = e => {\n      e.preventDefault();\n      const contact = this.state.contact;\n      axios.post(`contacts`, contact).then(response => {\n        if (response.data.duplicated) {\n          this.setState({\n            dublicated: true,\n            dublicatedContact: response.data.contact\n          });\n        } else {\n          this.setState({\n            successMessage: \"Save successfully\"\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Cannot save the data\"\n        });\n      });\n    };\n\n    this.handleInputChange = e => {\n      const phoneRegex = /^\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4}){9,10}$/;\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === \"phone\") {\n        value = value.replace(phoneRegex, \"($1) $2-$3\");\n      }\n\n      let contact = _objectSpread({}, this.state.contact, {\n        [field]: value\n      });\n\n      this.setState({\n        contact\n      });\n    };\n\n    this.state = {\n      contact: {\n        name: \"\",\n        phone: \"\",\n        email: \"\"\n      }\n    };\n  }\n\n  render() {\n    const contact = this.state.contact;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleCreateContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 2,\n      m: 2,\n      xl: 2,\n      label: \"Name\",\n      name: \"name\",\n      value: contact.name,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone (no space, no +1)\",\n      name: \"phone\",\n      value: contact.phone,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 4,\n      xl: 4,\n      label: \"Email\",\n      email: true,\n      validate: true,\n      value: contact.email,\n      name: \"email\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"save\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.successMessage && React.createElement(\"p\", {\n      className: \"green-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.successMessage)), this.state.dublicated && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"A contact has been found with this phone number\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Name: \", this.state.dublicatedContact.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Phone: \", this.state.dublicatedContact.phone), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Email: \", this.state.dublicatedContact.email), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Use this contact\"), React.createElement(Button, {\n      className: \" black-text grey lighten-4\",\n      style: {\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/contact/ContactForm.jsx"],"names":["React","Component","connect","TextInput","Icon","Button","Row","axios","ContactForm","constructor","props","handleCreateContact","e","preventDefault","contact","state","post","then","response","data","duplicated","setState","dublicated","dublicatedContact","successMessage","catch","error","errorMessage","handleInputChange","phoneRegex","field","target","name","value","replace","phone","email","render","marginTop","marginLeft","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,GAAlC,QAA6C,mBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,mBAXmB,GAWGC,CAAC,IAAI;AACvBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AAEAP,MAAAA,KAAK,CACAS,IADL,CACW,UADX,EACsBF,OADtB,EAEKG,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAlB,EAA8B;AAC1B,eAAKC,QAAL,CAAc;AACVC,YAAAA,UAAU,EAAE,IADF;AAEVC,YAAAA,iBAAiB,EAAEL,QAAQ,CAACC,IAAT,CAAcL;AAFvB,WAAd;AAIH,SALD,MAKO;AACH,eAAKO,QAAL,CAAc;AACVG,YAAAA,cAAc,EAAE;AADN,WAAd;AAGH;AACJ,OAbL,EAcKC,KAdL,CAcWC,KAAK,IAAI;AACZ,aAAKL,QAAL,CAAc;AACVM,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH,OAlBL;AAmBH,KAnCkB;;AAAA,SAqCnBC,iBArCmB,GAqCChB,CAAC,IAAI;AACrB,YAAMiB,UAAU,GAAG,wDAAnB;AACA,YAAMC,KAAK,GAAGlB,CAAC,CAACmB,MAAF,CAASC,IAAvB;AACA,UAAIC,KAAK,GAAGrB,CAAC,CAACmB,MAAF,CAASE,KAArB;;AAEA,UAAIH,KAAK,KAAK,OAAd,EAAuB;AACnBG,QAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAcL,UAAd,EAA0B,YAA1B,CAAR;AAEH;;AAED,UAAIf,OAAO,qBACJ,KAAKC,KAAL,CAAWD,OADP;AAEP,SAACgB,KAAD,GAASG;AAFF,QAAX;;AAKA,WAAKZ,QAAL,CAAc;AACVP,QAAAA;AADU,OAAd;AAGH,KAvDkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE;AACLkB,QAAAA,IAAI,EAAE,EADD;AAELG,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,KAAK,EAAE;AAHF;AADA,KAAb;AAOH;;AAgDDC,EAAAA,MAAM,GAAG;AACL,UAAMvB,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAA3B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKH,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,CAAC,EAAE,EADP;AAEI,MAAA,CAAC,EAAE,CAFP;AAGI,MAAA,CAAC,EAAE,CAHP;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,KAAK,EAAC,MALV;AAMI,MAAA,IAAI,EAAC,MANT;AAOI,MAAA,KAAK,EAAEG,OAAO,CAACkB,IAPnB;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,QAAQ,EAAE,KAAKJ,iBATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYI,oBAAC,SAAD;AACI,MAAA,CAAC,EAAE,EADP;AAEI,MAAA,CAAC,EAAE,CAFP;AAGI,MAAA,CAAC,EAAE,CAHP;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,KAAK,EAAC,yBALV;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,KAAK,EAAEd,OAAO,CAACqB,KAPnB;AAQI,MAAA,QAAQ,MARZ;AASI,MAAA,QAAQ,EAAE,KAAKP,iBATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAuBI,oBAAC,SAAD;AACI,MAAA,CAAC,EAAE,EADP;AAEI,MAAA,CAAC,EAAE,CAFP;AAGI,MAAA,CAAC,EAAE,CAHP;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,KAAK,MANT;AAOI,MAAA,QAAQ,MAPZ;AAQI,MAAA,KAAK,EAAEd,OAAO,CAACsB,KARnB;AASI,MAAA,IAAI,EAAC,OATT;AAUI,MAAA,QAAQ,EAAE,KAAKR,iBAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EAmCI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CAnCJ,CADJ,EA8CI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvB,KAAL,CAAWS,cAAX,IACG;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWS,cADhB,CAFR,CA9CJ,EAsDK,KAAKT,KAAL,CAAWO,UAAX,IACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKP,KAAL,CAAWQ,iBAAX,CAA6BS,IAAvC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKjB,KAAL,CAAWQ,iBAAX,CAA6BY,KAAxC,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKpB,KAAL,CAAWQ,iBAAX,CAA6Ba,KAAxC,CANJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,4BADd;AAEI,MAAA,KAAK,EAAE;AAAEG,QAAAA,UAAU,EAAE;AAAd,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAPJ,CAvDR,CADJ,CADJ;AA8EH;;AA3I+B;;AA8IpC,MAAMC,eAAe,GAAGzB,KAAK,KAAK,EAAL,CAA7B;;AAEA,MAAM0B,kBAAkB,GAAG,EAA3B;AAEA,eAAevC,OAAO,CAACsC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjC,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass ContactForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contact: {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            }\n        };\n    }\n\n    handleCreateContact = e => {\n        e.preventDefault();\n\n        const contact = this.state.contact;\n\n        axios\n            .post(`contacts`, contact)\n            .then(response => {\n                if (response.data.duplicated) {\n                    this.setState({\n                        dublicated: true,\n                        dublicatedContact: response.data.contact\n                    });\n                } else {\n                    this.setState({\n                        successMessage: \"Save successfully\"\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    errorMessage: \"Cannot save the data\"\n                });\n            });\n    };\n\n    handleInputChange = e => {\n        const phoneRegex = /^\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4}){9,10}$/;\n        const field = e.target.name;\n        let value = e.target.value;\n\n        if (field === \"phone\") {\n            value = value.replace(phoneRegex, \"($1) $2-$3\");\n            \n        }\n\n        let contact = {\n            ...this.state.contact,\n            [field]: value\n        };\n\n        this.setState({\n            contact\n        });\n    };\n\n    render() {\n        const contact = this.state.contact;\n\n        return (\n            <div>\n                <form onSubmit={this.handleCreateContact}>\n                    <Row>\n                        <TextInput\n                            s={12}\n                            l={2}\n                            m={2}\n                            xl={2}\n                            label='Name'\n                            name='name'\n                            value={contact.name}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={3}\n                            m={3}\n                            xl={3}\n                            label='Phone (no space, no +1)'\n                            name='phone'\n                            value={contact.phone}\n                            required\n                            onChange={this.handleInputChange}\n                        />\n                        <TextInput\n                            s={12}\n                            l={6}\n                            m={4}\n                            xl={4}\n                            label='Email'\n                            email\n                            validate\n                            value={contact.email}\n                            name='email'\n                            onChange={this.handleInputChange}\n                        />\n                        <Button\n                            node='button'\n                            type='submit'\n                            waves='light'\n                            style={{ marginTop: \"20px\" }}\n                        >\n                            Save\n                            <Icon left>save</Icon>\n                        </Button>\n                    </Row>\n                    <Row>\n                        {this.state.successMessage && (\n                            <p className='green-text'>\n                                {this.state.successMessage}\n                            </p>\n                        )}\n                    </Row>\n\n                    {this.state.dublicated && (\n                        <Row>\n                            <h6 className='red-text'>\n                                A contact has been found with this phone number\n                            </h6>\n                            <p>Name: {this.state.dublicatedContact.name}</p>\n                            <p>Phone: {this.state.dublicatedContact.phone}</p>\n                            <p>Email: {this.state.dublicatedContact.email}</p>\n                            <Row>\n                                <Button>Use this contact</Button>\n                                <Button\n                                    className=' black-text grey lighten-4'\n                                    style={{ marginLeft: \"20px\" }}\n                                >\n                                    Cancel\n                                </Button>\n                            </Row>\n                        </Row>\n                    )}\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n"]},"metadata":{},"sourceType":"module"}