{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{Row,TextInput,Textarea,Button,DatePicker}from\"react-materialize\";import API from\"../../utils/API/API\";import formatDate from\"../../utils/commons/FormatDate\";import Loading from\"../loading/Loading\";function mapStateToProps(state){return{};}var AccountForm=/*#__PURE__*/function(_Component){_inherits(AccountForm,_Component);function AccountForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,AccountForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AccountForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={edited:false,successMessage:\"\",errorMessage:\"\"};_this.handleChangeAccount=function(e){var field=e.target.name;var value=e.target.value;var account=_this.state.account;account[field]=value;_this.setState({account:account,edited:true});};_this.updateAccount=function(account){API.patch(\"/accounts/\".concat(account._id),account).then(function(response){_this.setState({successMessage:\"Saved Successfully\",errorMessage:\"\",edited:false});}).catch(function(error){_this.setState({successMessage:\"\",errorMessage:\"Some errors have been occured!\",edited:false});});};_this.createAccount=function(account){API.post(\"/accounts\",account).then(function(response){var account={domain:\"\",username:\"\",password:\"\",startDate:\"\",expireDate:\"\",price:\"\",description:\"\",project:_this.props.account.project};_this.setState({successMessage:\"Saved Successfully\",errorMessage:\"\",edited:false,account:account});_this.props.getProjectDetail();}).catch(function(error){_this.setState({successMessage:\"\",errorMessage:\"Some errors have been occured!\",edited:false});});};_this.handleSubmit=function(e){e.preventDefault();var account=_this.state.account;if(account._id){_this.updateAccount(account);}else{_this.createAccount(account);}};return _this;}_createClass(AccountForm,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.account){var account=this.props.account;if(account.price.$numberDecimal){account.price=account.price.$numberDecimal;}this.setState(_objectSpread({},this.state,{account:account}));}}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,account=_this$state.account,edited=_this$state.edited;if(!account){return React.createElement(Loading,null);}return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(Row,null,React.createElement(TextInput,{s:12,l:6,m:6,xl:6,label:\"Domain:\",name:\"domain\",value:account.domain,onChange:this.handleChangeAccount,required:true}),React.createElement(TextInput,{s:12,l:6,m:6,xl:6,label:\"Username:\",name:\"username\",value:account.username,onChange:this.handleChangeAccount}),React.createElement(TextInput,{s:12,l:6,m:6,xl:6,label:\"Password:\",name:\"password\",value:account.password,onChange:this.handleChangeAccount}),React.createElement(DatePicker,{name:\"startDate\",label:\"Start Date:\",s:12,l:6,m:6,xl:6,options:{format:\"mmm dd, yyyy\",defaultDate:new Date(formatDate(account.startDate)),setDefaultDate:true},value:formatDate(account.startDate),onChange:function onChange(value){var account=Object.assign(_this2.state.account,{startDate:value});_this2.setState(_objectSpread({},_this2.state,{edited:true,account:account}));}}),React.createElement(DatePicker,{name:\"expireDate\",label:\"Expire Date:\",s:12,l:6,m:6,xl:6,options:{format:\"mmm dd, yyyy\",defaultDate:new Date(formatDate(account.expireDate)),setDefaultDate:true},value:formatDate(account.expireDate),onChange:function onChange(value){var account=Object.assign(_this2.state.account,{expireDate:value});_this2.setState(_objectSpread({},_this2.state,{edited:true,account:account}));}}),React.createElement(TextInput,{s:12,l:6,m:6,xl:6,label:\"Price: (per year)\",name:\"price\",value:account.price,onChange:this.handleChangeAccount}),React.createElement(Textarea,{s:12,l:12,m:12,xl:12,label:\"Description:\",name:\"description\",value:account.description,onChange:this.handleChangeAccount})),React.createElement(Row,null,React.createElement(Button,{node:\"button\",className:edited?\"gradient-btn btn-green\":\"\",waves:\"green\",disabled:!edited},\"Save\"))),React.createElement(Row,null,this.state.successMessage&&React.createElement(Row,{className:\"animated shake\"},React.createElement(\"p\",{className:\"green-text animated bounceOutLeft delay-3s\"},this.state.successMessage)),this.state.errorMessage&&React.createElement(Row,{className:\"animated rubberBand\"},React.createElement(\"p\",{className:\"red-text animated bounceOutLeft delay-3s \"},this.state.errorMessage))));}}]);return AccountForm;}(Component);export default connect(mapStateToProps)(AccountForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/account/AccountForm.jsx"],"names":["React","Component","connect","Row","TextInput","Textarea","Button","DatePicker","API","formatDate","Loading","mapStateToProps","state","AccountForm","edited","successMessage","errorMessage","handleChangeAccount","e","field","target","name","value","account","setState","updateAccount","patch","_id","then","response","catch","error","createAccount","post","domain","username","password","startDate","expireDate","price","description","project","props","getProjectDetail","handleSubmit","preventDefault","$numberDecimal","format","defaultDate","Date","setDefaultDate","Object","assign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Textarea,\r\n  Button,\r\n  DatePicker\r\n} from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatDate from \"../../utils/commons/FormatDate\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass AccountForm extends Component {\r\n  state = {\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.account) {\r\n      let account = this.props.account;\r\n      if (account.price.$numberDecimal) {\r\n        account.price = account.price.$numberDecimal;\r\n      }\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        account\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeAccount = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let account = this.state.account;\r\n    account[field] = value;\r\n    this.setState({\r\n      account,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  updateAccount = account => {\r\n    API.patch(`/accounts/${account._id}`, account)\r\n      .then(response => {\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  createAccount = account => {\r\n    API.post(`/accounts`, account)\r\n      .then(response => {\r\n        let account = {\r\n          domain: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          startDate: \"\",\r\n          expireDate: \"\",\r\n          price: \"\",\r\n          description: \"\",\r\n          project: this.props.account.project\r\n        };\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false,\r\n          account\r\n        });\r\n        this.props.getProjectDetail();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { account } = this.state;\r\n    if (account._id) {\r\n      this.updateAccount(account);\r\n    } else {\r\n      this.createAccount(account);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { account, edited } = this.state;\r\n    if (!account) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Domain:\"\r\n              name=\"domain\"\r\n              value={account.domain}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Username:\"\r\n              name=\"username\"\r\n              value={account.username}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Password:\"\r\n              name=\"password\"\r\n              value={account.password}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.startDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.startDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  startDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"expireDate\"\r\n              label=\"Expire Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.expireDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.expireDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  expireDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price: (per year)\"\r\n              name=\"price\"\r\n              value={account.price}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              value={account.description}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AccountForm);\r\n"]},"metadata":{},"sourceType":"module"}