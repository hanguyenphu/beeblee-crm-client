{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{TextInput,Icon,Button,Row}from\"react-materialize\";import API from\"../../utils/API/API\";import formatPhone from\"../../utils/commons/FormatPhone\";var ContactForm=/*#__PURE__*/function(_Component){_inherits(ContactForm,_Component);function ContactForm(props){var _this;_classCallCheck(this,ContactForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(ContactForm).call(this,props));_this.handleCreateContact=function(e){e.preventDefault();var contact=_this.state.contact;var business=_this.props.business||{};if(business){contact.business=business._id;}API.post(\"contacts\",contact).then(function(response){if(response.data.duplicated){_this.setState({dublicated:true,dublicatedContact:response.data.contact});}else{_this.setState({successMessage:\"Save successfully\"});_this.props.addMoreContactToTable(response.data.contact);}}).catch(function(error){_this.setState({errorMessage:\"Cannot save the data\"});});};_this.handleInputChange=function(e){_this.setState(_objectSpread({},_this.state,{successMessage:\"\",errorMessage:\"\"}));var field=e.target.name;var value=e.target.value;if(field===\"phone\"){value=formatPhone(value);}var contact=_objectSpread({},_this.state.contact,_defineProperty({},field,value));_this.setState({contact:contact});};_this.cancelContact=function(e){e.preventDefault();_this.setState(_objectSpread({},_this.state,{dublicated:false,dublicatedContact:{},successMessage:\"\",errorMessage:\"\"}));};_this.useExistingContact=function(e){e.preventDefault();var contact=_this.state.dublicatedContact;var business=_this.props.business;API.patch(\"businesses/addContact/\".concat(business._id),contact).then(function(response){if(!business.contacts.includes(contact._id)){_this.props.addMoreContactToTable(contact);}_this.setState(_objectSpread({},_this.state,{dublicated:false,dublicatedContact:{},successMessage:\"Save successfully\",errorMessage:\"\"}));}).catch(function(error){_this.setState({errorMessage:\"Cannot save the contact to the business\"});});};_this.state={contact:{name:\"\",phone:\"\",email:\"\"}};return _this;}_createClass(ContactForm,[{key:\"render\",value:function render(){var contact=this.state.contact;return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:this.handleCreateContact},React.createElement(Row,null,React.createElement(TextInput,{s:12,l:2,m:2,xl:2,label:\"Name\",name:\"name\",value:contact.name,required:true,onChange:this.handleInputChange}),React.createElement(TextInput,{s:12,l:3,m:3,xl:3,label:\"Phone\",name:\"phone\",value:contact.phone,required:true,onChange:this.handleInputChange}),React.createElement(TextInput,{s:12,l:6,m:4,xl:4,label:\"Email\",email:true,validate:true,value:contact.email,name:\"email\",onChange:this.handleInputChange}),React.createElement(Button,{node:\"button\",type:\"submit\",waves:\"light\",style:{marginTop:\"20px\"},className:\"gradient-btn btn-red\"},\"Add\",React.createElement(Icon,{left:true},\"add_box\"))),React.createElement(Row,null,this.state.successMessage&&React.createElement(\"p\",{className:\"green-text\"},this.state.successMessage)),this.state.dublicated&&React.createElement(Row,{className:\"animated jello\"},React.createElement(\"h6\",{className:\"red-text\"},\"A contact has been found with this phone number\"),React.createElement(\"p\",null,\"Name: \",this.state.dublicatedContact.name),React.createElement(\"p\",null,\"Phone: \",this.state.dublicatedContact.phone),React.createElement(\"p\",null,\"Email: \",this.state.dublicatedContact.email),React.createElement(Row,null,React.createElement(Button,{onClick:this.useExistingContact,className:\"gradient-btn btn-green\"},\"Use this contact\"),React.createElement(Button,{className:\" black-text grey lighten-4\",style:{marginLeft:\"20px\"},onClick:this.cancelContact},\"Cancel\")))));}}]);return ContactForm;}(Component);var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps={};export default connect(mapStateToProps,mapDispatchToProps)(ContactForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/contact/ContactForm.jsx"],"names":["React","Component","connect","TextInput","Icon","Button","Row","API","formatPhone","ContactForm","props","handleCreateContact","e","preventDefault","contact","state","business","_id","post","then","response","data","duplicated","setState","dublicated","dublicatedContact","successMessage","addMoreContactToTable","catch","error","errorMessage","handleInputChange","field","target","name","value","cancelContact","useExistingContact","patch","contacts","includes","phone","email","marginTop","marginLeft","mapStateToProps","mapDispatchToProps"],"mappings":"imCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,MAA1B,CAAkCC,GAAlC,KAA6C,mBAA7C,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,C,GAEMC,CAAAA,W,qEACF,qBAAYC,KAAZ,CAAmB,6CACf,6EAAMA,KAAN,GADe,MAWnBC,mBAXmB,CAWG,SAAAC,CAAC,CAAI,CACvBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,OAAO,CAAG,MAAKC,KAAL,CAAWD,OAA3B,CACA,GAAME,CAAAA,QAAQ,CAAG,MAAKN,KAAL,CAAWM,QAAX,EAAuB,EAAxC,CACA,GAAIA,QAAJ,CAAc,CACVF,OAAO,CAACE,QAAR,CAAmBA,QAAQ,CAACC,GAA5B,CACH,CACDV,GAAG,CACEW,IADL,YACsBJ,OADtB,EAEKK,IAFL,CAEU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAlB,CAA8B,CAC1B,MAAKC,QAAL,CAAc,CACVC,UAAU,CAAE,IADF,CAEVC,iBAAiB,CAAEL,QAAQ,CAACC,IAAT,CAAcP,OAFvB,CAAd,EAIH,CALD,IAKO,CACH,MAAKS,QAAL,CAAc,CACVG,cAAc,CAAE,mBADN,CAAd,EAIA,MAAKhB,KAAL,CAAWiB,qBAAX,CAAiCP,QAAQ,CAACC,IAAT,CAAcP,OAA/C,EACH,CACJ,CAfL,EAgBKc,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZ,MAAKN,QAAL,CAAc,CACVO,YAAY,CAAE,sBADJ,CAAd,EAGH,CApBL,EAqBH,CAxCkB,OA0CnBC,iBA1CmB,CA0CC,SAAAnB,CAAC,CAAI,CACrB,MAAKW,QAAL,kBACO,MAAKR,KADZ,EAEIW,cAAc,CAAE,EAFpB,CAGII,YAAY,CAAE,EAHlB,IAMA,GAAME,CAAAA,KAAK,CAAGpB,CAAC,CAACqB,MAAF,CAASC,IAAvB,CACA,GAAIC,CAAAA,KAAK,CAAGvB,CAAC,CAACqB,MAAF,CAASE,KAArB,CAEA,GAAIH,KAAK,GAAK,OAAd,CAAuB,CACnBG,KAAK,CAAC3B,WAAW,CAAC2B,KAAD,CAAjB,CACH,CAED,GAAIrB,CAAAA,OAAO,kBACJ,MAAKC,KAAL,CAAWD,OADP,oBAENkB,KAFM,CAEEG,KAFF,EAAX,CAKA,MAAKZ,QAAL,CAAc,CACVT,OAAO,CAAPA,OADU,CAAd,EAGH,CAhEkB,OAkEnBsB,aAlEmB,CAkEH,SAAAxB,CAAC,CAAI,CACjBA,CAAC,CAACC,cAAF,GACA,MAAKU,QAAL,kBACO,MAAKR,KADZ,EAEIS,UAAU,CAAE,KAFhB,CAGIC,iBAAiB,CAAE,EAHvB,CAIIC,cAAc,CAAE,EAJpB,CAKII,YAAY,CAAE,EALlB,IAOH,CA3EkB,OA6EnBO,kBA7EmB,CA6EE,SAAAzB,CAAC,CAAI,CACtBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,OAAO,CAAG,MAAKC,KAAL,CAAWU,iBAA3B,CACA,GAAMT,CAAAA,QAAQ,CAAG,MAAKN,KAAL,CAAWM,QAA5B,CAEAT,GAAG,CACE+B,KADL,iCACoCtB,QAAQ,CAACC,GAD7C,EACoDH,OADpD,EAEKK,IAFL,CAEU,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACJ,QAAQ,CAACuB,QAAT,CAAkBC,QAAlB,CAA2B1B,OAAO,CAACG,GAAnC,CAAL,CAA8C,CAC1C,MAAKP,KAAL,CAAWiB,qBAAX,CAAiCb,OAAjC,EACH,CACD,MAAKS,QAAL,kBACO,MAAKR,KADZ,EAEIS,UAAU,CAAE,KAFhB,CAGIC,iBAAiB,CAAE,EAHvB,CAIIC,cAAc,CAAE,mBAJpB,CAKII,YAAY,CAAE,EALlB,IAOH,CAbL,EAcKF,KAdL,CAcW,SAAAC,KAAK,CAAI,CACZ,MAAKN,QAAL,CAAc,CACVO,YAAY,CAAE,yCADJ,CAAd,EAGH,CAlBL,EAmBH,CArGkB,CAEf,MAAKf,KAAL,CAAa,CACTD,OAAO,CAAE,CACLoB,IAAI,CAAE,EADD,CAELO,KAAK,CAAE,EAFF,CAGLC,KAAK,CAAE,EAHF,CADA,CAAb,CAFe,aASlB,C,+DA8FQ,CACL,GAAM5B,CAAAA,OAAO,CAAG,KAAKC,KAAL,CAAWD,OAA3B,CAEA,MACI,gCACI,4BAAM,QAAQ,CAAE,KAAKH,mBAArB,EACI,oBAAC,GAAD,MACI,oBAAC,SAAD,EACI,CAAC,CAAE,EADP,CAEI,CAAC,CAAE,CAFP,CAGI,CAAC,CAAE,CAHP,CAII,EAAE,CAAE,CAJR,CAKI,KAAK,CAAC,MALV,CAMI,IAAI,CAAC,MANT,CAOI,KAAK,CAAEG,OAAO,CAACoB,IAPnB,CAQI,QAAQ,KARZ,CASI,QAAQ,CAAE,KAAKH,iBATnB,EADJ,CAYI,oBAAC,SAAD,EACI,CAAC,CAAE,EADP,CAEI,CAAC,CAAE,CAFP,CAGI,CAAC,CAAE,CAHP,CAII,EAAE,CAAE,CAJR,CAKI,KAAK,CAAC,OALV,CAMI,IAAI,CAAC,OANT,CAOI,KAAK,CAAEjB,OAAO,CAAC2B,KAPnB,CAQI,QAAQ,KARZ,CASI,QAAQ,CAAE,KAAKV,iBATnB,EAZJ,CAuBI,oBAAC,SAAD,EACI,CAAC,CAAE,EADP,CAEI,CAAC,CAAE,CAFP,CAGI,CAAC,CAAE,CAHP,CAII,EAAE,CAAE,CAJR,CAKI,KAAK,CAAC,OALV,CAMI,KAAK,KANT,CAOI,QAAQ,KAPZ,CAQI,KAAK,CAAEjB,OAAO,CAAC4B,KARnB,CASI,IAAI,CAAC,OATT,CAUI,QAAQ,CAAE,KAAKX,iBAVnB,EAvBJ,CAmCI,oBAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,IAAI,CAAC,QAFT,CAGI,KAAK,CAAC,OAHV,CAII,KAAK,CAAE,CAAEY,SAAS,CAAE,MAAb,CAJX,CAKI,SAAS,CAAC,sBALd,QAQI,oBAAC,IAAD,EAAM,IAAI,KAAV,YARJ,CAnCJ,CADJ,CA+CI,oBAAC,GAAD,MACK,KAAK5B,KAAL,CAAWW,cAAX,EACG,yBAAG,SAAS,CAAC,YAAb,EACK,KAAKX,KAAL,CAAWW,cADhB,CAFR,CA/CJ,CAuDK,KAAKX,KAAL,CAAWS,UAAX,EACG,oBAAC,GAAD,EAAK,SAAS,CAAC,gBAAf,EACI,0BAAI,SAAS,CAAC,UAAd,oDADJ,CAII,sCAAU,KAAKT,KAAL,CAAWU,iBAAX,CAA6BS,IAAvC,CAJJ,CAKI,uCAAW,KAAKnB,KAAL,CAAWU,iBAAX,CAA6BgB,KAAxC,CALJ,CAMI,uCAAW,KAAK1B,KAAL,CAAWU,iBAAX,CAA6BiB,KAAxC,CANJ,CAOI,oBAAC,GAAD,MACI,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKL,kBAAtB,CAA0C,SAAS,CAAC,wBAApD,qBADJ,CAII,oBAAC,MAAD,EACI,SAAS,CAAC,4BADd,CAEI,KAAK,CAAE,CAAEO,UAAU,CAAE,MAAd,CAFX,CAGI,OAAO,CAAE,KAAKR,aAHlB,WAJJ,CAPJ,CAxDR,CADJ,CADJ,CAkFH,C,yBA7LqBnC,S,EAgM1B,GAAM4C,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAA9B,KAAK,QAAK,EAAL,EAA7B,CAEA,GAAM+B,CAAAA,kBAAkB,CAAG,EAA3B,CAEA,cAAe5C,CAAAA,OAAO,CAAC2C,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CrC,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nimport formatPhone from \"../../utils/commons/FormatPhone\"\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contact: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                email: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    handleCreateContact = e => {\r\n        e.preventDefault();\r\n\r\n        const contact = this.state.contact;\r\n        const business = this.props.business || {};\r\n        if (business) {\r\n            contact.business = business._id;\r\n        }\r\n        API\r\n            .post(`contacts`, contact)\r\n            .then(response => {\r\n                if (response.data.duplicated) {\r\n                    this.setState({\r\n                        dublicated: true,\r\n                        dublicatedContact: response.data.contact\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        successMessage: \"Save successfully\"\r\n                    });\r\n\r\n                    this.props.addMoreContactToTable(response.data.contact);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errorMessage: \"Cannot save the data\"\r\n                });\r\n            });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            successMessage: \"\",\r\n            errorMessage: \"\"\r\n        });\r\n\r\n        const field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        if (field === \"phone\") {\r\n            value=formatPhone(value)\r\n        }\r\n\r\n        let contact = {\r\n            ...this.state.contact,\r\n            [field]: value\r\n        };\r\n\r\n        this.setState({\r\n            contact\r\n        });\r\n    };\r\n\r\n    cancelContact = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            ...this.state,\r\n            dublicated: false,\r\n            dublicatedContact: {},\r\n            successMessage: \"\",\r\n            errorMessage: \"\"\r\n        });\r\n    };\r\n\r\n    useExistingContact = e => {\r\n        e.preventDefault();\r\n        const contact = this.state.dublicatedContact;\r\n        const business = this.props.business;\r\n\r\n        API\r\n            .patch(`businesses/addContact/${business._id}`, contact)\r\n            .then(response => {\r\n                if (!business.contacts.includes(contact._id)) {\r\n                    this.props.addMoreContactToTable(contact);\r\n                }\r\n                this.setState({\r\n                    ...this.state,\r\n                    dublicated: false,\r\n                    dublicatedContact: {},\r\n                    successMessage: \"Save successfully\",\r\n                    errorMessage: \"\"\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errorMessage: \"Cannot save the contact to the business\"\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const contact = this.state.contact;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleCreateContact} >\r\n                    <Row >\r\n                        <TextInput\r\n                            s={12}\r\n                            l={2}\r\n                            m={2}\r\n                            xl={2}\r\n                            label='Name'\r\n                            name='name'\r\n                            value={contact.name}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={3}\r\n                            m={3}\r\n                            xl={3}\r\n                            label='Phone'\r\n                            name='phone'\r\n                            value={contact.phone}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={6}\r\n                            m={4}\r\n                            xl={4}\r\n                            label='Email'\r\n                            email\r\n                            validate\r\n                            value={contact.email}\r\n                            name='email'\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Button\r\n                            node='button'\r\n                            type='submit'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\" }}\r\n                            className=\"gradient-btn btn-red\"\r\n                        >\r\n                            Add\r\n                            <Icon left>add_box</Icon>\r\n                        </Button>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.state.successMessage && (\r\n                            <p className='green-text'>\r\n                                {this.state.successMessage}\r\n                            </p>\r\n                        )}\r\n                    </Row>\r\n\r\n                    {this.state.dublicated && (\r\n                        <Row className=\"animated jello\">\r\n                            <h6 className='red-text'>\r\n                                A contact has been found with this phone number\r\n                            </h6>\r\n                            <p>Name: {this.state.dublicatedContact.name}</p>\r\n                            <p>Phone: {this.state.dublicatedContact.phone}</p>\r\n                            <p>Email: {this.state.dublicatedContact.email}</p>\r\n                            <Row>\r\n                                <Button onClick={this.useExistingContact} className=\"gradient-btn btn-green\">\r\n                                    Use this contact\r\n                                </Button>\r\n                                <Button\r\n                                    className=' black-text grey lighten-4'\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                    onClick={this.cancelContact}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Row>\r\n                        </Row>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n"]},"metadata":{},"sourceType":"module"}