{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\upload\\\\UploadTable.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Table, Icon } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass UploadTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.uploads);\n\n    if (this.props.uploads) {\n      this.setState({\n        uploads: this.props.uploads\n      });\n    }\n  }\n\n  render() {\n    const uploads = this.state.uploads;\n\n    if (!uploads) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      \"data-field\": \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Download\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, uploads.map(upload => {\n      return React.createElement(\"tr\", {\n        key: upload._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, upload.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, upload.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: upload.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"cloud_download\"))));\n    })))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(UploadTable);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/upload/UploadTable.jsx"],"names":["React","Component","connect","Row","Table","Icon","Loading","mapStateToProps","state","UploadTable","loading","componentDidMount","console","log","props","uploads","setState","render","map","upload","_id","title","description","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,IAApB,QAA+B,mBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AACD;;AAED,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACJE,MAAAA,OAAO,EAAE;AADL,KADwB;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;;AACA,QAAG,KAAKD,KAAL,CAAWC,OAAd,EAAsB;AAClB,WAAKC,QAAL,CAAc;AACVD,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC;AADV,OAAd;AAGH;AACJ;;AACHE,EAAAA,MAAM,GAAG;AAAA,UACEF,OADF,GACa,KAAKP,KADlB,CACEO,OADF;;AAEL,QAAG,CAACA,OAAJ,EAAa;AACT,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACH,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,oBAAW,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAI,oBAAW,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAI,oBAAW,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AACnB,aAAO;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,MAAM,CAACE,KAAZ,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,MAAM,CAACG,WAAZ,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAG,QAAA,IAAI,EAAEH,MAAM,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAArB,CAAJ,CAHG,CAAP;AAKH,KANA,CADD,CARF,CADF,CADF,CADF;AAyBD;;AA1CiC;;AA6CpC,eAAerB,OAAO,CAACK,eAAD,CAAP,CAAyBE,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Row, Table, Icon} from \"react-materialize\"\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadTable extends Component {\r\n    state = {\r\n        loading: []\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.uploads)\r\n        if(this.props.uploads){\r\n            this.setState({\r\n                uploads: this.props.uploads\r\n            })\r\n        }\r\n    }\r\n  render() {\r\n      const {uploads} = this.state\r\n      if(!uploads) {\r\n          return <Loading/>\r\n      }\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th data-field=\"id\">Title</th>\r\n                <th data-field=\"name\">Description</th>\r\n                <th data-field=\"price\">Download</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {uploads.map(upload => {\r\n                return <tr key={upload._id}>\r\n                    <td>{upload.title}</td>\r\n                    <td>{upload.description}</td>\r\n                    <td><a href={upload.url}><Icon>cloud_download</Icon></a></td>\r\n                </tr>\r\n            })}\r\n\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadTable);\r\n"]},"metadata":{},"sourceType":"module"}