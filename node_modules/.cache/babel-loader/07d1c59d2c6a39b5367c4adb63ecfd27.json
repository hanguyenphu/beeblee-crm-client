{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\business\\\\Business.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Row, Table, TextInput, Select, Icon, Button } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { fetch_province, push_business_to_modal } from \"../../redux/actions/index\";\nimport BusinessModalDetail from \"./BusinessModalDetail\";\nimport API from \"../../utils/API/API\";\nimport formatPhone from \"../../utils/commons/FormatPhone\";\n\nconst mapStateToProps = state => {\n  return {\n    provinces: state.provinces\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProvinceToRedux: provinces => dispatch(fetch_province(provinces)),\n    pushBusinessToModal: business => dispatch(push_business_to_modal(business))\n  };\n}\n\nclass Business extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      const provinceRequest = API.get(\"provinces\");\n      const businessRequest = API.get(\"businesses\");\n      axios.all([provinceRequest, businessRequest]).then(axios.spread((...responses) => {\n        const provinces = responses[0].data;\n        const businesses = responses[1].data;\n        this.setState({\n          provinces,\n          businesses,\n          loading: false\n        }); //Save provinces data in redux for later usage\n\n        this.props.addProvinceToRedux(provinces);\n      })).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleInputChange = e => {\n      const searchBy = _objectSpread({}, this.state.searchBy);\n\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === \"phone\") {\n        value = formatPhone(value);\n      }\n\n      searchBy[field] = value;\n      this.setState(_objectSpread({}, this.state, {\n        searchBy\n      }));\n    };\n\n    this.getProvinceName = _id => {\n      const provinces = this.state.provinces;\n      const foundProvince = provinces.filter(province => province._id === _id);\n      return foundProvince[0].name;\n    };\n\n    this.handleOpenModal = business => () => {\n      this.setState({\n        business\n      });\n    };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      let businesses = this.state.businesses;\n      const fields = Object.keys(this.state.searchBy);\n      fields.forEach(field => {\n        businesses = this.filterByField(this.state.searchBy[field], field, businesses);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        search: true,\n        results: businesses\n      }));\n    };\n\n    this.handleResetFilter = e => {\n      e.preventDefault();\n      this.setState(_objectSpread({}, this.state, {\n        searchBy: {\n          name: \"\",\n          phone: \"\",\n          province: \"\"\n        },\n        search: false\n      }));\n    };\n\n    this.state = {\n      searchBy: {\n        name: \"\",\n        phone: \"\",\n        province: \"\"\n      },\n      provinces: [],\n      loading: true,\n      search: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  filterByField(searchText, field, array) {\n    let results = array.filter(item => item[field].replace(/\\s/g, \"\").toLowerCase().includes(searchText.replace(/\\s/g, \"\").toLowerCase()));\n    return results;\n  }\n\n  render() {\n    const _this$state$searchBy = this.state.searchBy,\n          name = _this$state$searchBy.name,\n          phone = _this$state$searchBy.phone,\n          province = _this$state$searchBy.province;\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          provinces = _this$state.provinces,\n          business = _this$state.business,\n          search = _this$state.search;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n    } //Get the set of search otherwise display all businesses\n\n\n    let businesses = search ? this.state.results : this.state.businesses;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Businesses   \", React.createElement(Button, {\n      className: \"gradient-btn btn-primary\",\n      node: \"button\",\n      style: {\n        marginRight: \"5px\",\n        bottom: \"-20px\",\n        marginBottom: \"20px\"\n      },\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Add New Business\")))), React.createElement(Row, {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Filter by\"), React.createElement(Col, {\n      s: 12,\n      m: 12,\n      l: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 4,\n      m: 4,\n      xl: 4,\n      label: \"Name\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Select, {\n      onChange: this.handleInputChange,\n      options: {\n        classes: \"\",\n        dropdownOptions: {\n          alignment: \"left\",\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: true,\n          container: null,\n          coverTrigger: true,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }\n      },\n      value: province,\n      name: \"province\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Select Province\"), provinces.map(province => {\n      return React.createElement(\"option\", {\n        className: \"black-text\",\n        key: province._id,\n        value: province._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, province.name);\n    })), React.createElement(Button, {\n      className: \"gradient-btn btn-primary\",\n      node: \"button\",\n      onClick: this.handleFilter,\n      style: {\n        marginRight: \"5px\",\n        bottom: \"-20px\",\n        marginBottom: \"20px\"\n      },\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      node: \"button\",\n      className: \"gradient-btn btn-white\",\n      onClick: this.handleResetFilter,\n      style: {\n        marginRight: \"5px\",\n        bottom: \"-20px\",\n        marginBottom: \"20px\"\n      },\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Reset\")))), React.createElement(Row, {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      m: 12,\n      l: 12,\n      xl: 12,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Province\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Details\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, businesses.length > 0 ? businesses.map(business => {\n      return React.createElement(\"tr\", {\n        key: business._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, business.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, business.phone), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, this.getProvinceName(business.province)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.handleOpenModal(business),\n        className: \"modal-trigger\",\n        href: \"#modal1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"launch\"))));\n    }) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"There is no business found!\")))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, business && React.createElement(BusinessModalDetail, {\n      business: business,\n      updateData: this.getData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Business);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/business/Business.jsx"],"names":["React","Component","connect","Col","Row","Table","TextInput","Select","Icon","Button","Loading","axios","fetch_province","push_business_to_modal","BusinessModalDetail","API","formatPhone","mapStateToProps","state","provinces","mapDispatchToProps","dispatch","addProvinceToRedux","pushBusinessToModal","business","Business","constructor","props","getData","provinceRequest","get","businessRequest","all","then","spread","responses","data","businesses","setState","loading","catch","error","console","log","handleSubmit","e","preventDefault","handleInputChange","searchBy","field","target","name","value","getProvinceName","_id","foundProvince","filter","province","handleOpenModal","handleFilter","fields","Object","keys","forEach","filterByField","search","results","handleResetFilter","phone","componentDidMount","searchText","array","item","replace","toLowerCase","includes","render","marginTop","marginRight","bottom","marginBottom","backgroundColor","padding","boxShadow","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","map","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    Col,\r\n    Row,\r\n    Table,\r\n    TextInput,\r\n    Select,\r\n    Icon,\r\n    Button\r\n} from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport axios from \"axios\";\r\nimport {\r\n    fetch_province,\r\n    push_business_to_modal\r\n} from \"../../redux/actions/index\";\r\nimport BusinessModalDetail from \"./BusinessModalDetail\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { provinces: state.provinces };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addProvinceToRedux: provinces => dispatch(fetch_province(provinces)),\r\n        pushBusinessToModal: business =>\r\n            dispatch(push_business_to_modal(business))\r\n    };\r\n}\r\n\r\nclass Business extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchBy: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                province: \"\"\r\n            },\r\n            provinces: [],\r\n            loading: true,\r\n            search: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    filterByField(searchText, field, array) {\r\n        let results = array.filter(item =>\r\n            item[field]\r\n                .replace(/\\s/g, \"\")\r\n                .toLowerCase()\r\n                .includes(searchText.replace(/\\s/g, \"\").toLowerCase())\r\n        );\r\n        return results;\r\n    }\r\n\r\n    getData = () => {\r\n        const provinceRequest = API.get(\"provinces\");\r\n        const businessRequest = API.get(\"businesses\");\r\n        axios\r\n            .all([provinceRequest, businessRequest])\r\n            .then(\r\n                axios.spread((...responses) => {\r\n                    const provinces = responses[0].data;\r\n                    const businesses = responses[1].data;\r\n\r\n                    this.setState({\r\n                        provinces,\r\n                        businesses,\r\n                        loading: false\r\n                    });\r\n                    //Save provinces data in redux for later usage\r\n                    this.props.addProvinceToRedux(provinces);\r\n                })\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        const searchBy = { ...this.state.searchBy };\r\n        const field = e.target.name;\r\n        let value = e.target.value;\r\n        if (field === \"phone\") {\r\n            value = formatPhone(value);\r\n        }\r\n        searchBy[field] = value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            searchBy\r\n        });\r\n    };\r\n\r\n    getProvinceName = _id => {\r\n        const { provinces } = this.state;\r\n        const foundProvince = provinces.filter(\r\n            province => province._id === _id\r\n        );\r\n        return foundProvince[0].name;\r\n    };\r\n\r\n    handleOpenModal = business => () => {\r\n        this.setState({\r\n            business\r\n        });\r\n    };\r\n\r\n    handleFilter = e => {\r\n        e.preventDefault();\r\n\r\n        let businesses = this.state.businesses;\r\n        const fields = Object.keys(this.state.searchBy);\r\n        fields.forEach(field => {\r\n            businesses = this.filterByField(\r\n                this.state.searchBy[field],\r\n                field,\r\n                businesses\r\n            );\r\n        });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            search: true,\r\n            results: businesses\r\n        });\r\n    };\r\n\r\n    handleResetFilter = e => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            searchBy: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                province: \"\"\r\n            },\r\n            search: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { name, phone, province } = this.state.searchBy;\r\n        const { loading, provinces, business, search } = this.state;\r\n\r\n        if (loading) {\r\n            return <Loading />;\r\n        }\r\n\r\n        //Get the set of search otherwise display all businesses\r\n        let businesses = search ? this.state.results : this.state.businesses;\r\n\r\n        return (\r\n            <div>\r\n                <Row style={{ marginTop: \"20px\" }}></Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h5>Businesses   <Button\r\n                                className='gradient-btn btn-primary'\r\n                                node='button'\r\n\r\n                                style={{\r\n                                    marginRight: \"5px\",\r\n                                    bottom: \"-20px\",\r\n                                    marginBottom: \"20px\"\r\n                                }}\r\n                                waves='light'\r\n                            >\r\n                                Add New Business\r\n                            </Button></h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    style={{\r\n                        backgroundColor: \"white\",\r\n                        padding: \"20px\",\r\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\r\n                    }}\r\n                >\r\n                    <form>\r\n                        <h6>Filter by</h6>\r\n                        <Col s={12} m={12} l={12} xl={12}>\r\n                            <TextInput\r\n                                s={12}\r\n                                l={4}\r\n                                m={4}\r\n                                xl={4}\r\n                                label='Name'\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextInput\r\n                                s={12}\r\n                                l={3}\r\n                                m={3}\r\n                                xl={3}\r\n                                label='Phone'\r\n                                name='phone'\r\n                                value={phone}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <Select\r\n                                onChange={this.handleInputChange}\r\n                                options={{\r\n                                    classes: \"\",\r\n                                    dropdownOptions: {\r\n                                        alignment: \"left\",\r\n                                        autoTrigger: true,\r\n                                        closeOnClick: true,\r\n                                        constrainWidth: true,\r\n                                        container: null,\r\n                                        coverTrigger: true,\r\n                                        hover: false,\r\n                                        inDuration: 150,\r\n                                        onCloseEnd: null,\r\n                                        onCloseStart: null,\r\n                                        onOpenEnd: null,\r\n                                        onOpenStart: null,\r\n                                        outDuration: 250\r\n                                    }\r\n                                }}\r\n                                value={province}\r\n                                name='province'\r\n                            >\r\n                                <option disabled value=''>\r\n                                    Select Province\r\n                                </option>\r\n                                {provinces.map(province => {\r\n                                    return (\r\n                                        <option\r\n                                            className='black-text'\r\n                                            key={province._id}\r\n                                            value={province._id}\r\n                                        >\r\n                                            {province.name}\r\n                                        </option>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                            <Button\r\n                                className='gradient-btn btn-primary'\r\n                                node='button'\r\n                                onClick={this.handleFilter}\r\n                                style={{\r\n                                    marginRight: \"5px\",\r\n                                    bottom: \"-20px\",\r\n                                    marginBottom: \"20px\"\r\n                                }}\r\n                                waves='light'\r\n                            >\r\n                                Search\r\n                            </Button>\r\n                            <Button\r\n                                node='button'\r\n                                className='gradient-btn btn-white'\r\n                                onClick={this.handleResetFilter}\r\n                                style={{\r\n                                    marginRight: \"5px\",\r\n                                    bottom: \"-20px\",\r\n                                    marginBottom: \"20px\"\r\n                                }}\r\n                                waves='light'\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                        </Col>\r\n                    </form>\r\n                </Row>\r\n                <Row\r\n                    style={{\r\n                        backgroundColor: \"white\",\r\n                        padding: \"20px\",\r\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\r\n                    }}\r\n                >\r\n                    <Col\r\n                        s={12}\r\n                        m={12}\r\n                        l={12}\r\n                        xl={12}\r\n                        style={{ marginTop: \"50px\" }}\r\n                    >\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-field='id'>Name</th>\r\n                                    <th data-field='price'>Phone</th>\r\n                                    <th data-field='price'>Province</th>\r\n                                    <th data-field='price'>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {businesses.length > 0 ? (\r\n                                    businesses.map(business => {\r\n                                        return (\r\n                                            <tr key={business._id}>\r\n                                                <td>{business.name}</td>\r\n                                                <td>{business.phone}</td>\r\n                                                <td>\r\n                                                    {this.getProvinceName(\r\n                                                        business.province\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <a\r\n                                                        onClick={this.handleOpenModal(\r\n                                                            business\r\n                                                        )}\r\n                                                        className='modal-trigger'\r\n                                                        href='#modal1'\r\n                                                    >\r\n                                                        <Icon>launch</Icon>\r\n                                                    </a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td>There is no business found!</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <div>\r\n                    {business && (\r\n                        <BusinessModalDetail\r\n                            business={business}\r\n                            updateData={this.getData}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Business);\r\n"]},"metadata":{},"sourceType":"module"}