{"ast":null,"code":"import { AUTHENTICATE, LOGOUT, UPDATE_PROFILE } from \"../constants/action-types\";\nimport axios from \"axios\";\nconst initialState = {\n  user: {\n    authenticated: false\n  }\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    //this check the token in localStorage and set the default values for authenticated request from client\n    if (localStorage.getItem('user') && localStorage.getItem('token')) {\n      const token = localStorage.getItem('token'); // axios.defaults.baseURL = 'http://localhost:3000/'\n      // axios.defaults.headers.common= {'Authorization': `Bearer ${token}`}\n\n      return Object.assign({}, state, {\n        user: {\n          authenticated: action.payload.authenticated,\n          email: action.payload.user.email,\n          name: action.payload.user.name,\n          phone: action.payload.user.phone\n        }\n      });\n    }\n  }\n\n  if (action.type === UPDATE_PROFILE) {} //logout the user and delete the token in localStorage and in the server as well\n\n\n  if (action.type === LOGOUT) {\n    localStorage.clear();\n    axios.post(`users/logout`).then(response => {\n      axios.defaults.baseURL = '';\n      axios.defaults.headers.common = {\n        'Authorization': ``\n      };\n    }).catch(error => {});\n    return Object.assign({}, state, {\n      user: {\n        authenticated: false\n      }\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","UPDATE_PROFILE","axios","initialState","user","authenticated","rootReducer","state","action","type","localStorage","getItem","token","Object","assign","payload","email","name","phone","clear","post","then","response","defaults","baseURL","headers","common","catch","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,MAAvB,EAA+BC,cAA/B,QAAqD,2BAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,aAAa,EAAE;AADb;AADW,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AAE/C,MAAIA,MAAM,CAACC,IAAP,KAAgBV,YAApB,EAAkC;AAE9B;AACA,QAAGW,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnC,EAAkE;AAC9D,YAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CAD8D,CAE9D;AACA;;AAEA,aAAOE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC5BH,QAAAA,IAAI,EAAE;AACFC,UAAAA,aAAa,EAAEG,MAAM,CAACO,OAAP,CAAeV,aAD5B;AAEFW,UAAAA,KAAK,EAAER,MAAM,CAACO,OAAP,CAAeX,IAAf,CAAoBY,KAFzB;AAGFC,UAAAA,IAAI,EAAET,MAAM,CAACO,OAAP,CAAeX,IAAf,CAAoBa,IAHxB;AAIFC,UAAAA,KAAK,EAAEV,MAAM,CAACO,OAAP,CAAeX,IAAf,CAAoBc;AAJzB;AADsB,OAAzB,CAAP;AAQH;AACJ;;AAED,MAAGV,MAAM,CAACC,IAAP,KAAgBR,cAAnB,EAAkC,CAEjC,CAvB8C,CA0B/C;;;AACA,MAAIO,MAAM,CAACC,IAAP,KAAgBT,MAApB,EAA4B;AACxBU,IAAAA,YAAY,CAACS,KAAb;AACAjB,IAAAA,KAAK,CAACkB,IAAN,CAAY,cAAZ,EAA2BC,IAA3B,CAAgCC,QAAQ,IAAI;AACxCpB,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,GAAyB,EAAzB;AACAtB,MAAAA,KAAK,CAACqB,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,GAAgC;AAAC,yBAAkB;AAAnB,OAAhC;AACH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI,CAEjB,CALD;AAMA,WAAOf,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC5BH,MAAAA,IAAI,EAAE;AACFC,QAAAA,aAAa,EAAE;AADb;AADsB,KAAzB,CAAP;AAMH;;AACD,SAAOE,KAAP;AACH;;AAED,eAAeD,WAAf","sourcesContent":["import { AUTHENTICATE, LOGOUT, UPDATE_PROFILE } from \"../constants/action-types\";\nimport axios from \"axios\"\n\nconst initialState = {\n    user: {\n        authenticated: false\n    }\n};\n\nfunction rootReducer(state = initialState, action) {\n    \n    if (action.type === AUTHENTICATE) {\n      \n        //this check the token in localStorage and set the default values for authenticated request from client\n        if(localStorage.getItem('user') && localStorage.getItem('token')) {\n            const token = localStorage.getItem('token')\n            // axios.defaults.baseURL = 'http://localhost:3000/'\n            // axios.defaults.headers.common= {'Authorization': `Bearer ${token}`}\n            \n            return Object.assign({}, state, {\n                user: {\n                    authenticated: action.payload.authenticated,\n                    email: action.payload.user.email,\n                    name: action.payload.user.name,\n                    phone: action.payload.user.phone,\n                }\n            });\n        }\n    }\n\n    if(action.type === UPDATE_PROFILE){\n\n    }\n\n   \n    //logout the user and delete the token in localStorage and in the server as well\n    if (action.type === LOGOUT) {\n        localStorage.clear()\n        axios.post(`users/logout`).then(response => {\n            axios.defaults.baseURL = ''\n            axios.defaults.headers.common = {'Authorization': ``}\n        }).catch(error => {\n           \n        })\n        return Object.assign({}, state, {\n            user: {\n                authenticated: false,\n            }\n        })\n       \n    }\n    return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}