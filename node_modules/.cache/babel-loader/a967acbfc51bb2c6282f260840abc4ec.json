{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{Select}from\"react-materialize\";import API from\"../../utils/API/API\";import Loading from\"../loading/Loading\";function mapStateToProps(state){return{provinces:state.provinces};}// Display province drop down, with a props called handleChange\nvar ProvinceDropdown=/*#__PURE__*/function(_Component){_inherits(ProvinceDropdown,_Component);function ProvinceDropdown(){var _getPrototypeOf2;var _this;_classCallCheck(this,ProvinceDropdown);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ProvinceDropdown)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={provinces:[],province:\"\"};return _this;}_createClass(ProvinceDropdown,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;API.get(\"/provinces\").then(function(response){//if province is from props, check if it is the id or province object\nvar province=_this2.props.province._id||_this2.props.province;var provinces=response.data.filter(function(province){return province.active;});_this2.setState({provinces:provinces,province:province});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){var _this$state=this.state,provinces=_this$state.provinces,province=_this$state.province;if(!provinces){return React.createElement(Loading,null);}return React.createElement(Select,{options:{classes:\"\",dropdownOptions:{alignment:\"left\",autoTrigger:true,closeOnClick:true,constrainWidth:true,container:null,coverTrigger:true,hover:false,inDuration:150,onCloseEnd:null,onCloseStart:null,onOpenEnd:null,onOpenStart:null,outDuration:250}},value:province,name:\"province\",onChange:this.props.handleChange},React.createElement(\"option\",{disabled:true,value:\"\"},\"Select Province\"),provinces.map(function(province){return React.createElement(\"option\",{className:\"black-text\",key:province._id,value:province._id},province.name);}));}}]);return ProvinceDropdown;}(Component);export default connect(mapStateToProps)(ProvinceDropdown);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/common/ProvinceDropdown.jsx"],"names":["React","Component","connect","Select","API","Loading","mapStateToProps","state","provinces","ProvinceDropdown","province","get","then","response","props","_id","data","filter","active","setState","catch","error","console","log","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","handleChange","map","name"],"mappings":"oyBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLC,SAAS,CAAED,KAAK,CAACC,SADZ,CAAP,CAGD,CAED;GACMC,CAAAA,gB,uaACJF,K,CAAQ,CACNC,SAAS,CAAE,EADL,CAENE,QAAQ,CAAE,EAFJ,C,yGAIY,iBAClBN,GAAG,CAACO,GAAJ,CAAQ,YAAR,EACGC,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChB;AACA,GAAMH,CAAAA,QAAQ,CAAG,MAAI,CAACI,KAAL,CAAWJ,QAAX,CAAoBK,GAApB,EAA2B,MAAI,CAACD,KAAL,CAAWJ,QAAvD,CACA,GAAMF,CAAAA,SAAS,CAAGK,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqB,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACQ,MAAb,EAA7B,CAAlB,CACA,MAAI,CAACC,QAAL,CAAc,CACZX,SAAS,CAATA,SADY,CAEZE,QAAQ,CAARA,QAFY,CAAd,EAID,CATH,EAUGU,KAVH,CAUS,SAAAC,KAAK,CAAI,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAZH,EAaD,C,uCAEQ,iBACyB,KAAKd,KAD9B,CACCC,SADD,aACCA,SADD,CACYE,QADZ,aACYA,QADZ,CAEP,GAAI,CAACF,SAAL,CAAgB,CACd,MAAO,qBAAC,OAAD,MAAP,CACD,CACD,MACE,qBAAC,MAAD,EACE,OAAO,CAAE,CACPgB,OAAO,CAAE,EADF,CAEPC,eAAe,CAAE,CACfC,SAAS,CAAE,MADI,CAEfC,WAAW,CAAE,IAFE,CAGfC,YAAY,CAAE,IAHC,CAIfC,cAAc,CAAE,IAJD,CAKfC,SAAS,CAAE,IALI,CAMfC,YAAY,CAAE,IANC,CAOfC,KAAK,CAAE,KAPQ,CAQfC,UAAU,CAAE,GARG,CASfC,UAAU,CAAE,IATG,CAUfC,YAAY,CAAE,IAVC,CAWfC,SAAS,CAAE,IAXI,CAYfC,WAAW,CAAE,IAZE,CAafC,WAAW,CAAE,GAbE,CAFV,CADX,CAmBE,KAAK,CAAE5B,QAnBT,CAoBE,IAAI,CAAC,UApBP,CAqBE,QAAQ,CAAE,KAAKI,KAAL,CAAWyB,YArBvB,EAuBE,8BAAQ,QAAQ,KAAhB,CAAiB,KAAK,CAAC,EAAvB,oBAvBF,CA0BG/B,SAAS,CAACgC,GAAV,CAAc,SAAA9B,QAAQ,CAAI,CACzB,MACE,+BACE,SAAS,CAAC,YADZ,CAEE,GAAG,CAAEA,QAAQ,CAACK,GAFhB,CAGE,KAAK,CAAEL,QAAQ,CAACK,GAHlB,EAKGL,QAAQ,CAAC+B,IALZ,CADF,CASD,CAVA,CA1BH,CADF,CAwCD,C,8BAlE4BxC,S,EAqE/B,cAAeC,CAAAA,OAAO,CAACI,eAAD,CAAP,CAAyBG,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Select } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    provinces: state.provinces\r\n  };\r\n}\r\n\r\n// Display province drop down, with a props called handleChange\r\nclass ProvinceDropdown extends Component {\r\n  state = {\r\n    provinces: [],\r\n    province: \"\"\r\n  };\r\n  componentDidMount() {\r\n    API.get(\"/provinces\")\r\n      .then(response => {\r\n        //if province is from props, check if it is the id or province object\r\n        const province = this.props.province._id || this.props.province\r\n        const provinces = response.data.filter(province => province.active)\r\n        this.setState({\r\n          provinces,\r\n          province\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { provinces, province } = this.state;\r\n    if (!provinces) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <Select\r\n        options={{\r\n          classes: \"\",\r\n          dropdownOptions: {\r\n            alignment: \"left\",\r\n            autoTrigger: true,\r\n            closeOnClick: true,\r\n            constrainWidth: true,\r\n            container: null,\r\n            coverTrigger: true,\r\n            hover: false,\r\n            inDuration: 150,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            outDuration: 250\r\n          }\r\n        }}\r\n        value={province}\r\n        name=\"province\"\r\n        onChange={this.props.handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          Select Province\r\n        </option>\r\n        {provinces.map(province => {\r\n          return (\r\n            <option\r\n              className=\"black-text\"\r\n              key={province._id}\r\n              value={province._id}\r\n            >\r\n              {province.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceDropdown);\r\n"]},"metadata":{},"sourceType":"module"}