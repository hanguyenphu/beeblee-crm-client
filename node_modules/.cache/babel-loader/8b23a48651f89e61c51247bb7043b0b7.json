{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\projects\\\\ProjectTable.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"react-materialize\";\nimport API from \"../../utils/API/API\";\nimport Loading from \"../loading/Loading\";\nimport StatusDropdown from \"../common/StatusDropdown\";\nimport DisplayStatus from \"../common/DisplayStatus\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass ProjectTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      projects: []\n    };\n\n    this.getProjectsData = () => {\n      const businessId = this.props.business._id;\n      API.get(`/projects/${businessId}`).then(response => {\n        const projects = response.data;\n        this.setState(_objectSpread({}, this.state, {\n          loading: false,\n          projects\n        }));\n      }).catch(error => {\n        console.log(error);\n        this.setState(_objectSpread({}, this.state, {\n          loading: false\n        }));\n      });\n    };\n\n    this.displayProjects = projects => {\n      return projects.map(project => {\n        const startDate = new Date(project.startDate);\n        const completedDate = new Date(project.completedDate);\n        return React.createElement(\"tr\", {\n          key: project._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, project.name)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, project.price.$numberDecimal), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(DisplayStatus, {\n          status: project.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, project.startDate && startDate.toDateString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, project.completedDate && completedDate.toDateString()));\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.business) {\n      this.setState(_objectSpread({}, this.state, {\n        loading: true\n      }));\n      this.getProjectsData();\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          projects = _this$state.projects;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      \"data-field\": \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Completed Date\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, projects.length > 0 ? this.displayProjects(projects) : React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"There is no project found for this business\"))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ProjectTable);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/projects/ProjectTable.jsx"],"names":["React","Component","connect","Table","API","Loading","StatusDropdown","DisplayStatus","mapStateToProps","state","ProjectTable","loading","projects","getProjectsData","businessId","props","business","_id","get","then","response","data","setState","catch","error","console","log","displayProjects","map","project","startDate","Date","completedDate","name","price","$numberDecimal","status","toDateString","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport StatusDropdown from \"../common/StatusDropdown\";\r\nimport DisplayStatus from \"../common/DisplayStatus\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectTable extends Component {\r\n  state = {\r\n    loading: true,\r\n    projects: []\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.business) {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: true\r\n      });\r\n      this.getProjectsData()\r\n    }\r\n  }\r\n\r\n  getProjectsData = () => {\r\n    const businessId = this.props.business._id;\r\n    API.get(`/projects/${businessId}`)\r\n    .then(response => {\r\n      const projects = response.data;\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false,\r\n        projects\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  displayProjects = projects => {\r\n    return projects.map(project => {\r\n\r\n      const startDate = new Date(project.startDate)\r\n      const completedDate =new Date(project.completedDate)\r\n\r\n      return (\r\n        <tr key={project._id}>\r\n          <td>\r\n            <a href=\"#\">{project.name}</a>\r\n          </td>\r\n          <td>{project.price.$numberDecimal}</td>\r\n          <td><DisplayStatus status={project.status}/></td>\r\n          <td>{project.startDate && startDate.toDateString()}</td>\r\n          <td>{project.completedDate && completedDate.toDateString()}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading, projects } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th data-field=\"id\">Project Name</th>\r\n            <th data-field=\"name\">Price</th>\r\n            <th data-field=\"price\">Status</th>\r\n            <th data-field=\"price\">Start Date</th>\r\n            <th data-field=\"price\">Completed Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.length > 0? this.displayProjects(projects): <tr>\r\n              <td>There is no project found for this business</td>\r\n            </tr>}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectTable);\r\n"]},"metadata":{},"sourceType":"module"}