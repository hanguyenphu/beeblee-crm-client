{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/login/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { TextInput, Row, Col, Button, Icon } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { authenticate } from \"../../redux/actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authenticate: authenticated => dispatch(authenticate(authenticated))\n  };\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState(_objectSpread({}, this.state, {\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.handleSubmit = e => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.setState({\n        loading: true\n      });\n      e.preventDefault();\n      axios.post(`http://localhost:3000/users/login`, {\n        email,\n        password\n      }).then(response => {\n        response.data.authenticated = true;\n\n        if (response.data) {\n          this.props.authenticate(response.data);\n          this.setState({\n            loading: false,\n            errorMessage: ''\n          });\n          localStorage.setItem('user', response.data.email);\n          localStorage.setItem('token', response.data.token);\n        }\n      }).catch(error => {\n        this.setState({\n          errorMessage: 'Incorrect Email or Password',\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      errorMessage: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loading = _this$state2.loading,\n          errorMessage = _this$state2.errorMessage;\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: \"70px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Login\")), React.createElement(Col, {\n      m: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      method: \"POST\",\n      onSubmit: this.handleSubmit,\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      name: \"email\",\n      email: true,\n      label: \"Email\",\n      validate: true,\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      label: \"Password\",\n      name: \"password\",\n      password: true,\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), errorMessage && React.createElement(\"div\", {\n      className: \"red-text text-accent-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, errorMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), !loading ? React.createElement(Button, {\n      node: \"button\",\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Login\", React.createElement(Icon, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"send\")) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/login/Login.jsx"],"names":["React","Component","TextInput","Row","Col","Button","Icon","Loading","axios","authenticate","connect","mapDispatchToProps","dispatch","authenticated","Login","constructor","props","handleChange","e","setState","state","target","name","value","handleSubmit","email","password","loading","preventDefault","post","then","response","data","errorMessage","localStorage","setItem","token","catch","error","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TextInput, Row, Col, Button, Icon } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\n\nimport {authenticate} from \"../../redux/actions/index\"\nimport { connect } from \"react-redux\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authenticate: authenticated => dispatch(authenticate(authenticated))\n    }\n}\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            errorMessage: \"\"\n        };\n    }\n\n    handleChange = e => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        const { email, password } = this.state;\n        this.setState({\n            loading: true\n        });\n        e.preventDefault();\n        axios\n            .post(`http://localhost:3000/users/login`, {\n                email,\n                password,\n            })\n            .then(response => {\n                response.data.authenticated = true\n                \n                if(response.data) {\n                    this.props.authenticate(response.data)\n                    this.setState({\n                        loading: false,\n                        errorMessage: ''\n                    });\n                    localStorage.setItem('user', response.data.email)\n                    localStorage.setItem('token', response.data.token)\n                }\n                \n            })\n            .catch(error => {\n                this.setState({\n                    errorMessage: 'Incorrect Email or Password',\n                    loading: false\n                });\n            });\n    };\n\n    render() {\n        const { loading, errorMessage } = this.state;\n        return (\n            <div style={{ marginTop: \"70px\" }}>\n                <Row>\n                    <Col m={4}></Col>\n                    <Col m={4}>\n                        <h3> Login</h3>\n                    </Col>\n                    <Col m={4}></Col>\n                </Row>\n\n                <form\n                    method='POST'\n                    onSubmit={this.handleSubmit}\n                    className='col s12'\n                >\n                    <TextInput\n                        name='email'\n                        email\n                        label='Email'\n                        validate\n                        required\n                        onChange={this.handleChange}\n                    />\n\n                    <TextInput\n                        label='Password'\n                        name='password'\n                        password\n                        required\n                        onChange={this.handleChange}\n                    />\n                   \n                      {errorMessage && <div className=\"red-text text-accent-2\">\n                        {errorMessage}\n                    </div>}\n                    <br />\n                    {!loading ? (\n                        <Button node='button' waves='light'>\n                            Login\n                            <Icon right>send</Icon>\n                        </Button>\n                    ) : (\n                        <Loading />\n                    )}\n                  \n                </form>\n            </div>\n        );\n    }\n}\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}