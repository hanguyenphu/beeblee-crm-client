{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{AUTHENTICATE,LOGOUT,UPDATE_PROFILE,FETCH_PROVINCE,FETCH_BUSINESS}from\"../constants/action-types\";import axios from\"axios\";import API from\"../../utils/API/API\";var initialState={user:{authenticated:false}};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(action.type===AUTHENTICATE){//this check the token in localStorage and set the default values for authenticated request from client\nif(localStorage.getItem(\"user\")&&localStorage.getItem(\"token\")){var token=localStorage.getItem(\"token\");API.defaults.baseURL=\"http://localhost:3000/\";API.defaults.headers.common={Authorization:\"Bearer \".concat(token)};return Object.assign({},state,{user:{authenticated:action.payload.authenticated,email:action.payload.user.email,name:action.payload.user.name,phone:action.payload.user.phone,role:action.payload.user.role}});}}// Update profile in Profile Page\nif(action.type===UPDATE_PROFILE){return Object.assign({},state,{user:_objectSpread({},state.user,{email:action.payload.email,name:action.payload.name,phone:action.payload.phone})});}if(action.type===FETCH_PROVINCE){return Object.assign({},state,{provinces:action.payload});}if(action.type===FETCH_BUSINESS){return Object.assign({},state,{businesses:action.payload});}//logout the user and delete the token in localStorage and in the server as well\nif(action.type===LOGOUT){API.post(\"users/logout\").then(function(response){console.log(response.data);axios.defaults.baseURL=\"\";axios.defaults.headers.common={Authorization:\"\"};}).catch(function(error){});localStorage.clear();return Object.assign({},state,{user:{authenticated:false}});}return state;}export default rootReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","LOGOUT","UPDATE_PROFILE","FETCH_PROVINCE","FETCH_BUSINESS","axios","API","initialState","user","authenticated","rootReducer","state","action","type","localStorage","getItem","token","defaults","baseURL","headers","common","Authorization","Object","assign","payload","email","name","phone","role","provinces","businesses","post","then","response","console","log","data","catch","error","clear"],"mappings":"6JAAA,OACEA,YADF,CAEEC,MAFF,CAGEC,cAHF,CAIEC,cAJF,CAKEC,cALF,KAMO,2BANP,CAOA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,CACJC,aAAa,CAAE,KADX,CADa,CAArB,CAMA,QAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CACjD,GAAIA,MAAM,CAACC,IAAP,GAAgBb,YAApB,CAAkC,CAChC;AACA,GAAIc,YAAY,CAACC,OAAb,CAAqB,MAArB,GAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApC,CAAmE,CACjE,GAAMC,CAAAA,KAAK,CAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAT,GAAG,CAACW,QAAJ,CAAaC,OAAb,CAAuB,wBAAvB,CACAZ,GAAG,CAACW,QAAJ,CAAaE,OAAb,CAAqBC,MAArB,CAA8B,CAAEC,aAAa,kBAAYL,KAAZ,CAAf,CAA9B,CAEA,MAAOM,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,KAAlB,CAAyB,CAC9BH,IAAI,CAAE,CACJC,aAAa,CAAEG,MAAM,CAACY,OAAP,CAAef,aAD1B,CAEJgB,KAAK,CAAEb,MAAM,CAACY,OAAP,CAAehB,IAAf,CAAoBiB,KAFvB,CAGJC,IAAI,CAAEd,MAAM,CAACY,OAAP,CAAehB,IAAf,CAAoBkB,IAHtB,CAIJC,KAAK,CAAEf,MAAM,CAACY,OAAP,CAAehB,IAAf,CAAoBmB,KAJvB,CAKJC,IAAI,CAAEhB,MAAM,CAACY,OAAP,CAAehB,IAAf,CAAoBoB,IALtB,CADwB,CAAzB,CAAP,CASD,CACF,CAED;AACA,GAAIhB,MAAM,CAACC,IAAP,GAAgBX,cAApB,CAAoC,CAClC,MAAOoB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,KAAlB,CAAyB,CAC9BH,IAAI,kBACCG,KAAK,CAACH,IADP,EAEFiB,KAAK,CAAEb,MAAM,CAACY,OAAP,CAAeC,KAFpB,CAGFC,IAAI,CAAEd,MAAM,CAACY,OAAP,CAAeE,IAHnB,CAIFC,KAAK,CAAEf,MAAM,CAACY,OAAP,CAAeG,KAJpB,EAD0B,CAAzB,CAAP,CAQD,CAED,GAAIf,MAAM,CAACC,IAAP,GAAgBV,cAApB,CAAoC,CAClC,MAAOmB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,KAAlB,CAAyB,CAC9BkB,SAAS,CAAEjB,MAAM,CAACY,OADY,CAAzB,CAAP,CAGD,CAED,GAAIZ,MAAM,CAACC,IAAP,GAAgBT,cAApB,CAAoC,CAClC,MAAOkB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,KAAlB,CAAyB,CAC9BmB,UAAU,CAAElB,MAAM,CAACY,OADW,CAAzB,CAAP,CAGD,CAED;AACA,GAAIZ,MAAM,CAACC,IAAP,GAAgBZ,MAApB,CAA4B,CAC1BK,GAAG,CAACyB,IAAJ,iBACGC,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EACA/B,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAyB,EAAzB,CACAb,KAAK,CAACY,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAAgC,CAAEC,aAAa,GAAf,CAAhC,CACD,CALH,EAMGgB,KANH,CAMS,SAAAC,KAAK,CAAI,CAAE,CANpB,EAOAxB,YAAY,CAACyB,KAAb,GACA,MAAOjB,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,KAAlB,CAAyB,CAC9BH,IAAI,CAAE,CACJC,aAAa,CAAE,KADX,CADwB,CAAzB,CAAP,CAKD,CACD,MAAOE,CAAAA,KAAP,CACD,CAED,cAAeD,CAAAA,WAAf","sourcesContent":["import {\r\n  AUTHENTICATE,\r\n  LOGOUT,\r\n  UPDATE_PROFILE,\r\n  FETCH_PROVINCE,\r\n  FETCH_BUSINESS\r\n} from \"../constants/action-types\";\r\nimport axios from \"axios\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    authenticated: false\r\n  }\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === AUTHENTICATE) {\r\n    //this check the token in localStorage and set the default values for authenticated request from client\r\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      API.defaults.baseURL = \"http://localhost:3000/\";\r\n      API.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n      return Object.assign({}, state, {\r\n        user: {\r\n          authenticated: action.payload.authenticated,\r\n          email: action.payload.user.email,\r\n          name: action.payload.user.name,\r\n          phone: action.payload.user.phone,\r\n          role: action.payload.user.role\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Update profile in Profile Page\r\n  if (action.type === UPDATE_PROFILE) {\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        ...state.user,\r\n        email: action.payload.email,\r\n        name: action.payload.name,\r\n        phone: action.payload.phone\r\n      }\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_PROVINCE) {\r\n    return Object.assign({}, state, {\r\n      provinces: action.payload\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_BUSINESS) {\r\n    return Object.assign({}, state, {\r\n      businesses: action.payload\r\n    });\r\n  }\r\n\r\n  //logout the user and delete the token in localStorage and in the server as well\r\n  if (action.type === LOGOUT) {\r\n    API.post(`users/logout`)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        axios.defaults.baseURL = \"\";\r\n        axios.defaults.headers.common = { Authorization: `` };\r\n      })\r\n      .catch(error => {});\r\n    localStorage.clear();\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        authenticated: false\r\n      }\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}