{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\account\\\\AccountForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, TextInput, Textarea, Button, DatePicker } from \"react-materialize\";\nimport formatDate from \"../../utils/commons/FormatDate\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass AccountForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: {},\n      edited: false,\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n\n    this.handleChangeAccount = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n      let account = this.state.account;\n      account[field] = value;\n      this.setState({\n        account,\n        edited: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.account) {\n      let account = this.props.account;\n      account.price = account.price.$numberDecimal;\n      this.setState(_objectSpread({}, this.state, {\n        account\n      }));\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          account = _this$state.account,\n          edited = _this$state.edited;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Domain:\",\n      name: \"domain\" //   value={account.domain}\n      //   onChange={this.handleChangeAccount}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Username:\",\n      name: \"username\",\n      value: account.username,\n      onChange: this.handleChangeAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Password:\",\n      name: \"password\",\n      value: account.password,\n      onChange: this.handleChangeAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"startDate\",\n      label: \"Start Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\"\n      },\n      value: formatDate(account.startDate),\n      onChange: value => {\n        let account = Object.assign(this.state.account, {\n          startDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          account\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      name: \"expireDate\",\n      label: \"Expire Date:\",\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      options: {\n        format: \"mmm dd, yyyy\"\n      },\n      value: formatDate(account.expireDate),\n      onChange: value => {\n        let account = Object.assign(this.state.account, {\n          expireDate: value\n        });\n        this.setState(_objectSpread({}, this.state, {\n          edited: true,\n          account\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Price:\",\n      name: \"price\",\n      value: account.price,\n      onChange: this.handleChangeAccount,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Textarea, {\n      s: 12,\n      l: 12,\n      m: 12,\n      xl: 12,\n      label: \"Description:\",\n      name: \"description\",\n      value: account.description,\n      onChange: this.handleChangeAccount,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      className: edited ? \"gradient-btn btn-primary\" : \"\",\n      waves: \"green\",\n      disabled: !edited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(AccountForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/account/AccountForm.jsx"],"names":["React","Component","connect","Row","TextInput","Textarea","Button","DatePicker","formatDate","mapStateToProps","state","AccountForm","account","edited","successMessage","errorMessage","handleChangeAccount","e","field","target","name","value","setState","componentDidMount","props","price","$numberDecimal","render","username","password","format","startDate","Object","assign","expireDate","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Textarea,\r\n  Button,\r\n  DatePicker\r\n} from \"react-materialize\";\r\n\r\nimport formatDate from \"../../utils/commons/FormatDate\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass AccountForm extends Component {\r\n  state = {\r\n    account: {},\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.account) {\r\n      let account = this.props.account;\r\n      account.price = account.price.$numberDecimal;\r\n      this.setState({\r\n        ...this.state,\r\n        account\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeAccount = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let account = this.state.account;\r\n    account[field] = value;\r\n    this.setState({\r\n      account,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { account, edited } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Domain:\"\r\n              name=\"domain\"\r\n            //   value={account.domain}\r\n            //   onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Username:\"\r\n              name=\"username\"\r\n              value={account.username}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Password:\"\r\n              name=\"password\"\r\n              value={account.password}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\"\r\n              }}\r\n              value={formatDate(account.startDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  startDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"expireDate\"\r\n              label=\"Expire Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\"\r\n              }}\r\n              value={formatDate(account.expireDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  expireDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price:\"\r\n              name=\"price\"\r\n              value={account.price}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              value={account.description}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-primary\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AccountForm);\r\n"]},"metadata":{},"sourceType":"module"}