{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\business\\\\BusinessModalDetail.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, Button, Row, TextInput, Select } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport ContactForm from \"../contact/ContactForm\";\nimport { ContactTable } from \"../contact/ContactTable\";\nimport API from \"../../utils/API/API\";\nimport formatPhone from \"../../utils/commons/FormatPhone\";\nimport ProvinceDropdown from \"../common/ProvinceDropdown\";\n\nclass BusinessModalDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeBusiness = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === \"phone\") {\n        value = formatPhone(value);\n      }\n\n      let business = this.state.business;\n      business[field] = value;\n      this.setState(_objectSpread({}, this.state, {\n        business,\n        edited: true\n      }));\n    };\n\n    this.updateBusiness = e => {\n      e.preventDefault();\n      const _id = this.state.business._id;\n      const business = {\n        name: this.state.business.name,\n        phone: this.state.business.phone,\n        address: this.state.business.address,\n        province: this.state.business.province\n      };\n      this.setState({\n        errorMessage: \"\",\n        successMessage: \"\",\n        loading: true,\n        edited: false\n      });\n      API.patch(`businesses/${_id}`, business).then(response => {\n        //Update the data in the parent component\n        this.props.updateData();\n        this.setState(_objectSpread({}, this.state, {\n          successMessage: \"Save successfully!\",\n          loading: false\n        }));\n      }).catch(error => {\n        this.setState({\n          errorMessage: \"Cannot save the data!\",\n          loading: false\n        });\n      });\n    };\n\n    this.addMoreContactToTable = contact => {\n      let contacts = this.state.contacts;\n      contacts.push(contact);\n      this.setState(_objectSpread({}, this.state, {\n        contacts\n      }));\n    };\n\n    this.state = {\n      edited: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      business: this.props.business\n    });\n    this.getBusinessDetail(this.props.business._id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.business._id !== this.props.business._id) {\n      this.getBusinessDetail(this.props.business._id);\n      this.setState({\n        business: this.props.business,\n        errorMessage: \"\",\n        successMessage: \"\",\n        edited: false\n      });\n    }\n  }\n\n  getBusinessDetail(id) {\n    this.setState(_objectSpread({}, this.state, {\n      loading: true\n    }));\n    API.get(`businesses/${id}`).then(response => {\n      if (response.data.business) {\n        this.setState(_objectSpread({}, this.state, {\n          contacts: response.data.business.contacts,\n          province: response.data.business.province,\n          loading: false\n        }));\n      }\n    }).catch(err => {\n      this.setState({\n        loading: false,\n        errorMessage: \"Could not fetch the data\"\n      });\n    });\n  }\n\n  render() {\n    const contacts = this.state.contacts || [];\n\n    if (!this.state.business) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      });\n    }\n\n    const _this$state = this.state,\n          business = _this$state.business,\n          edited = _this$state.edited;\n    return React.createElement(Modal, {\n      actions: [React.createElement(Button, {\n        flat: true,\n        modal: \"close\",\n        node: \"button\",\n        waves: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Close\")],\n      open: true,\n      style: {\n        boder: \"none\"\n      },\n      bottomSheet: false,\n      fixedFooter: true,\n      header: \"Business Detail\",\n      id: \"modal1\",\n      required: true,\n      options: {\n        dismissible: true,\n        endingTop: \"10%\",\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        opacity: 0.5,\n        outDuration: 250,\n        preventScrolling: true,\n        startingTop: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.updateBusiness,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Name:\",\n      value: business.name,\n      name: \"name\",\n      onChange: this.handleChangeBusiness,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Address\",\n      name: \"address\",\n      value: business.address,\n      onChange: this.handleChangeBusiness,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 6,\n      xl: 6,\n      label: \"Phone:\",\n      name: \"phone\",\n      value: business.phone,\n      onChange: this.handleChangeBusiness,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(ProvinceDropdown, {\n      handleChange: this.handleChangeBusiness,\n      province: business.province,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      className: edited ? \"gradient-btn btn-primary \" : \"\",\n      waves: \"green\",\n      disabled: !edited,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Update\"))), this.state.successMessage && React.createElement(Row, {\n      className: \"animated shake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"green-text animated bounceOutLeft delay-3s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.successMessage)), this.state.errorMessage && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"red-text animated rubberBand \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.errorMessage)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Contacts \"), React.createElement(ContactForm, {\n      business: business,\n      addMoreContactToTable: this.addMoreContactToTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(ContactTable, {\n      contacts: contacts,\n      business: business,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    provinces: state.provinces\n  };\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessModalDetail);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/business/BusinessModalDetail.jsx"],"names":["React","Component","connect","Modal","Button","Row","TextInput","Select","Loading","ContactForm","ContactTable","API","formatPhone","ProvinceDropdown","BusinessModalDetail","constructor","props","handleChangeBusiness","e","field","target","name","value","business","state","setState","edited","updateBusiness","preventDefault","_id","phone","address","province","errorMessage","successMessage","loading","patch","then","response","updateData","catch","error","addMoreContactToTable","contact","contacts","push","componentDidMount","getBusinessDetail","componentDidUpdate","prevProps","id","get","data","err","render","boder","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","mapStateToProps","provinces","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,mBAAtD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAIA,MAAMC,mBAAN,SAAkCb,SAAlC,CAA4C;AAC1Cc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkDnBC,oBAlDmB,GAkDIC,CAAC,IAAI;AAC1B,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,UAAIC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAArB;;AACA,UAAIH,KAAK,KAAK,OAAd,EAAuB;AACrBG,QAAAA,KAAK,GAAGV,WAAW,CAACU,KAAD,CAAnB;AACD;;AACD,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACAA,MAAAA,QAAQ,CAACJ,KAAD,CAAR,GAAkBG,KAAlB;AACA,WAAKG,QAAL,mBACK,KAAKD,KADV;AAEED,QAAAA,QAFF;AAGEG,QAAAA,MAAM,EAAE;AAHV;AAKD,KA/DkB;;AAAA,SAiEnBC,cAjEmB,GAiEFT,CAAC,IAAI;AACpBA,MAAAA,CAAC,CAACU,cAAF;AACA,YAAMC,GAAG,GAAG,KAAKL,KAAL,CAAWD,QAAX,CAAoBM,GAAhC;AACA,YAAMN,QAAQ,GAAG;AACfF,QAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWD,QAAX,CAAoBF,IADX;AAEfS,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWD,QAAX,CAAoBO,KAFZ;AAGfC,QAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWD,QAAX,CAAoBQ,OAHd;AAIfC,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWD,QAAX,CAAoBS;AAJf,OAAjB;AAMA,WAAKP,QAAL,CAAc;AACZQ,QAAAA,YAAY,EAAE,EADF;AAEZC,QAAAA,cAAc,EAAE,EAFJ;AAGZC,QAAAA,OAAO,EAAE,IAHG;AAIZT,QAAAA,MAAM,EAAE;AAJI,OAAd;AAMAf,MAAAA,GAAG,CAACyB,KAAJ,CAAW,cAAaP,GAAI,EAA5B,EAA+BN,QAA/B,EACGc,IADH,CACQC,QAAQ,IAAI;AAChB;AACA,aAAKtB,KAAL,CAAWuB,UAAX;AACA,aAAKd,QAAL,mBACK,KAAKD,KADV;AAEEU,UAAAA,cAAc,EAAE,oBAFlB;AAGEC,UAAAA,OAAO,EAAE;AAHX;AAKD,OATH,EAUGK,KAVH,CAUSC,KAAK,IAAI;AACd,aAAKhB,QAAL,CAAc;AACZQ,UAAAA,YAAY,EAAE,uBADF;AAEZE,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAfH;AAgBD,KAhGkB;;AAAA,SAkGnBO,qBAlGmB,GAkGKC,OAAO,IAAI;AACjC,UAAIC,QAAQ,GAAG,KAAKpB,KAAL,CAAWoB,QAA1B;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcF,OAAd;AACA,WAAKlB,QAAL,mBACK,KAAKD,KADV;AAEEoB,QAAAA;AAFF;AAID,KAzGkB;;AAEjB,SAAKpB,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDoB,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,QAAL,CAAc;AACZF,MAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO;AADT,KAAd;AAGA,SAAKwB,iBAAL,CAAuB,KAAK/B,KAAL,CAAWO,QAAX,CAAoBM,GAA3C;AACD;;AAEDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAAC1B,QAAV,CAAmBM,GAAnB,KAA2B,KAAKb,KAAL,CAAWO,QAAX,CAAoBM,GAAnD,EAAwD;AACtD,WAAKkB,iBAAL,CAAuB,KAAK/B,KAAL,CAAWO,QAAX,CAAoBM,GAA3C;AACA,WAAKJ,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QADT;AAEZU,QAAAA,YAAY,EAAE,EAFF;AAGZC,QAAAA,cAAc,EAAE,EAHJ;AAIZR,QAAAA,MAAM,EAAE;AAJI,OAAd;AAMD;AACF;;AAEDqB,EAAAA,iBAAiB,CAACG,EAAD,EAAK;AACpB,SAAKzB,QAAL,mBACK,KAAKD,KADV;AAEEW,MAAAA,OAAO,EAAE;AAFX;AAIAxB,IAAAA,GAAG,CAACwC,GAAJ,CAAS,cAAaD,EAAG,EAAzB,EACGb,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACc,IAAT,CAAc7B,QAAlB,EAA4B;AAC1B,aAAKE,QAAL,mBACK,KAAKD,KADV;AAEEoB,UAAAA,QAAQ,EAAEN,QAAQ,CAACc,IAAT,CAAc7B,QAAd,CAAuBqB,QAFnC;AAGEZ,UAAAA,QAAQ,EAAEM,QAAQ,CAACc,IAAT,CAAc7B,QAAd,CAAuBS,QAHnC;AAIEG,UAAAA,OAAO,EAAE;AAJX;AAMD;AACF,KAVH,EAWGK,KAXH,CAWSa,GAAG,IAAI;AACZ,WAAK5B,QAAL,CAAc;AACZU,QAAAA,OAAO,EAAE,KADG;AAEZF,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAhBH;AAiBD;;AA2DDqB,EAAAA,MAAM,GAAG;AACP,UAAMV,QAAQ,GAAG,KAAKpB,KAAL,CAAWoB,QAAX,IAAuB,EAAxC;;AACA,QAAI,CAAC,KAAKpB,KAAL,CAAWD,QAAhB,EAA0B;AACxB,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAJM,wBAKsB,KAAKC,KAL3B;AAAA,UAKCD,QALD,eAKCA,QALD;AAAA,UAKWG,MALX,eAKWA,MALX;AAMP,WACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,CACP,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,KAAK,EAAC,OAAnB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAyC,QAAA,KAAK,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADO,CADX;AAME,MAAA,IAAI,EAAE,IANR;AAOE,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAE;AAAT,OAPT;AAQE,MAAA,WAAW,EAAE,KARf;AASE,MAAA,WAAW,EAAE,IATf;AAUE,MAAA,MAAM,EAAC,iBAVT;AAWE,MAAA,EAAE,EAAC,QAXL;AAYE,MAAA,QAAQ,MAZV;AAaE,MAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,IADN;AAEPC,QAAAA,SAAS,EAAE,KAFJ;AAGPC,QAAAA,UAAU,EAAE,GAHL;AAIPC,QAAAA,UAAU,EAAE,IAJL;AAKPC,QAAAA,YAAY,EAAE,IALP;AAMPC,QAAAA,SAAS,EAAE,IANJ;AAOPC,QAAAA,WAAW,EAAE,IAPN;AAQPC,QAAAA,OAAO,EAAE,GARF;AASPC,QAAAA,WAAW,EAAE,GATN;AAUPC,QAAAA,gBAAgB,EAAE,IAVX;AAWPC,QAAAA,WAAW,EAAE;AAXN,OAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA2BG,CAAC,KAAK1C,KAAL,CAAWW,OAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKR,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,KAAK,EAAEJ,QAAQ,CAACF,IANlB;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,QAAQ,EAAE,KAAKJ,oBARjB;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,SALR;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,KAAK,EAAEM,QAAQ,CAACQ,OAPlB;AAQE,MAAA,QAAQ,EAAE,KAAKd,oBARjB;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAuBE,oBAAC,SAAD;AACE,MAAA,CAAC,EAAE,EADL;AAEE,MAAA,CAAC,EAAE,CAFL;AAGE,MAAA,CAAC,EAAE,CAHL;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,KAAK,EAAC,QALR;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,KAAK,EAAEM,QAAQ,CAACO,KAPlB;AAQE,MAAA,QAAQ,EAAE,KAAKb,oBARjB;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAkCE,oBAAC,gBAAD;AACE,MAAA,YAAY,EAAE,KAAKA,oBADrB;AAEE,MAAA,QAAQ,EAAEM,QAAQ,CAACS,QAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,CAJF,EA4CE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEN,MAAM,GAAG,2BAAH,GAAiC,EAFpD;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAE,CAACA,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA5CF,CADF,EAwDG,KAAKF,KAAL,CAAWU,cAAX,IACC,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,4CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWU,cADd,CADF,CAzDJ,EA+DG,KAAKV,KAAL,CAAWS,YAAX,IACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWS,YADd,CADF,CAhEJ,EAuEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAEV,QADZ;AAEE,MAAA,qBAAqB,EAAE,KAAKmB,qBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAvEF,EA8EE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEE,QAAxB;AAAkC,MAAA,QAAQ,EAAErB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9EF,CADD,GAkFC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7GJ,CADF;AAkHD;;AApOyC;;AAuO5C,MAAM4C,eAAe,GAAG3C,KAAK,IAAI;AAC/B,SAAO;AAAE4C,IAAAA,SAAS,EAAE5C,KAAK,CAAC4C;AAAnB,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAenE,OAAO,CACpBiE,eADoB,EAEpBE,kBAFoB,CAAP,CAGbvD,mBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Row, TextInput, Select } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nimport ContactForm from \"../contact/ContactForm\";\r\nimport { ContactTable } from \"../contact/ContactTable\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\nimport ProvinceDropdown from \"../common/ProvinceDropdown\";\r\n\r\n\r\n\r\nclass BusinessModalDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edited: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      business: this.props.business\r\n    });\r\n    this.getBusinessDetail(this.props.business._id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.business._id !== this.props.business._id) {\r\n      this.getBusinessDetail(this.props.business._id);\r\n      this.setState({\r\n        business: this.props.business,\r\n        errorMessage: \"\",\r\n        successMessage: \"\",\r\n        edited: false\r\n      });\r\n    }\r\n  }\r\n\r\n  getBusinessDetail(id) {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true\r\n    });\r\n    API.get(`businesses/${id}`)\r\n      .then(response => {\r\n        if (response.data.business) {\r\n          this.setState({\r\n            ...this.state,\r\n            contacts: response.data.business.contacts,\r\n            province: response.data.business.province,\r\n            loading: false\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false,\r\n          errorMessage: \"Could not fetch the data\"\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChangeBusiness = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n    if (field === \"phone\") {\r\n      value = formatPhone(value);\r\n    }\r\n    let business = this.state.business;\r\n    business[field] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      business,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  updateBusiness = e => {\r\n    e.preventDefault();\r\n    const _id = this.state.business._id;\r\n    const business = {\r\n      name: this.state.business.name,\r\n      phone: this.state.business.phone,\r\n      address: this.state.business.address,\r\n      province: this.state.business.province\r\n    };\r\n    this.setState({\r\n      errorMessage: \"\",\r\n      successMessage: \"\",\r\n      loading: true,\r\n      edited: false\r\n    });\r\n    API.patch(`businesses/${_id}`, business)\r\n      .then(response => {\r\n        //Update the data in the parent component\r\n        this.props.updateData();\r\n        this.setState({\r\n          ...this.state,\r\n          successMessage: \"Save successfully!\",\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: \"Cannot save the data!\",\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  addMoreContactToTable = contact => {\r\n    let contacts = this.state.contacts;\r\n    contacts.push(contact);\r\n    this.setState({\r\n      ...this.state,\r\n      contacts\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const contacts = this.state.contacts || [];\r\n    if (!this.state.business) {\r\n      return <Loading />;\r\n    }\r\n    const { business, edited } = this.state;\r\n    return (\r\n      <Modal\r\n        actions={[\r\n          <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n            Close\r\n          </Button>\r\n        ]}\r\n        open={true}\r\n        style={{ boder: \"none\" }}\r\n        bottomSheet={false}\r\n        fixedFooter={true}\r\n        header=\"Business Detail\"\r\n        id=\"modal1\"\r\n        required\r\n        options={{\r\n          dismissible: true,\r\n          endingTop: \"10%\",\r\n          inDuration: 250,\r\n          onCloseEnd: null,\r\n          onCloseStart: null,\r\n          onOpenEnd: null,\r\n          onOpenStart: null,\r\n          opacity: 0.5,\r\n          outDuration: 250,\r\n          preventScrolling: true,\r\n          startingTop: \"4%\"\r\n        }}\r\n      >\r\n        {!this.state.loading ? (\r\n          <div>\r\n            <form onSubmit={this.updateBusiness} >\r\n\r\n\r\n\r\n              <Row >\r\n                <TextInput\r\n                  s={12}\r\n                  l={6}\r\n                  m={6}\r\n                  xl={6}\r\n                  label=\"Name:\"\r\n                  value={business.name}\r\n                  name=\"name\"\r\n                  onChange={this.handleChangeBusiness}\r\n                  required\r\n                />\r\n                <TextInput\r\n                  s={12}\r\n                  l={6}\r\n                  m={6}\r\n                  xl={6}\r\n                  label=\"Address\"\r\n                  name=\"address\"\r\n                  value={business.address}\r\n                  onChange={this.handleChangeBusiness}\r\n                  required\r\n                />\r\n                <TextInput\r\n                  s={12}\r\n                  l={6}\r\n                  m={6}\r\n                  xl={6}\r\n                  label=\"Phone:\"\r\n                  name=\"phone\"\r\n                  value={business.phone}\r\n                  onChange={this.handleChangeBusiness}\r\n                  required\r\n                />\r\n                <ProvinceDropdown\r\n                  handleChange={this.handleChangeBusiness}\r\n                  province={business.province}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button\r\n                  node=\"button\"\r\n                  className={edited ? \"gradient-btn btn-primary \" : \"\"}\r\n                  waves=\"green\"\r\n                  disabled={!edited}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Row>\r\n            </form>\r\n            {this.state.successMessage && (\r\n              <Row className='animated shake'>\r\n                <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                  {this.state.successMessage}\r\n                </p>\r\n              </Row>\r\n            )}\r\n            {this.state.errorMessage && (\r\n              <Row>\r\n                <p className=\"red-text animated rubberBand \">\r\n                  {this.state.errorMessage}\r\n                </p>\r\n              </Row>\r\n            )}\r\n\r\n            <Row >\r\n              <h5>Contacts </h5>\r\n              <ContactForm\r\n                business={business}\r\n                addMoreContactToTable={this.addMoreContactToTable}\r\n              />\r\n            </Row>\r\n            <ContactTable contacts={contacts} business={business} />\r\n          </div>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { provinces: state.provinces };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BusinessModalDetail);\r\n"]},"metadata":{},"sourceType":"module"}