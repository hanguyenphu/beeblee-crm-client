{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\business\\\\BusinessDetailPage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport API from \"../../utils/API/API\";\nimport Loading from \"../loading/Loading\";\nimport { Row, Button, Icon } from \"react-materialize\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport CreateProjectModal from \"../projects/CreateProjectModal\";\nimport ProjectTable from \"../projects/ProjectTable\"; //Gets all businesses from redux\n//if there is no businesses in redux then redirect to businesses page and reload them\n\nfunction mapStateToProps(state, ownProps) {\n  //return {};\n  const businessId = ownProps.match.params.id;\n  let business = {};\n\n  if (!state.businesses) {\n    ownProps.history.push(\"/businesses\");\n    return {};\n  }\n\n  if (businessId && state.businesses.length > 0) {\n    business = state.businesses.filter(business => business._id === businessId)[0];\n  }\n\n  return {\n    business\n  };\n}\n\nclass BusinessDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      errorMessage: \"\",\n      business: {},\n      openCreateProjectModal: false,\n      projects: []\n    };\n\n    this.updateData = () => {};\n\n    this.getBusinessData = () => {\n      const businessId = this.props.match.params.id;\n      API.get(`/businesses/${businessId}`).then(response => {\n        console.log(projects);\n        console.log(response.data.business);\n        const projects = response.data.business.projects;\n        this.setState(_objectSpread({}, this.state, {\n          projects,\n          business: response.data.business,\n          loading: false\n        }));\n      });\n    };\n\n    this.handleOpenCreateProjectModel = () => {\n      this.setState(_objectSpread({}, this.state, {\n        openCreateProjectModal: true\n      }));\n    };\n\n    this.closeCreateProjectModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        openCreateProjectModal: false\n      }));\n    };\n\n    this.handleGoBack = () => {\n      this.props.history.push('/businesses');\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.business) {\n      this.getBusinessData();\n    }\n  }\n\n  render() {\n    const loading = this.state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }\n\n    const _this$state = this.state,\n          business = _this$state.business,\n          openCreateProjectModal = _this$state.openCreateProjectModal,\n          projects = _this$state.projects;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      className: \"gradient-btn btn-white\",\n      onClick: this.handleGoBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Go Back\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"arrow_back\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, business.name, \" \", React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      className: \"gradient-btn btn-red\",\n      onClick: this.handleOpenCreateProjectModel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create New Project\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"add_box\")))), React.createElement(Row, {\n      className: \" radius-corner\",\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, projects && React.createElement(ProjectTable, {\n      business: business,\n      projects: projects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), openCreateProjectModal && React.createElement(CreateProjectModal, {\n      closeCreateProjectModal: this.closeCreateProjectModal,\n      business: business,\n      getProjectsData: this.getProjectsData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps)(BusinessDetailPage);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/business/BusinessDetailPage.jsx"],"names":["React","Component","connect","API","Loading","Row","Button","Icon","Redirect","Link","CreateProjectModal","ProjectTable","mapStateToProps","state","ownProps","businessId","match","params","id","business","businesses","history","push","length","filter","_id","BusinessDetailPage","loading","errorMessage","openCreateProjectModal","projects","updateData","getBusinessData","props","get","then","response","console","log","data","setState","handleOpenCreateProjectModel","closeCreateProjectModal","handleGoBack","componentDidMount","render","marginTop","name","backgroundColor","padding","boxShadow","getProjectsData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { Row, Button, Icon } from \"react-materialize\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport CreateProjectModal from \"../projects/CreateProjectModal\";\r\nimport ProjectTable from \"../projects/ProjectTable\";\r\n\r\n//Gets all businesses from redux\r\n//if there is no businesses in redux then redirect to businesses page and reload them\r\nfunction mapStateToProps(state, ownProps) {\r\n  //return {};\r\n  const businessId = ownProps.match.params.id;\r\n  let business = {};\r\n\r\n  if (!state.businesses) {\r\n    ownProps.history.push(\"/businesses\");\r\n    return {};\r\n  }\r\n\r\n  if (businessId && state.businesses.length > 0) {\r\n    business = state.businesses.filter(\r\n      business => business._id === businessId\r\n    )[0];\r\n  }\r\n\r\n  return {\r\n    business\r\n  };\r\n}\r\n\r\nclass BusinessDetailPage extends Component {\r\n  state = {\r\n    loading: true,\r\n    errorMessage: \"\",\r\n    business: {},\r\n    openCreateProjectModal: false,\r\n    projects: []\r\n  };\r\n\r\n  // getProjectsData = () => {\r\n  //   const businessId = this.props.business._id;\r\n  //   API.get(`/projects/business/${businessId}`)\r\n  //     .then(response => {\r\n  //       const projects = response.data;\r\n  //       this.setState({\r\n  //         ...this.state,\r\n  //         projects\r\n  //       });\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //       this.setState({\r\n  //         ...this.state,\r\n  //         loading: false\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  updateData = () => {};\r\n\r\n  getBusinessData = () => {\r\n    const businessId = this.props.match.params.id;\r\n    API.get(`/businesses/${businessId}`).then(response => {\r\n      console.log(projects)\r\n      console.log(response.data.business)\r\n      const projects = response.data.business.projects;\r\n      this.setState({\r\n        ...this.state,\r\n        projects,\r\n        business: response.data.business,\r\n        loading: false\r\n      });\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.business) {\r\n      this.getBusinessData()\r\n    }\r\n  }\r\n\r\n\r\n  handleOpenCreateProjectModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateProjectModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateProjectModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateProjectModal: false\r\n    });\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    this.props.history.push('/businesses')\r\n  }\r\n  render() {\r\n    const { loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    const { business, openCreateProjectModal, projects } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Button node=\"button\" type=\"submit\" waves=\"light\" className=\"gradient-btn btn-white\" onClick={this.handleGoBack}>\r\n            Go Back\r\n            <Icon left>arrow_back</Icon>\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <h5>\r\n            {business.name}{\" \"}\r\n            <Button\r\n              node=\"button\"\r\n              type=\"submit\"\r\n              waves=\"light\"\r\n              className=\"gradient-btn btn-red\"\r\n              onClick={this.handleOpenCreateProjectModel}\r\n            >\r\n              Create New Project\r\n              <Icon left>add_box</Icon>\r\n            </Button>\r\n          </h5>\r\n        </Row>\r\n\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          {projects && <ProjectTable business={business} projects={projects} />}\r\n        </Row>\r\n\r\n        {openCreateProjectModal && (\r\n          <CreateProjectModal\r\n            closeCreateProjectModal={this.closeCreateProjectModal}\r\n            business={business}\r\n            getProjectsData={this.getProjectsData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BusinessDetailPage);\r\n"]},"metadata":{},"sourceType":"module"}