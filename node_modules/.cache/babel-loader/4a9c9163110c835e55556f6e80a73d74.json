{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/Business.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Row, Table, TextInput, Select, Icon, Button } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport { fetch_province, push_business_to_modal } from \"../../redux/actions/index\";\nimport BusinessModalDetail from \"./BusinessModalDetail\";\n\nconst mapStateToProps = state => {\n  return {\n    provinces: state.provinces\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addProvinceToRedux: provinces => dispatch(fetch_province(provinces)),\n    pushBusinessToModal: business => dispatch(push_business_to_modal(business))\n  };\n}\n\nclass Business extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.handleInputChange = e => {\n      const searchBy = _objectSpread({}, this.state.searchBy);\n\n      const field = e.target.name;\n      const value = e.target.value;\n      searchBy[field] = value;\n      this.setState(_objectSpread({}, this.state, {\n        searchBy\n      }));\n    };\n\n    this.getProvinceName = _id => {\n      const provinces = this.state.provinces;\n      const foundProvince = provinces.filter(province => province._id === _id);\n      return foundProvince[0].name;\n    };\n\n    this.handleOpenModal = business => () => {\n      this.setState({\n        business\n      });\n    };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      let businesses = this.state.businesses;\n      const fields = Object.keys(this.state.searchBy);\n      fields.forEach(field => {\n        businesses = this.filterByField(this.state.searchBy[field], field, businesses);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        search: true,\n        results: businesses\n      }));\n    };\n\n    this.handleResetFilter = e => {\n      e.preventDefault();\n      this.setState(_objectSpread({}, this.state, {\n        searchBy: {\n          name: '',\n          phone: '',\n          province: ''\n        },\n        search: false\n      }));\n    };\n\n    this.state = {\n      searchBy: {\n        name: '',\n        phone: '',\n        province: ''\n      },\n      provinces: [],\n      loading: true,\n      search: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  includeTokenWithRequest() {\n    const token = localStorage.getItem(\"token\");\n    axios.defaults.baseURL = \"http://localhost:3000/\";\n    axios.defaults.headers.common = {\n      Authorization: `Bearer ${token}`\n    };\n  }\n\n  filterByField(searchText, field, array) {\n    let results = array.filter(item => item[field].replace(/\\s/g, \"\").toLowerCase().includes(searchText.replace(/\\s/g, \"\").toLowerCase()));\n    return results;\n  }\n\n  getData() {\n    this.includeTokenWithRequest();\n    const provinceRequest = axios.get(`provinces`);\n    const businessRequest = axios.get(`businesses`);\n    axios.all([provinceRequest, businessRequest]).then(axios.spread((...responses) => {\n      const provinces = responses[0].data;\n      const businesses = responses[1].data;\n      this.setState({\n        provinces,\n        businesses,\n        loading: false\n      }); //Save provinces data in redux for later usage\n\n      this.props.addProvinceToRedux(provinces);\n    })).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state$searchBy = this.state.searchBy,\n          name = _this$state$searchBy.name,\n          phone = _this$state$searchBy.phone,\n          province = _this$state$searchBy.province;\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          provinces = _this$state.provinces,\n          business = _this$state.business,\n          search = _this$state.search;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    } //Get the set of search otherwise display all businesses\n\n\n    let businesses = search ? this.state.results : this.state.businesses;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Businesses\"))), React.createElement(Row, {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Filter by\"), React.createElement(Col, {\n      s: 12,\n      m: 12,\n      l: 12,\n      xl: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 4,\n      m: 4,\n      xl: 4,\n      label: \"Name\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(Select, {\n      onChange: this.handleInputChange,\n      options: {\n        classes: \"\",\n        dropdownOptions: {\n          alignment: \"left\",\n          autoTrigger: true,\n          closeOnClick: true,\n          constrainWidth: true,\n          container: null,\n          coverTrigger: true,\n          hover: false,\n          inDuration: 150,\n          onCloseEnd: null,\n          onCloseStart: null,\n          onOpenEnd: null,\n          onOpenStart: null,\n          outDuration: 250\n        }\n      },\n      value: province,\n      name: \"province\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Select Province\"), provinces.map(province => {\n      return React.createElement(\"option\", {\n        className: \"black-text\",\n        key: province._id,\n        value: province._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, province.name);\n    })), React.createElement(Button, {\n      node: \"button\",\n      onClick: this.handleFilter,\n      style: {\n        marginRight: \"5px\",\n        bottom: \"-20px\",\n        marginBottom: \"20px\"\n      },\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Button, {\n      node: \"button\",\n      className: \"grey darken-1\",\n      onClick: this.handleResetFilter,\n      style: {\n        marginRight: \"5px\",\n        bottom: \"-20px\",\n        marginBottom: \"20px\"\n      },\n      waves: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Clear\")))), React.createElement(Row, {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 12,\n      m: 12,\n      l: 12,\n      xl: 12,\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      \"data-field\": \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Province\"), React.createElement(\"th\", {\n      \"data-field\": \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Details\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, businesses.length > 0 ? businesses.map(business => {\n      return React.createElement(\"tr\", {\n        key: business._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, business.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, business.phone), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.getProvinceName(business.province)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.handleOpenModal(business),\n        className: \"modal-trigger\",\n        href: \"#modal1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"launch\"))));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"There is no business found!\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, business && React.createElement(BusinessModalDetail, {\n      business: business,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Business);","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/features/business/Business.jsx"],"names":["React","Component","connect","Col","Row","Table","TextInput","Select","Icon","Button","Loading","axios","fetch_province","push_business_to_modal","BusinessModalDetail","mapStateToProps","state","provinces","mapDispatchToProps","dispatch","addProvinceToRedux","pushBusinessToModal","business","Business","constructor","props","handleSubmit","e","preventDefault","handleInputChange","searchBy","field","target","name","value","setState","getProvinceName","_id","foundProvince","filter","province","handleOpenModal","handleFilter","businesses","fields","Object","keys","forEach","filterByField","search","results","handleResetFilter","phone","loading","componentDidMount","getData","includeTokenWithRequest","token","localStorage","getItem","defaults","baseURL","headers","common","Authorization","searchText","array","item","replace","toLowerCase","includes","provinceRequest","get","businessRequest","all","then","spread","responses","data","catch","error","console","log","render","marginTop","backgroundColor","padding","boxShadow","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","map","marginRight","bottom","marginBottom","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Col,\n    Row,\n    Table,\n    TextInput,\n    Select,\n    Icon,\n    Button\n} from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport axios from \"axios\";\nimport {\n    fetch_province,\n    push_business_to_modal\n} from \"../../redux/actions/index\";\nimport BusinessModalDetail from \"./BusinessModalDetail\";\n\nconst mapStateToProps = state => {\n    return { provinces: state.provinces };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addProvinceToRedux: provinces => dispatch(fetch_province(provinces)),\n        pushBusinessToModal: business =>\n            dispatch(push_business_to_modal(business))\n    };\n}\n\nclass Business extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchBy: {\n                name: '',\n                phone:'',\n                province:''\n            },\n            provinces: [],\n            loading: true,\n            search: false\n        };\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    includeTokenWithRequest() {\n        const token = localStorage.getItem(\"token\");\n        axios.defaults.baseURL = \"http://localhost:3000/\";\n        axios.defaults.headers.common = { Authorization: `Bearer ${token}` };\n    }\n\n\n    filterByField(searchText, field, array) {\n        let results = array.filter(item =>\n            item[field]\n                .replace(/\\s/g, \"\")\n                .toLowerCase()\n                .includes(searchText.replace(/\\s/g, \"\").toLowerCase())\n        );\n        return results;\n    }\n\n    getData() {\n        this.includeTokenWithRequest();\n        const provinceRequest = axios.get(`provinces`);\n        const businessRequest = axios.get(`businesses`);\n\n        axios\n            .all([provinceRequest, businessRequest])\n            .then(\n                axios.spread((...responses) => {\n                    const provinces = responses[0].data;\n                    const businesses = responses[1].data;\n\n                    this.setState({\n                        provinces,\n                        businesses,\n                        loading: false\n                    });\n                    //Save provinces data in redux for later usage\n                    this.props.addProvinceToRedux(provinces);\n                })\n            )\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n    };\n\n    handleInputChange = e => {\n        const searchBy = { ...this.state.searchBy };\n\n        const field = e.target.name;\n        const value = e.target.value;\n        searchBy[field] = value;\n\n        this.setState({\n            ...this.state,\n            searchBy\n        });\n\n      \n    };\n\n    getProvinceName = _id => {\n        const { provinces } = this.state;\n\n        const foundProvince = provinces.filter(\n            province => province._id === _id\n        );\n\n        return foundProvince[0].name;\n    };\n\n    handleOpenModal = business => () => {\n        this.setState({\n            business\n        });\n    };\n\n    handleFilter = (e) => {\n        e.preventDefault()\n        \n        let businesses = this.state.businesses\n        const fields = Object.keys(this.state.searchBy)\n        fields.forEach(field => {\n            businesses = this.filterByField(this.state.searchBy[field], field, businesses)\n        })\n\n        this.setState({\n            ...this.state,\n            search: true,\n            results: businesses\n        })\n       \n    }\n\n    handleResetFilter = (e) => {\n        e.preventDefault()\n\n        this.setState({\n            ...this.state,\n            searchBy:{\n                name:'',\n                phone:'',\n                province:''\n            },\n            search:false\n        })\n    }\n\n    render() {\n        const { name, phone, province } = this.state.searchBy;\n        const { loading, provinces, business, search } = this.state;\n        \n        \n        if (loading) {\n            return <Loading />;\n        }\n       \n        //Get the set of search otherwise display all businesses\n        let businesses = search?this.state.results: this.state.businesses \n     \n        return (\n            <div>\n                <Row style={{ marginTop: \"20px\" }}></Row>\n                <Row>\n                    <Col>\n                        <h5>Businesses</h5>\n                    </Col>\n                </Row>\n                <Row\n                    style={{\n                        backgroundColor: \"white\",\n                        padding: \"20px\",\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\n                    }}\n                >\n                    <form>\n                        <h6>Filter by</h6>\n                        <Col s={12} m={12} l={12} xl={12}>\n                            <TextInput\n                                s={12}\n                                l={4}\n                                m={4}\n                                xl={4}\n                                label='Name'\n                                name='name'\n                                value={name}\n                                onChange={this.handleInputChange}\n                            />\n                            <TextInput\n                                s={12}\n                                l={3}\n                                m={3}\n                                xl={3}\n                                label='Phone'\n                                name='phone'\n                                value={phone}\n                                onChange={this.handleInputChange}\n                            />\n                            <Select\n                                onChange={this.handleInputChange}\n                                options={{\n                                    classes: \"\",\n                                    dropdownOptions: {\n                                        alignment: \"left\",\n                                        autoTrigger: true,\n                                        closeOnClick: true,\n                                        constrainWidth: true,\n                                        container: null,\n                                        coverTrigger: true,\n                                        hover: false,\n                                        inDuration: 150,\n                                        onCloseEnd: null,\n                                        onCloseStart: null,\n                                        onOpenEnd: null,\n                                        onOpenStart: null,\n                                        outDuration: 250\n                                    }\n                                }}\n                                value={province}\n                                name='province'\n                            >\n                                <option disabled value=''>\n                                    Select Province\n                                </option>\n                                {provinces.map(province => {\n                                    return (\n                                        <option\n                                            className='black-text'\n                                            key={province._id}\n                                            value={province._id}\n                                        >\n                                            {province.name}\n                                        </option>\n                                    );\n                                })}\n                            </Select>\n                            <Button\n                                node='button'\n                                onClick={this.handleFilter}\n                                style={{\n                                    marginRight: \"5px\",\n                                    bottom: \"-20px\",\n                                    marginBottom: \"20px\"\n                                }}\n                                waves='light'\n                            >\n                                Search\n                            </Button>\n                            <Button\n                                node='button'\n                                className='grey darken-1'\n                                onClick={this.handleResetFilter}\n                                style={{\n                                    marginRight: \"5px\",\n                                    bottom: \"-20px\",\n                                    marginBottom: \"20px\"\n                                }}\n                                waves='light'\n                            >\n                                Clear\n                            </Button>\n                        </Col>\n                    </form>\n                </Row>\n                <Row\n                    style={{\n                        backgroundColor: \"white\",\n                        padding: \"20px\",\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\n                    }}\n                >\n                    <Col\n                        s={12}\n                        m={12}\n                        l={12}\n                        xl={12}\n                        style={{ marginTop: \"50px\" }}\n                    >\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th data-field='id'>Name</th>\n                                    <th data-field='price'>Phone</th>\n                                    <th data-field='price'>Province</th>\n                                    <th data-field='price'>Details</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                { businesses.length > 0 ? businesses.map(business => {\n                                    return (\n                                        <tr key={business._id}>\n                                            <td>{business.name}</td>\n                                            <td>{business.phone}</td>\n                                            <td>\n                                                {this.getProvinceName(\n                                                    business.province\n                                                )}\n                                            </td>\n                                            <td>\n                                                <a\n                                                    onClick={this.handleOpenModal(\n                                                        business\n                                                    )}\n                                                    className='modal-trigger'\n                                                    href='#modal1'\n                                                >\n                                                    <Icon>launch</Icon>\n                                                </a>\n                                            </td>\n                                        </tr>\n                                    );\n                                }) : <p>There is no business found!</p>}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n\n                <div>\n                    {business && <BusinessModalDetail business={business} />}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Business);\n"]},"metadata":{},"sourceType":"module"}