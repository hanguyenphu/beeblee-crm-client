{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Ha Nguyen\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\admin\\\\project\\\\ProjectContributors.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Pagination, Icon } from \"react-materialize\";\nimport ProjectTableAdmin from \"./ProjectTableAdmin\";\nimport API from \"../../../utils/API/API\";\nimport Loading from \"../../loading/Loading\";\nimport ProjectFilter from \"../../projects/ProjectFilter\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass ProjectContributors extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      pageNo: 1,\n      totalProjects: 0\n    };\n\n    this.setPageNumber = pageNo => {\n      this.setState({\n        pageNo\n      });\n      this.getData(pageNo);\n    };\n\n    this.getData = pageNo => {\n      if (!pageNo) {\n        pageNo = this.state.pageNo;\n      }\n\n      const getStatusesRequest = API.get(\"/statuses\");\n      const getUsersRequest = API.get(`/admin/users`);\n      const getProjectsRequest = API.get(`/projects?pageNo=${pageNo}`);\n      Axios.all([getProjectsRequest, getStatusesRequest, getUsersRequest]).then(Axios.spread((...responses) => {\n        const projects = responses[0].data.projects;\n        const totalProjects = responses[0].data.count;\n        const statuses = responses[1].data;\n        const users = responses[2].data;\n        this.setState({\n          projects,\n          totalProjects,\n          statuses,\n          users,\n          loading: false\n        });\n      })).catch(error => {\n        this.setState(_objectSpread({}, this.state, {\n          loading: false\n        }));\n        console.log(error);\n        this.props.history.push(\"/notfound\");\n      });\n    };\n\n    this.getProjects = pageNo => {\n      if (!pageNo) {\n        pageNo = this.state.pageNo;\n      }\n\n      API.get(`/projects?pageNo=${pageNo}`).then(response => {\n        this.setState({\n          loading: false,\n          projects: response.data.projects,\n          totalProjects: response.data.count\n        });\n      }).catch(error => {\n        this.props.history.push(\"/notfound\");\n      });\n    };\n\n    this.searchData = (newData, count) => {\n      this.setState({\n        projects: newData,\n        totalProjects: count\n      });\n    };\n\n    this.resetFilter = e => {\n      this.getProjects(1);\n    };\n  }\n\n  componentDidMount() {\n    const pageNo = this.state.pageNo;\n    this.getProjects(pageNo);\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          projects = _this$state.projects,\n          pageNo = _this$state.pageNo,\n          totalProjects = _this$state.totalProjects;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"assignment_turned_in\"), \"Project Contributors\"))), React.createElement(ProjectFilter, {\n      searchData: this.searchData,\n      resetFilter: this.resetFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \" radius-corner\",\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"1px 1px 1px #9E9E9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      activePage: pageNo,\n      items: totalProjects / 10 + 1,\n      leftBtn: React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"chevron_left\"),\n      maxButtons: 3,\n      rightBtn: React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"chevron_right\"),\n      onSelect: pageNumber => {\n        this.setPageNumber(pageNumber);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(ProjectTableAdmin, {\n      projects: projects,\n      updateData: this.getProjects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ProjectContributors);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/admin/project/ProjectContributors.jsx"],"names":["React","Component","connect","Row","Col","Pagination","Icon","ProjectTableAdmin","API","Loading","ProjectFilter","mapStateToProps","state","ProjectContributors","loading","pageNo","totalProjects","setPageNumber","setState","getData","getStatusesRequest","get","getUsersRequest","getProjectsRequest","Axios","all","then","spread","responses","projects","data","count","statuses","users","catch","error","console","log","props","history","push","getProjects","response","searchData","newData","resetFilter","e","componentDidMount","render","marginTop","backgroundColor","padding","boxShadow","textAlign","pageNumber"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Pagination, Icon } from \"react-materialize\";\r\nimport ProjectTableAdmin from \"./ProjectTableAdmin\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport ProjectFilter from \"../../projects/ProjectFilter\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectContributors extends Component {\r\n  state = {\r\n    loading: true,\r\n    pageNo: 1,\r\n    totalProjects: 0\r\n  };\r\n  componentDidMount() {\r\n    const { pageNo } = this.state;\r\n    this.getProjects(pageNo);\r\n  }\r\n  setPageNumber = pageNo => {\r\n    this.setState({\r\n      pageNo\r\n    });\r\n    this.getData(pageNo)\r\n  };\r\n\r\n  getData = (pageNo) => {\r\n    if(!pageNo) {\r\n      pageNo = this.state.pageNo\r\n    }\r\n    const getStatusesRequest = API.get(\"/statuses\");\r\n    const getUsersRequest = API.get(`/admin/users`);\r\n    const getProjectsRequest = API.get(`/projects?pageNo=${pageNo}`)\r\n    Axios.all([getProjectsRequest, getStatusesRequest, getUsersRequest])\r\n      .then(\r\n        Axios.spread((...responses) => {\r\n          const projects = responses[0].data.projects;\r\n          const totalProjects = responses[0].data.count;\r\n          const statuses = responses[1].data;\r\n          const users = responses[2].data;\r\n          this.setState({\r\n            projects,\r\n            totalProjects,\r\n            statuses,\r\n            users,\r\n            loading: false\r\n          });\r\n        })\r\n      )\r\n      .catch(error => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false\r\n        });\r\n        console.log(error);\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  getProjects = pageNo => {\r\n    if(!pageNo) {\r\n      pageNo = this.state.pageNo\r\n    }\r\n    API.get(`/projects?pageNo=${pageNo}`)\r\n      .then(response => {\r\n        this.setState({\r\n          loading: false,\r\n          projects: response.data.projects,\r\n          totalProjects: response.data.count\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  //get the new data from ProjectFilter Component and display search result\r\n  searchData = (newData, count) => {\r\n    this.setState({\r\n      projects: newData,\r\n      totalProjects: count\r\n    });\r\n  };\r\n\r\n  //Reset filter project\r\n  resetFilter = e => {\r\n\r\n    this.getProjects(1);\r\n  };\r\n\r\n\r\n  render() {\r\n    const { loading, projects, pageNo, totalProjects } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <Row>\r\n          <Col>\r\n            <h5><Icon>assignment_turned_in</Icon>Project Contributors</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ProjectFilter\r\n          searchData={this.searchData}\r\n          resetFilter={this.resetFilter}\r\n        />\r\n\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Row style={{ textAlign: \"center\" }}>\r\n            <Pagination\r\n              activePage={pageNo}\r\n              items={totalProjects / 10 + 1}\r\n              leftBtn={<Icon>chevron_left</Icon>}\r\n              maxButtons={3}\r\n              rightBtn={<Icon>chevron_right</Icon>}\r\n              onSelect={pageNumber => {\r\n                this.setPageNumber(pageNumber);\r\n              }}\r\n            />\r\n          </Row>\r\n          <ProjectTableAdmin projects={projects} updateData={this.getProjects}/>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectContributors);\r\n"]},"metadata":{},"sourceType":"module"}