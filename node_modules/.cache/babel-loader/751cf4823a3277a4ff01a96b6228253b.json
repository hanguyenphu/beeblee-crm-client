{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\beeblee-crm-client\\\\src\\\\features\\\\contact\\\\EditContactForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TextInput, Row, Icon, Button } from \"react-materialize\";\nimport Loading from \"../loading/Loading\";\nimport API from \"../../utils/API/API\";\nimport formatPhone from \"../../utils/commons/FormatPhone\";\n\nclass EditContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleUpdateContact = e => {\n      e.preventDefault();\n      const contact = this.state.contact;\n      API.patch(`contacts/${contact._id}`, contact).then(response => {\n        this.props.updateContact(response.data);\n        this.props.closeEditContact();\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleInputChange = e => {\n      const field = e.target.name;\n      let value = e.target.value;\n\n      if (field === \"phone\") {\n        value = formatPhone(value);\n      }\n\n      let contact = {\n        _id: this.state.contact._id,\n        name: this.state.contact.name,\n        phone: this.state.contact.phone,\n        email: this.state.contact.email,\n        [field]: value\n      };\n      this.setState({\n        contact,\n        edited: true\n      });\n    };\n\n    this.handleCancel = () => {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      contact: this.props.contact,\n      edited: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.contact._id !== this.props.contact._id) {\n      this.setState({\n        contact: this.props.contact\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.contact) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n\n    const _this$state = this.state,\n          contact = _this$state.contact,\n          edited = _this$state.edited;\n    return React.createElement(\"div\", {\n      className: \"animated bounceInLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleUpdateContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextInput, {\n      s: 12,\n      l: 2,\n      m: 2,\n      xl: 2,\n      label: \"Name\",\n      name: \"name\",\n      value: contact.name,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 3,\n      m: 3,\n      xl: 3,\n      label: \"Phone\",\n      name: \"phone\",\n      value: contact.phone,\n      required: true,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      s: 12,\n      l: 6,\n      m: 4,\n      xl: 4,\n      label: \"Email\",\n      email: true,\n      validate: true,\n      value: contact.email,\n      name: \"email\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Button, {\n      node: \"button\",\n      type: \"submit\",\n      waves: \"light\",\n      style: {\n        marginTop: \"20px\"\n      },\n      disabled: !edited,\n      className: edited ? 'gradient-btn btn-blue' : 'gradient-btn',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Save\", React.createElement(Icon, {\n      left: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"save\")), React.createElement(Button, {\n      node: \"button\",\n      type: \"reset\",\n      waves: \"light\",\n      style: {\n        marginTop: \"20px\",\n        marginLeft: \"10px\"\n      },\n      onClick: this.handleCancel,\n      className: \"gradient-btn btn-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);","map":{"version":3,"sources":["C:/xampp/htdocs/beeblee-crm-client/src/features/contact/EditContactForm.jsx"],"names":["React","Component","connect","TextInput","Row","Icon","Button","Loading","API","formatPhone","EditContactForm","state","handleUpdateContact","e","preventDefault","contact","patch","_id","then","response","props","updateContact","data","closeEditContact","catch","error","console","log","handleInputChange","field","target","name","value","phone","email","setState","edited","handleCancel","componentDidMount","componentDidUpdate","prevProps","render","marginTop","marginLeft","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Row, Icon, Button } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\n\r\nclass EditContactForm extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            contact: this.props.contact,\r\n            edited: false\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.contact._id !== this.props.contact._id) {\r\n            this.setState({\r\n                contact: this.props.contact\r\n            });\r\n        }\r\n    }\r\n\r\n    handleUpdateContact = e => {\r\n        e.preventDefault();\r\n        const contact = this.state.contact;\r\n        API.patch(`contacts/${contact._id}`, contact)\r\n            .then(response => {\r\n                this.props.updateContact(response.data);\r\n                this.props.closeEditContact();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        const field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        if (field === \"phone\") {\r\n            value = formatPhone(value);\r\n        }\r\n\r\n        let contact = {\r\n            _id: this.state.contact._id,\r\n            name: this.state.contact.name,\r\n            phone: this.state.contact.phone,\r\n            email: this.state.contact.email,\r\n            [field]: value\r\n        };\r\n        this.setState({\r\n            contact,\r\n            edited: true\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.contact) {\r\n            return <Loading />;\r\n        }\r\n        const { contact, edited } = this.state;\r\n\r\n        return (\r\n            <div className=\"animated bounceInLeft\">\r\n                <form onSubmit={this.handleUpdateContact}>\r\n                    <Row>\r\n                        <TextInput\r\n                            s={12}\r\n                            l={2}\r\n                            m={2}\r\n                            xl={2}\r\n                            label='Name'\r\n                            name='name'\r\n                            value={contact.name}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={3}\r\n                            m={3}\r\n                            xl={3}\r\n                            label='Phone'\r\n                            name='phone'\r\n                            value={contact.phone}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={6}\r\n                            m={4}\r\n                            xl={4}\r\n                            label='Email'\r\n                            email\r\n                            validate\r\n                            value={contact.email}\r\n                            name='email'\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Button\r\n                            node='button'\r\n                            type='submit'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\" }}\r\n                            disabled={!edited}\r\n                            className={edited ? 'gradient-btn btn-blue': 'gradient-btn'}\r\n                        >\r\n                            Save\r\n                            <Icon left>save</Icon>\r\n                        </Button>\r\n                        <Button\r\n                            node='button'\r\n                            type='reset'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\", marginLeft:\"10px\" }}\r\n                            onClick={this.handleCancel}\r\n                            className='gradient-btn btn-white'\r\n                        >\r\n                            Cancel\r\n\r\n                        </Button>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);\r\n"]},"metadata":{},"sourceType":"module"}