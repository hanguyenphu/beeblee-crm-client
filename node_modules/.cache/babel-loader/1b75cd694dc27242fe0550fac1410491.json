{"ast":null,"code":"import _objectSpread from \"/Users/hanguyen/web-projects/crm-beeblee-node/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { AUTHENTICATE } from '../constants/action-types';\nimport axios from 'axios';\nconst initialState = {\n  authenticated: false,\n  user: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === AUTHENTICATE) {\n    return Object.assign({}, state, _objectSpread({}, state, {\n      authenticated: action.payload.authenticated,\n      user: {\n        email: action.payload.email,\n        name: action.payload.name,\n        phone: action.payload.phone\n      }\n    }));\n  }\n\n  return state;\n}\n\nfunction verifyUser(user) {\n  axios.post(`http://localhost:3000/users/login`, {\n    email: user.email,\n    password: user.password\n  }).then(response => {\n    response.data.authenticated = true;\n\n    if (response.data) {\n      localStorage.setItem('user', response.data.user.email);\n      localStorage.setItem('token', response.data.token);\n    }\n  }).catch(error => {});\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/hanguyen/web-projects/crm-beeblee-node/client/src/redux/reducers/index.js"],"names":["AUTHENTICATE","axios","initialState","authenticated","user","rootReducer","state","action","type","Object","assign","payload","email","name","phone","verifyUser","post","password","then","response","data","localStorage","setItem","token","catch","error"],"mappings":";AAAA,SAASA,YAAT,QAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAOA,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AAC/C,MAAGA,MAAM,CAACC,IAAP,KAAgBR,YAAnB,EAAiC;AAC9B,WAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,oBACAA,KADA;AAEHH,MAAAA,aAAa,EAAEI,MAAM,CAACI,OAAP,CAAeR,aAF3B;AAGJC,MAAAA,IAAI,EAAE;AACFQ,QAAAA,KAAK,EAAEL,MAAM,CAACI,OAAP,CAAeC,KADpB;AAEFC,QAAAA,IAAI,EAAEN,MAAM,CAACI,OAAP,CAAeE,IAFnB;AAGFC,QAAAA,KAAK,EAAEP,MAAM,CAACI,OAAP,CAAeG;AAHpB;AAHF,OAAP;AASF;;AACD,SAAOR,KAAP;AACH;;AAED,SAASS,UAAT,CAAoBX,IAApB,EAA0B;AACtBH,EAAAA,KAAK,CACJe,IADD,CACO,mCADP,EAC2C;AACvCJ,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAD2B;AAEvCK,IAAAA,QAAQ,EAAEb,IAAI,CAACa;AAFwB,GAD3C,EAKCC,IALD,CAKMC,QAAQ,IAAI;AACdA,IAAAA,QAAQ,CAACC,IAAT,CAAcjB,aAAd,GAA8B,IAA9B;;AACA,QAAGgB,QAAQ,CAACC,IAAZ,EAAkB;AACdC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,QAAQ,CAACC,IAAT,CAAchB,IAAd,CAAmBQ,KAAhD;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACC,IAAT,CAAcG,KAA5C;AACH;AAEJ,GAZD,EAaCC,KAbD,CAaOC,KAAK,IAAI,CAEf,CAfD;AAgBH;;AAGD,eAAepB,WAAf","sourcesContent":["import { AUTHENTICATE }  from '../constants/action-types'\nimport axios from 'axios'\n\n\nconst initialState = {\n    authenticated: false,\n    user: {\n        \n    }\n}\n\nfunction rootReducer(state = initialState, action) {\n    if(action.type === AUTHENTICATE) {\n       return Object.assign({}, state, {\n           ...state,\n           authenticated: action.payload.authenticated,\n          user: {\n              email: action.payload.email,\n              name: action.payload.name,\n              phone: action.payload.phone\n          }\n       })\n    }\n    return state\n}\n\nfunction verifyUser(user) {\n    axios\n    .post(`http://localhost:3000/users/login`, {\n        email: user.email,\n        password: user.password,\n    })\n    .then(response => {\n        response.data.authenticated = true\n        if(response.data) {\n            localStorage.setItem('user', response.data.user.email)\n            localStorage.setItem('token', response.data.token)\n        }\n        \n    })\n    .catch(error => {\n        \n    });\n}\n\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}