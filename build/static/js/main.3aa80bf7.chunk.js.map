{"version":3,"sources":["utils/API/API.js","redux/reducers/index.js","redux/constants/action-types.js","redux/store/index.js","layout/menu/SideNavItems.jsx","redux/actions/index.js","layout/menu/SideMenu.jsx","layout/menu/Nav.jsx","features/loading/Loading.jsx","features/login/Login.jsx","utils/commons/FormatDate.js","features/projects/ProjectTable.jsx","features/common/StatusDropdown.jsx","features/common/CategoryDropdown.jsx","features/projects/ProjectFilter.jsx","features/projects/Project.jsx","utils/commons/FormatPhone.js","features/profile/Profile.jsx","features/contact/ContactForm.jsx","features/contact/EditContactForm.jsx","features/contact/ContactTable.jsx","features/common/ProvinceDropdown.jsx","features/business/BusinessForm.jsx","features/business/BusinessModalDetail.jsx","features/business/CreateBusinessModal.jsx","features/business/Business.jsx","features/contact/Contact.jsx","features/projects/ProjectForm.jsx","features/projects/CreateProjectModal.jsx","features/business/BusinessDetailPage.jsx","features/account/AccountForm.jsx","features/account/CreateAccountModal.jsx","features/projects/ProjectAccounts.jsx","features/upload/UploadReview.jsx","features/upload/UploadTable.jsx","features/upload/UploadForm.jsx","features/upload/UploadModal.jsx","features/projects/ProjectDetailPage.jsx","features/upload/ViewUpload.jsx","features/admin/user/UserForm.jsx","features/admin/user/CreateNewUserModal.jsx","features/admin/user/UserTable.jsx","features/admin/user/User.jsx","features/admin/notfound/NotFound.jsx","features/admin/project/ContributorForm.jsx","features/admin/project/EditContributorsModal.jsx","features/admin/project/ProjectTableAdmin.jsx","features/admin/project/ProjectContributors.jsx","features/admin/status/StatusForm.jsx","features/admin/status/StatusModal.jsx","features/admin/status/StatusTable.jsx","features/admin/status/Status.jsx","features/admin/category/CategoryForm.jsx","features/admin/category/CategoryModal.jsx","features/admin/category/CategoryTable.jsx","features/admin/category/Category.jsx","features/admin/province/ProvinceForm.jsx","features/admin/province/ProvinceModal.jsx","features/admin/province/ProvinceTable.jsx","features/admin/province/Province.jsx","layout/App.jsx","serviceWorker.js","index.js"],"names":["authToken","localStorage","getItem","axios","create","baseURL","headers","common","Authorization","initialState","user","authenticated","rootReducer","state","action","type","token","API","defaults","Object","assign","payload","email","name","phone","role","provinces","businesses","post","then","response","console","log","data","catch","error","clear","persistedState","serializedUser","JSON","parse","e","loadFromLocalStorage","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","SideNavItems","handleLogout","preventDefault","props","logout","displayAdminMenu","divider","subheader","href","icon","this","background","userView","waves","onClick","Component","connect","dispatch","SideMenu","elem","document","querySelector","M","Sidenav","init","edge","inDuration","className","options","closeOnClick","trigger","Nav","alignLinks","fixed","brand","children","menuIcon","draggable","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","sidenav","Loading","id","Login","handleChange","setState","target","value","handleSubmit","password","errorMessage","authenticate","loading","style","marginTop","backgroundColor","padding","boxShadow","m","x","l","s","onSubmit","label","validate","required","onChange","node","right","getDate","date","formatted_date","current_datetime","Date","getMonth","getFullYear","ProjectTable","projects","statuses","displayProjects","map","project","startDate","completedDate","status","filter","_id","key","price","$numberDecimal","color","title","formatDate","get","striped","responsive","data-field","length","StatusDropdown","active","xl","handleChangeProject","classes","dropdownOptions","alignment","autoTrigger","constrainWidth","container","coverTrigger","hover","disabled","CategoryDropdown","categories","category","ProjectFilter","search","edited","handleSearch","searchData","count","handleReset","resetFilter","field","marginRight","bottom","marginBottom","Project","pageNo","totalProjects","getProjects","history","push","newData","setPageNumber","textAlign","activePage","items","parseInt","leftBtn","maxButtons","rightBtn","onSelect","pageNumber","replace","slice","Profile","handleInputChange","newValue","formatPhone","handlePasswordInputChange","handleSubmitNewPassword","currentPassword","newPassword","repeatPassword","errMessage","sussess","patch","update_profile","prevState","readOnly","newProfile","ContactForm","handleCreateContact","contact","business","duplicated","dublicated","dublicatedContact","successMessage","addMoreContactToTable","cancelContact","useExistingContact","contacts","includes","left","marginLeft","EditContactForm","handleUpdateContact","updateContact","closeEditContact","handleCancel","prevProps","ContactTable","handleRemoveContact","contactId","confirm","contactIds","handleEditContact","individualContact","handleCloseEditContact","updatedContact","ProvinceDropdown","province","BusinessForm","address","createBusinessAPI","updateData","closeCreateModal","updateBusinessAPI","updateBusiness","BusinessModalDetail","handleChangeBusiness","getBusinessDetail","err","actions","flat","modal","open","boder","bottomSheet","fixedFooter","header","dismissible","endingTop","opacity","startingTop","CreateBusinessModal","Business","getDataForPagination","businessCount","getData","getProvinceRequest","getBusinessRequest","all","spread","responses","addProvinceToRedux","searchBy","getProvinceName","handleOpenModal","handleFilter","keys","forEach","filterByField","results","handleResetFilter","handleCreateModel","openCreateModal","currentPage","searchText","array","item","toLowerCase","to","addBusinessesToRedux","Contact","ProjectForm","createProject","getBusinessData","updateProject","description","googleLink","data-length","format","defaultDate","setDefaultDate","CreateProjectModal","closeCreateProjectModal","BusinessDetailPage","openCreateProjectModal","businessId","match","params","getProjectsRequest","handleOpenCreateProjectModel","handleGoBack","goBack","ownProps","AccountForm","handleChangeAccount","account","updateAccount","createAccount","domain","username","expireDate","getProjectDetail","CreateAccountModal","projectId","ProjectAccounts","accounts","UploadReview","url","closeUploadReviewModal","src","height","width","UploadTable","uploads","openUploadReviewModal","nextProps","upload","UploadForm","file","FormData","append","files","UploadModal","ProjectDetailPage","response2","some","duration","onShow","responsiveThreshold","Infinity","swipeable","ViewUpload","uploadId","UserForm","phoneFormat","updateUserProfile","createNewUser","toString","CreateNewUserModal","UserTable","openModal","handleOpenModel","handleResetPassword","userId","closeModal","displayUser","users","hoverable","User","getUsers","NotFound","goHome","ContributorForm","contributors","displayContributor","contributor","tag","close","closeIcon","placeholder","onChipDelete","removeContributor","newContributorData","newContributors","currentContributors","addContributor","handleUpdateContributors","userIds","margin","EditContributorsModal","getContributors","closeEditContributorsModal","ProjectTableAdmin","opendEditContributorsModal","getStatusesRequest","getUsersRequest","Axios","openEditContributorModal","ProjectContributors","StatusForm","order","createStatus","updateStatus","StatusModal","StatusTable","displayStatus","Status","getStatuses","CategoryForm","createCategory","updateCategory","CategoryModal","CategoryTable","displayCategory","Category","getCategories","ProvinceForm","gst","pst","hst","createProvince","updateProvince","ProvinceModal","ProvinceTable","displayProvince","Province","getProvinces","App","loggedIn","admin","path","render","exact","component","Boolean","location","hostname","rootEl","getElementById","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aa80bf7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nlet authToken = \"\";\r\n\r\nif (localStorage.getItem(\"token\")) {\r\n    authToken = localStorage.getItem(\"token\");\r\n\r\n}\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://beeblee-crm-node.herokuapp.com\",\r\n    headers: { common: { Authorization: `Bearer ${authToken}` } }\r\n});\r\n\r\n","import {\r\n  AUTHENTICATE,\r\n  LOGOUT,\r\n  UPDATE_PROFILE,\r\n  FETCH_PROVINCE,\r\n  FETCH_BUSINESS\r\n} from \"../constants/action-types\";\r\nimport axios from \"axios\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nconst initialState = {\r\n  user: {\r\n    authenticated: false\r\n  }\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === AUTHENTICATE) {\r\n    //this check the token in localStorage and set the default values for authenticated request from client\r\n    if (localStorage.getItem(\"user\") && localStorage.getItem(\"token\")) {\r\n      const token = localStorage.getItem(\"token\");\r\n      API.defaults.baseURL = \"http://localhost:3000/\";\r\n      API.defaults.headers.common = { Authorization: `Bearer ${token}` };\r\n\r\n      return Object.assign({}, state, {\r\n        user: {\r\n          authenticated: action.payload.authenticated,\r\n          email: action.payload.user.email,\r\n          name: action.payload.user.name,\r\n          phone: action.payload.user.phone,\r\n          role: action.payload.user.role\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Update profile in Profile Page\r\n  if (action.type === UPDATE_PROFILE) {\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        ...state.user,\r\n        email: action.payload.email,\r\n        name: action.payload.name,\r\n        phone: action.payload.phone\r\n      }\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_PROVINCE) {\r\n    return Object.assign({}, state, {\r\n      provinces: action.payload\r\n    });\r\n  }\r\n\r\n  if (action.type === FETCH_BUSINESS) {\r\n    return Object.assign({}, state, {\r\n      businesses: action.payload\r\n    });\r\n  }\r\n\r\n  //logout the user and delete the token in localStorage and in the server as well\r\n  if (action.type === LOGOUT) {\r\n    API.post(`users/logout`)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        axios.defaults.baseURL = \"\";\r\n        axios.defaults.headers.common = { Authorization: `` };\r\n      })\r\n      .catch(error => {});\r\n    localStorage.clear();\r\n    return Object.assign({}, state, {\r\n      user: {\r\n        authenticated: false\r\n      }\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","const AUTHENTICATE = \"AUTHENTICATE\"\r\n\r\nconst LOGOUT = \"LOGOUT\"\r\n\r\nconst UPDATE_PROFILE=\"UPDATE_PROFILE\"\r\n\r\nconst FETCH_PROVINCE = \"FETCH_PROVINCE\"\r\n\r\nconst FETCH_BUSINESS = \"FETCH_BUSINESS\"\r\n\r\nexport  {AUTHENTICATE, LOGOUT, UPDATE_PROFILE, FETCH_PROVINCE, FETCH_BUSINESS }","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\n//persists the user data into localStorage\r\n//that prevent refreshing erase redux states\r\nfunction saveToLocalStorage(user) {\r\n    try {\r\n        const serializedUser = JSON.stringify(user);\r\n        localStorage.setItem(\"user\", serializedUser);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n//load the saved user data from localstorage for Redux state\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedUser = localStorage.getItem(\"user\");\r\n        if (serializedUser === null) {\r\n            const user = new Object({\r\n                authenticated: false\r\n            });\r\n            return Object.assign({}, { user });\r\n        }\r\n        const user = JSON.parse(serializedUser);\r\n        return Object.assign({}, { user });\r\n\r\n    } catch (e) {\r\n        const user = new Object({\r\n            authenticated: false\r\n        });\r\n\r\n        return Object.assign({}, { user });\r\n    }\r\n}\r\n\r\n//User Data load from localStorage\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n\r\n\r\n// export const configureStore = () => {\r\n//     const store = createStore(rootReducer,  persistedState,\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n//     return store;\r\n// }\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState().user));\r\n\r\nexport default store","import React, { Component } from \"react\";\r\nimport { SideNavItem } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logout } from \"../../redux/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { user: state.user };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  };\r\n}\r\n\r\n\r\n\r\nclass SideNavItems extends Component {\r\n  handleLogout = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.logout();\r\n\r\n  };\r\n\r\n  displayAdminMenu = user => {\r\n    if (user.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <SideNavItem divider />\r\n          <SideNavItem subheader>Admin</SideNavItem>\r\n          <SideNavItem href=\"/admin/projects\" icon=\"assignment_turned_in\">\r\n             Project Contributors\r\n          </SideNavItem>\r\n          <SideNavItem href=\"/admin/users\" icon=\"group\">\r\n            Manage Users\r\n          </SideNavItem>\r\n          <SideNavItem href=\"/admin/statuses\" icon=\"star\">\r\n            Manage Status\r\n          </SideNavItem>\r\n          <SideNavItem href=\"/admin/categories\" icon=\"category\">\r\n            Manage Category\r\n          </SideNavItem>\r\n          <SideNavItem href=\"/admin/provinces\" icon=\"museum\">\r\n            Manage Provinces\r\n          </SideNavItem>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {user.authenticated ? (\r\n          <div>\r\n            <SideNavItem\r\n              user={{\r\n                background: \"https://source.unsplash.com/random/300x112\",\r\n                // \"../img/gaelle-marcel-bay4zMs4zTc-unsplash.jpg\",\r\n                email: user.email,\r\n                name: user.name\r\n              }}\r\n              userView\r\n            />\r\n            <SideNavItem href=\"/projects\" icon=\"assignment_turned_in\">\r\n              Projects\r\n            </SideNavItem>\r\n            <SideNavItem href=\"/businesses\" icon=\"storefront\">\r\n              Business\r\n            </SideNavItem>\r\n            <SideNavItem href=\"/contacts\" icon=\"account_box\">\r\n              Contacts\r\n            </SideNavItem>\r\n            {this.displayAdminMenu(user)}\r\n            <SideNavItem divider />\r\n            <SideNavItem subheader>My Account</SideNavItem>\r\n            <SideNavItem href=\"/profile/me\" waves icon=\"person_pin\">\r\n              Profile\r\n            </SideNavItem>\r\n            <SideNavItem\r\n              href=\"/logout\"\r\n              onClick={this.handleLogout}\r\n              waves\r\n              icon=\"power_settings_new\"\r\n            >\r\n              Logout\r\n            </SideNavItem>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <SideNavItem\r\n              user={{\r\n                background: \"img/jeremy-bishop-BuQ-jgeexaQ-unsplash.jpg\",\r\n                email: \"Beeblee\",\r\n                name: \"\"\r\n              }}\r\n              userView\r\n            />\r\n            <SideNavItem href=\"/login\" waves icon=\"trending_flat\">\r\n              Login\r\n            </SideNavItem>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavItems);\r\n","import { AUTHENTICATE, LOGOUT, UPDATE_PROFILE, FETCH_PROVINCE, FETCH_BUSINESS } from '../constants/action-types'\r\n\r\nexport function authenticate(payload) {\r\n    return {type: AUTHENTICATE, payload}\r\n}\r\n\r\nexport function update_profile(payload){\r\n    return {type: UPDATE_PROFILE, payload}\r\n}\r\n\r\nexport function logout() {\r\n    return {type: LOGOUT, payload:null}\r\n}\r\n\r\nexport function fetch_province(payload) {\r\n    return {type: FETCH_PROVINCE, payload}\r\n}\r\n\r\nexport function fetch_business(payload) {\r\n    return {type: FETCH_BUSINESS, payload}\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { SideNav, Icon } from \"react-materialize\";\r\n\r\nimport M from \"materialize-css\";\r\nimport SideNavItems from \"./SideNavItems\";\r\n\r\n\r\n\r\nclass SideMenu extends Component {\r\n   \r\n    componentDidMount() {\r\n        var elem = document.querySelector(\".sidenav\");\r\n        var instance = M.Sidenav.init(elem, {\r\n            edge: \"left\",\r\n            inDuration: 250\r\n        });\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div>\r\n                <style>\r\n                    {`\r\n                #root > div > div {\r\n                z-index: 99999 !important;\r\n                \r\n                }\r\n            `}\r\n                </style>\r\n                <SideNav\r\n                    className='left '\r\n                    options={{\r\n                        closeOnClick: true,\r\n                        \r\n                    }}\r\n                    trigger={\r\n                        <a href='#'>\r\n                            <Icon>menu</Icon>\r\n                        </a>\r\n                    }\r\n                >\r\n                    <SideNavItems />\r\n                </SideNav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { Component } from \"react\"\r\n\r\nimport {\r\n    Navbar,\r\n\r\n    Icon,\r\n\r\n} from \"react-materialize\"\r\nimport SideMenu from \"./SideMenu\"\r\nimport SideNavItems from './SideNavItems'\r\n\r\n\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar\r\n                alignLinks='left'\r\n                className=\"gradient-nav\"\r\n                fixed={true}\r\n                brand={\r\n                    <a   className='brand-logo center' href='#'>\r\n                        Beeblee\r\n                    </a>\r\n                }\r\n                children = {<SideMenu/>}\r\n                menuIcon={<Icon>menu</Icon>}\r\n                options={{\r\n                    draggable: true,\r\n                    edge: \"left\",\r\n                    inDuration: 250,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 200,\r\n                    preventScrolling: true\r\n                }}\r\n                sidenav={\r\n                    <SideNavItems/>\r\n                }\r\n            >\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Preloader } from \"react-materialize\";\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div id=\"dots5\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport { TextInput, Row, Col, Button, Icon } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport API from \"../../utils/API/API\";\r\nimport { authenticate } from \"../../redux/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    authenticate: authenticated => dispatch(authenticate(authenticated))\r\n  };\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      errorMessage: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    this.setState({\r\n      ...this.state,\r\n      errorMessage: \"\"\r\n    });\r\n    API.post(`users/login`, {\r\n      email,\r\n      password\r\n    })\r\n      .then(response => {\r\n        response.data.user.authenticated = true;\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        if (response.data) {\r\n          response.data.authenticated = true;\r\n          this.props.authenticate(response.data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: \"Incorrect Email or Password\",\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, loading, errorMessage } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"radius-corner\"\r\n        style={{\r\n          marginTop: \"70px\",\r\n          backgroundColor: \"white\",\r\n          padding: \"20px\",\r\n          boxShadow: \"1px 1px 1px #9E9E9E\"\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col m={5} x={5} l={5}></Col>\r\n          <Col m={2} s={12}>\r\n            <h3> Login</h3>\r\n          </Col>\r\n          <Col m={5} x={5} l={5}></Col>\r\n        </Row>\r\n        <Row className=\"animated bounceInRight\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextInput\r\n              m={12}\r\n              x={12}\r\n              l={12}\r\n              s={12}\r\n              name=\"email\"\r\n              value={email}\r\n              email\r\n              label=\"Email\"\r\n              validate\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              m={12}\r\n              x={12}\r\n              l={12}\r\n              s={12}\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              password\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            {!loading ? (\r\n              <Button\r\n                node=\"button\"\r\n                waves=\"light\"\r\n                className=\"gradient-btn btn-blue\"\r\n              >\r\n                Login\r\n                <Icon right>send</Icon>\r\n              </Button>\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </form>\r\n          {errorMessage && (\r\n            <div className=\"red-text text-accent-2 animated shake\">\r\n              <p> {errorMessage}</p>\r\n            </div>\r\n          )}\r\n          <br />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n// export default Login\r\n","export default function getDate(date) {\r\n  let formatted_date = \"\";\r\n  if (date) {\r\n    const months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ];\r\n\r\n    let current_datetime = new Date(date);\r\n    formatted_date =\r\n      months[current_datetime.getMonth()] +\r\n      \" \" +\r\n      current_datetime.getDate() +\r\n      \", \" +\r\n      current_datetime.getFullYear();\r\n  }\r\n  return formatted_date;\r\n\r\n  //   let newDate = \"\";\r\n  //   if (date) {\r\n  //     newDate = new Date(date);\r\n  //     newDate = newDate.toDateString();\r\n  //   }\r\n  //   return newDate;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport formatDate from \"../../utils/commons/FormatDate\"\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\n//Display all project in a table\r\n//required Projects array as a prop\r\nclass ProjectTable extends Component {\r\n  state = {\r\n    loading: true,\r\n    projects: [],\r\n    statuses: []\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.projects) {\r\n      this.setState({\r\n        ...this.state,\r\n        projects: this.props.projects,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    API.get(\"/statuses\")\r\n    .then(response => {\r\n      this.setState({\r\n        ...this.state,\r\n        statuses: response.data,\r\n        loading: false\r\n      });\r\n    })\r\n    .catch(error => {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: false\r\n      });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  displayProjects = projects => {\r\n    const {statuses} = this.state\r\n\r\n    return projects.map(project => {\r\n      const startDate = new Date(project.startDate);\r\n      const completedDate = new Date(project.completedDate);\r\n      const status = statuses.filter(status => status._id === project.status)[0]\r\n\r\n      return (\r\n        <tr key={project._id}>\r\n          <td>\r\n            <a href={\"/projects/\" + project._id}>{project.name}</a>\r\n          </td>\r\n          <td>{project.price.$numberDecimal}</td>\r\n          <td>\r\n           {status && <p style={{ color: `${status.color}` }}>{status.title}</p>}\r\n          </td>\r\n          <td>{project.startDate && formatDate(startDate)}</td>\r\n          <td>{project.completedDate && formatDate(completedDate)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    const { projects } = this.props;\r\n\r\n    return (\r\n      <Table className=\"animated fadeIn\"  striped={true} responsive={true}>\r\n        <thead>\r\n          <tr>\r\n            <th data-field=\"id\">Project Name</th>\r\n            <th data-field=\"name\">Price</th>\r\n            <th data-field=\"price\">Status</th>\r\n            <th data-field=\"price\">Start Date</th>\r\n            <th data-field=\"price\">Completed Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.length>0 ? (\r\n            this.displayProjects(projects)\r\n          ) : (\r\n            <tr>\r\n              <td>There is no project found!</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport { Select } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass StatusDropdown extends Component {\r\n  state = {\r\n    loading: true,\r\n    status: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if(this.props.status){\r\n      this.setState({\r\n        ...this.state,\r\n        status: this.props.status\r\n      })\r\n    }\r\n    API.get(\"/statuses\")\r\n      .then(response => {\r\n        const statuses = response.data.filter(status => status.active)\r\n        this.setState({\r\n          ...this.state,\r\n          statuses,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    const { statuses }= this.state;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Select\r\n          s={12}\r\n          l={6}\r\n          m={6}\r\n          xl={6}\r\n          onChange={this.props.handleChangeProject}\r\n          options={{\r\n            classes: \"\",\r\n            dropdownOptions: {\r\n              alignment: \"left\",\r\n              autoTrigger: true,\r\n              closeOnClick: true,\r\n              constrainWidth: true,\r\n              container: null,\r\n              coverTrigger: true,\r\n              hover: false,\r\n              inDuration: 150,\r\n              onCloseEnd: null,\r\n              onCloseStart: null,\r\n              onOpenEnd: null,\r\n              onOpenStart: null,\r\n              outDuration: 250\r\n            }\r\n          }}\r\n          value={this.props.status? this.props.status._id: \"\"}\r\n          name=\"status\"\r\n\r\n        >\r\n          <option disabled value=\"\">\r\n            Choose status\r\n          </option>\r\n          {statuses.map(status => {\r\n            return (\r\n              <option value={status._id} key={status._id} >\r\n                {status.title}\r\n              </option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatusDropdown);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport { Select } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CategoryDropdown extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    API.get(\"/categories\")\r\n      .then(response => {\r\n        this.setState({\r\n          ...this.state,\r\n          categories: response.data,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false\r\n        });\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n    const { loading, categories } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Select\r\n          s={12}\r\n          l={6}\r\n          m={6}\r\n          xl={6}\r\n          onChange={this.props.handleChangeProject}\r\n          options={{\r\n            classes: \"\",\r\n            dropdownOptions: {\r\n              alignment: \"left\",\r\n              autoTrigger: true,\r\n              closeOnClick: true,\r\n              constrainWidth: true,\r\n              container: null,\r\n              coverTrigger: true,\r\n              hover: false,\r\n              inDuration: 150,\r\n              onCloseEnd: null,\r\n              onCloseStart: null,\r\n              onOpenEnd: null,\r\n              onOpenStart: null,\r\n              outDuration: 250\r\n            }\r\n          }}\r\n          value={this.props.category? this.props.category._id: \"\"}\r\n          name=\"category\"\r\n        >\r\n          <option disabled value=\"\">\r\n            Choose category\r\n          </option>\r\n          {categories.map(category => {\r\n            return (\r\n              <option value={category._id} key={category._id}>\r\n                {category.title}\r\n              </option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryDropdown);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, TextInput } from \"react-materialize\";\r\nimport Button from \"react-materialize/lib/Button\";\r\nimport StatusDropdown from \"../common/StatusDropdown\";\r\nimport CategoryDropdown from \"../common/CategoryDropdown\";\r\nimport API from \"../../utils/API/API\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectFilter extends Component {\r\n  state = {\r\n    search: {\r\n      name: \"\",\r\n      status: \"\",\r\n      category: \"\"\r\n    },\r\n    edited: false\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    API.post('/search/projects', this.state.search).then(response => {\r\n      if(response.data){\r\n\r\n       this.props.searchData(response.data.projects, response.data.count)\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    //console.log(this.state.search);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      search: {\r\n        name: \"\",\r\n        status: \"\",\r\n        category: \"\"\r\n      },\r\n      edited: false\r\n    })\r\n    this.props.resetFilter()\r\n  }\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    let { search } = this.state;\r\n\r\n    search[field] = value;\r\n    this.setState({\r\n      search,\r\n      edited: true\r\n    });\r\n  };\r\n  render() {\r\n    const { search, edited } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSearch}>\r\n          <Row\r\n            className=\" radius-corner\"\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              padding: \"20px\",\r\n              boxShadow: \"1px 1px 1px #9E9E9E\"\r\n            }}\r\n          >\r\n            <h6>Filter by</h6>\r\n            <TextInput\r\n              label=\"Project Name:\"\r\n              value={search.name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n            />\r\n            <StatusDropdown\r\n              handleChangeProject={this.handleChange}\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              status={search.status}\r\n              onChange={this.handleChange}\r\n            />\r\n            <CategoryDropdown\r\n              handleChangeProject={this.handleChange}\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              className= {edited? \"gradient-btn btn-blue\" : \"\"}\r\n              node=\"button\"\r\n              disabled = {!edited}\r\n              style={{\r\n                marginRight: \"5px\",\r\n                bottom: \"-20px\",\r\n                marginBottom: \"20px\"\r\n              }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              className=\"gradient-btn btn-white\"\r\n              node=\"button\"\r\n              type=\"reset\"\r\n              style={{\r\n                marginRight: \"5px\",\r\n                bottom: \"-20px\",\r\n                marginBottom: \"20px\"\r\n              }}\r\n              onClick={this.handleReset}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectFilter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport ProjectTable from \"./ProjectTable\";\r\nimport { Row, Pagination, Icon, Col } from \"react-materialize\";\r\nimport ProjectFilter from \"./ProjectFilter\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass Project extends Component {\r\n  state = {\r\n    loading: true,\r\n    pageNo: 1,\r\n    totalProjects: 0\r\n  };\r\n  componentDidMount() {\r\n    const { pageNo } = this.state;\r\n    this.getProjects(pageNo)\r\n  }\r\n\r\n  getProjects = pageNo => {\r\n    API.get(`/projects?pageNo=${pageNo}`)\r\n      .then(response => {\r\n        this.setState({\r\n          loading: false,\r\n          projects: response.data.projects,\r\n          totalProjects: response.data.count\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  //get the new data from ProjectFilter Component and display search result\r\n  searchData = (newData, count) => {\r\n    this.setState({\r\n      projects: newData,\r\n      totalProjects:count\r\n    })\r\n  }\r\n\r\n  //Reset filter project\r\n  resetFilter = e => {\r\n    this.getProjects(1)\r\n  }\r\n\r\n  setPageNumber = pageNo => {\r\n    this.setState({\r\n      pageNo\r\n    });\r\n    this.getProjects(pageNo);\r\n  };\r\n\r\n  render() {\r\n    const { loading, projects, pageNo, totalProjects } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <Row>\r\n          <Col>\r\n            <h5><Icon>assignment_turned_in</Icon> All Projects</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ProjectFilter searchData={this.searchData} resetFilter={this.resetFilter}/>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Row style={{ textAlign: \"center\" }}>\r\n            <Pagination\r\n              activePage={pageNo}\r\n              items={parseInt(totalProjects / 10 +1)}\r\n              leftBtn={<Icon>chevron_left</Icon>}\r\n              maxButtons={3}\r\n              rightBtn={<Icon>chevron_right</Icon>}\r\n              onSelect={pageNumber => {\r\n                this.setPageNumber(pageNumber);\r\n              }}\r\n            />\r\n          </Row>\r\n          <ProjectTable projects={projects} />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Project);\r\n","export default function(value) {\r\n    const phoneRegex = /^\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4})$/;\r\n\r\n    value = value.replace(phoneRegex, \"($1)$2-$3\");\r\n    value = value.replace(\" \", \"\");\r\n    value = value.replace(\"+1\", \"\");\r\n    if (value.length > 9) {\r\n        value = value.slice(0, 13);\r\n    }\r\n    return value;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, TextInput, Button, Icon } from \"react-materialize\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../loading/Loading\";\r\nimport axios from \"axios\";\r\nimport { update_profile } from \"../../redux/actions/index\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        update_profile: newProfile => dispatch(update_profile(newProfile))\r\n    };\r\n}\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\"\r\n            },\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            repeatPassword: \"\",\r\n            errMessage: \"\",\r\n            sussess: false,\r\n            edited: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = this.props.user;\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            user: {\r\n                ...this.state.user,\r\n                email: user.email,\r\n                name: user.name,\r\n                phone: user.phone,\r\n\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const user = { ...this.state.user };\r\n        const field = e.target.name;\r\n        let newValue = e.target.value;\r\n        if (field === \"phone\") {\r\n            newValue = formatPhone(newValue);\r\n        }\r\n        user[field] = newValue;\r\n        this.setState({ user, edited: true });\r\n    };\r\n\r\n    handlePasswordInputChange = e => {\r\n        const field = e.target.name;\r\n        const newValue = e.target.value;\r\n        this.setState({\r\n            [field]: newValue\r\n        });\r\n    };\r\n\r\n    handleSubmitNewPassword = e => {\r\n        e.preventDefault();\r\n        const { currentPassword, newPassword, repeatPassword } = this.state;\r\n\r\n        this.setState({\r\n            errMessage: \"\",\r\n            sussess: false\r\n        });\r\n        if (newPassword !== repeatPassword) {\r\n            this.setState({\r\n                errMessage: \"Passwords do not match!\"\r\n            });\r\n        } else {\r\n            const data = { currentPassword, newPassword };\r\n\r\n            API.patch(`/users/update/password`, {\r\n                data\r\n            })\r\n                .then(response => {\r\n                    this.setState({\r\n                        sussess: true,\r\n                        currentPassword: \"\",\r\n                        newPassword: \"\",\r\n                        repeatPassword: \"\"\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    {\r\n                        this.setState({\r\n                            errMessage:\r\n                                \"Incorrect Current Password or some errors have been occurred\"\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = this.state.user;\r\n        this.setState({\r\n            errMessage: \"\",\r\n            sussess: false,\r\n            edited: false,\r\n        });\r\n\r\n        //get the token for verifying request\r\n        // this.includeTokenWithRequest();\r\n\r\n        API.patch(`users/update/profile`, {\r\n            data\r\n        })\r\n            .then(response => {\r\n                const user = response.data;\r\n                this.props.update_profile(user);\r\n                this.setState({\r\n                    sussess: true\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    errMessage: \"Some errors has been occurred!\"\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Loading />;\r\n        }\r\n        const {\r\n            user,\r\n            currentPassword,\r\n            newPassword,\r\n            repeatPassword,\r\n            errMessage,\r\n            sussess,\r\n            edited\r\n        } = this.state;\r\n\r\n        return (\r\n            <div >\r\n                <form className=\"radius-corner\"\r\n                    onSubmit={this.handleSubmit}\r\n                    style={{\r\n                        backgroundColor: \"white\",\r\n                        marginTop: \"30px\",\r\n                        padding: \"30px\",\r\n                        boxShadow: \"1px 1px 1px #9E9E9E\",\r\n                        marginBottom: \"20px\"\r\n                    }}\r\n                >\r\n                    <h6 >User Profile</h6>\r\n\r\n                    {sussess && (\r\n                        <Row >\r\n                            <Col s={12} m={6} l={6} xl={6}>\r\n                                <p className='green-text animated bounceInRigh'>\r\n                                    Update Sussessfully{\" \"}\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n\r\n                    {errMessage && (\r\n                        <Row>\r\n                            <Col s={12} m={6} l={6} xl={6}>\r\n                                <p className=' deep-orange-text animated shake '>\r\n                                    {errMessage || \"\"}\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                    <Row className=\"animated bounceInRigh\">\r\n                        <Col s={12} m={6} l={6} xl={6}>\r\n                            <TextInput\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='Name'\r\n                                value={user.name}\r\n                                name='name'\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                        <Col s={12} m={6} l={6} xl={6}>\r\n                            <TextInput\r\n                                email\r\n                                validate\r\n                                disabled\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='Email'\r\n                                value={user.email}\r\n                                readOnly\r\n                            />\r\n                        </Col>\r\n                        <Col s={12} m={6} l={6} xl={6}>\r\n                            <TextInput\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='Phone'\r\n                                name='phone'\r\n                                value={user.phone}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Button node='button' type='submit' waves='light' className={edited ?\"gradient-btn btn-blue\": \"\"} disabled={!edited}>\r\n                            Save\r\n                            <Icon right>send</Icon>\r\n                        </Button>\r\n                    </Row>\r\n                </form>\r\n                <form className=\"radius-corner\"\r\n                    onSubmit={this.handleSubmitNewPassword}\r\n                    style={{\r\n                        backgroundColor: \"white\",\r\n                        padding: \"30px\",\r\n                        boxShadow: \"1px 1px 1px #9E9E9E\"\r\n                    }}\r\n                >\r\n                    <Row>\r\n                        <h6>Change Password</h6>\r\n                        <Col s={12} m={12} l={12} xl={12}>\r\n                            <TextInput\r\n                                password\r\n                                required\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='Current Password'\r\n                                name='currentPassword'\r\n                                value={currentPassword}\r\n                                onChange={this.handlePasswordInputChange}\r\n                            />\r\n                        </Col>\r\n                        <Col s={12} m={6} l={6} xl={6}>\r\n                            <TextInput\r\n                                password\r\n                                required\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='New Password'\r\n                                name='newPassword'\r\n                                value={newPassword}\r\n                                onChange={this.handlePasswordInputChange}\r\n                            />\r\n                        </Col>\r\n                        <Col s={12} m={6} l={6} xl={6}>\r\n                            <TextInput\r\n                                password\r\n                                required\r\n                                s={12}\r\n                                l={12}\r\n                                m={12}\r\n                                label='Repeat Password'\r\n                                name='repeatPassword'\r\n                                value={repeatPassword}\r\n                                onChange={this.handlePasswordInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Button node='button' type='submit' waves='light' className= \"gradient-btn btn-green\">\r\n                            Change Password\r\n                            <Icon right>lock</Icon>\r\n                        </Button>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Icon, Button, Row } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nimport formatPhone from \"../../utils/commons/FormatPhone\"\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contact: {\r\n                name: \"\",\r\n                phone: \"\",\r\n                email: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    handleCreateContact = e => {\r\n        e.preventDefault();\r\n\r\n        const contact = this.state.contact;\r\n        const business = this.props.business || {};\r\n        if (business) {\r\n            contact.business = business._id;\r\n        }\r\n        API\r\n            .post(`contacts`, contact)\r\n            .then(response => {\r\n                if (response.data.duplicated) {\r\n                    this.setState({\r\n                        dublicated: true,\r\n                        dublicatedContact: response.data.contact\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        successMessage: \"Save successfully\"\r\n                    });\r\n\r\n                    this.props.addMoreContactToTable(response.data.contact);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errorMessage: \"Cannot save the data\"\r\n                });\r\n            });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            successMessage: \"\",\r\n            errorMessage: \"\"\r\n        });\r\n\r\n        const field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        if (field === \"phone\") {\r\n            value=formatPhone(value)\r\n        }\r\n\r\n        let contact = {\r\n            ...this.state.contact,\r\n            [field]: value\r\n        };\r\n\r\n        this.setState({\r\n            contact\r\n        });\r\n    };\r\n\r\n    cancelContact = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            ...this.state,\r\n            dublicated: false,\r\n            dublicatedContact: {},\r\n            successMessage: \"\",\r\n            errorMessage: \"\"\r\n        });\r\n    };\r\n\r\n    useExistingContact = e => {\r\n        e.preventDefault();\r\n        const contact = this.state.dublicatedContact;\r\n        const business = this.props.business;\r\n\r\n        API\r\n            .patch(`businesses/addContact/${business._id}`, contact)\r\n            .then(response => {\r\n                if (!business.contacts.includes(contact._id)) {\r\n                    this.props.addMoreContactToTable(contact);\r\n                }\r\n                this.setState({\r\n                    ...this.state,\r\n                    dublicated: false,\r\n                    dublicatedContact: {},\r\n                    successMessage: \"Save successfully\",\r\n                    errorMessage: \"\"\r\n                });\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    errorMessage: \"Cannot save the contact to the business\"\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const contact = this.state.contact;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleCreateContact} >\r\n                    <Row >\r\n                        <TextInput\r\n                            s={12}\r\n                            l={2}\r\n                            m={2}\r\n                            xl={2}\r\n                            label='Name'\r\n                            name='name'\r\n                            value={contact.name}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={3}\r\n                            m={3}\r\n                            xl={3}\r\n                            label='Phone'\r\n                            name='phone'\r\n                            value={contact.phone}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={6}\r\n                            m={4}\r\n                            xl={4}\r\n                            label='Email'\r\n                            email\r\n                            validate\r\n                            value={contact.email}\r\n                            name='email'\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Button\r\n                            node='button'\r\n                            type='submit'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\" }}\r\n                            className=\"gradient-btn btn-red\"\r\n                        >\r\n                            Add\r\n                            <Icon left>add_box</Icon>\r\n                        </Button>\r\n                    </Row>\r\n                    <Row>\r\n                        {this.state.successMessage && (\r\n                            <p className='green-text'>\r\n                                {this.state.successMessage}\r\n                            </p>\r\n                        )}\r\n                    </Row>\r\n\r\n                    {this.state.dublicated && (\r\n                        <Row className=\"animated jello\">\r\n                            <h6 className='red-text'>\r\n                                A contact has been found with this phone number\r\n                            </h6>\r\n                            <p>Name: {this.state.dublicatedContact.name}</p>\r\n                            <p>Phone: {this.state.dublicatedContact.phone}</p>\r\n                            <p>Email: {this.state.dublicatedContact.email}</p>\r\n                            <Row>\r\n                                <Button onClick={this.useExistingContact} className=\"gradient-btn btn-green\">\r\n                                    Use this contact\r\n                                </Button>\r\n                                <Button\r\n                                    className=' black-text grey lighten-4'\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                    onClick={this.cancelContact}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </Row>\r\n                        </Row>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Row, Icon, Button } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\n\r\nclass EditContactForm extends Component {\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            contact: this.props.contact,\r\n            edited: false\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.contact._id !== this.props.contact._id) {\r\n            this.setState({\r\n                contact: this.props.contact\r\n            });\r\n        }\r\n    }\r\n\r\n    handleUpdateContact = e => {\r\n        e.preventDefault();\r\n        const contact = this.state.contact;\r\n        API.patch(`contacts/${contact._id}`, contact)\r\n            .then(response => {\r\n                this.props.updateContact(response.data);\r\n                this.props.closeEditContact();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        const field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        if (field === \"phone\") {\r\n            value = formatPhone(value);\r\n        }\r\n\r\n        let contact = {\r\n            _id: this.state.contact._id,\r\n            name: this.state.contact.name,\r\n            phone: this.state.contact.phone,\r\n            email: this.state.contact.email,\r\n            [field]: value\r\n        };\r\n        this.setState({\r\n            contact,\r\n            edited: true\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.props.closeEditContact()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.contact) {\r\n            return <Loading />;\r\n        }\r\n        const { contact, edited } = this.state;\r\n\r\n        return (\r\n            <div className=\"animated bounceInLeft \">\r\n                <form onSubmit={this.handleUpdateContact}>\r\n                    <Row>\r\n                        <TextInput\r\n                            s={12}\r\n                            l={2}\r\n                            m={2}\r\n                            xl={2}\r\n                            label='Name'\r\n                            name='name'\r\n                            value={contact.name}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={3}\r\n                            m={3}\r\n                            xl={3}\r\n                            label='Phone'\r\n                            name='phone'\r\n                            value={contact.phone}\r\n                            required\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <TextInput\r\n                            s={12}\r\n                            l={3}\r\n                            m={3}\r\n                            xl={3}\r\n                            label='Email'\r\n                            email\r\n                            validate\r\n                            value={contact.email}\r\n                            name='email'\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <Button\r\n\r\n                            l={1}\r\n                            m={1}\r\n                            xl={1}\r\n                            node='button'\r\n                            type='submit'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\" }}\r\n                            disabled={!edited}\r\n                            className={edited ? 'gradient-btn btn-green': 'gradient-btn'}\r\n                        >\r\n                            Save\r\n                            <Icon left>save</Icon>\r\n                        </Button>\r\n                        <Button\r\n                            l={1}\r\n                            m={1}\r\n                            xl={1}\r\n                            node='button'\r\n                            type='reset'\r\n                            waves='light'\r\n                            style={{ marginTop: \"20px\", marginLeft:\"10px\" }}\r\n                            onClick={this.handleCancel}\r\n                            className='gradient-btn btn-white'\r\n                        >\r\n                            Cancel\r\n\r\n                        </Button>\r\n                    </Row>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Table, Icon } from \"react-materialize\";\r\nimport EditContactForm from \"./EditContactForm\";\r\nimport API from \"../../utils/API/API\";\r\nexport class ContactTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            contacts: this.props.contacts\r\n        })\r\n    }\r\n    componentWillReceiveProps(prevProps) {\r\n        if(prevProps.contacts.length !== this.props.contacts.length) {\r\n\r\n            this.setState({\r\n                contacts: this.props.contacts\r\n            })\r\n        }\r\n    }\r\n\r\n    handleRemoveContact = (contactId) => () => {\r\n        const {business} = this.props\r\n        const confirmed = window.confirm(\"Do you want to remove this contact from the business?\")\r\n\r\n        if(confirmed) {\r\n\r\n            API.patch(`businesses/removeContact/${business._id}`, {contactId}).then(response => {\r\n                let contactIds  = response.data.contacts\r\n                let contacts = this.state.contacts\r\n                contacts = contacts.filter(contact => {\r\n                    return contactIds.includes(contact._id)\r\n                })\r\n                this.setState({\r\n                    ...this.state,\r\n                    contacts\r\n                })\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditContact = (contact) => () => {\r\n        this.setState({\r\n            individualContact: contact\r\n        })\r\n    }\r\n\r\n    handleCloseEditContact = () => {\r\n        this.setState({\r\n            individualContact: null\r\n        })\r\n    }\r\n\r\n    updateContact = (updatedContact) => {\r\n        let contacts = this.state.contacts\r\n        contacts = contacts.map(contact => {\r\n            return contact._id == updatedContact._id? updatedContact:contact\r\n        })\r\n        this.setState({\r\n            contacts\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { contacts } = this.state;\r\n\r\n        return (\r\n            <Row >\r\n                <Col x={12} s={12} l={12} m={12} xl={12}>\r\n                    <Table x={12} s={12} l={12} m={12} xl={12}  className=\"radius-corner\" striped={true} responsive={true}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th data-field='id'>Name</th>\r\n                                <th data-field='name'>Phone</th>\r\n                                <th data-field='email'>Email</th>\r\n                                <th data-field='action'>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {contacts.map(contact => {\r\n                                return (\r\n                                    <tr key={contact._id}>\r\n                                        <td>{contact.name}</td>\r\n                                        <td>{contact.phone}</td>\r\n                                        <td>{contact.email}</td>\r\n                                        <td>\r\n                                            <a href='#'\r\n                                             style={{\r\n                                                marginRight: \"20px\",\r\n\r\n                                            }}\r\n                                            onClick={this.handleEditContact(contact)}>\r\n                                                <Icon>create</Icon>\r\n                                            </a>\r\n                                            <a\r\n                                                href='#'\r\n                                                style={{\r\n\r\n                                                    color: \"red\"\r\n                                                }}\r\n                                                onClick={this.handleRemoveContact(contact._id)}\r\n                                            >\r\n                                                <Icon>clear</Icon>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n\r\n                {this.state.individualContact && <EditContactForm contact={this.state.individualContact} updateContact={this.updateContact} closeEditContact={this.handleCloseEditContact}/>}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Select } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    provinces: state.provinces\r\n  };\r\n}\r\n\r\n// Display province drop down, with a props called handleChange\r\nclass ProvinceDropdown extends Component {\r\n  state = {\r\n    provinces: [],\r\n    province: \"\"\r\n  };\r\n  componentDidMount() {\r\n    API.get(\"/provinces\")\r\n      .then(response => {\r\n        //if province is from props, check if it is the id or province object\r\n        const province = this.props.province._id || this.props.province\r\n        const provinces = response.data.filter(province => province.active)\r\n        this.setState({\r\n          provinces,\r\n          province\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { provinces, province } = this.state;\r\n    if (!provinces) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <Select\r\n        options={{\r\n          classes: \"\",\r\n          dropdownOptions: {\r\n            alignment: \"left\",\r\n            autoTrigger: true,\r\n            closeOnClick: true,\r\n            constrainWidth: true,\r\n            container: null,\r\n            coverTrigger: true,\r\n            hover: false,\r\n            inDuration: 150,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            outDuration: 250\r\n          }\r\n        }}\r\n        value={province}\r\n        name=\"province\"\r\n        onChange={this.props.handleChange}\r\n      >\r\n        <option disabled value=\"\">\r\n          Select Province\r\n        </option>\r\n        {provinces.map(province => {\r\n          return (\r\n            <option\r\n              className=\"black-text\"\r\n              key={province._id}\r\n              value={province._id}\r\n            >\r\n              {province.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceDropdown);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Row, TextInput } from \"react-materialize\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\nimport ProvinceDropdown from \"../common/ProvinceDropdown\";\r\nimport API from \"../../utils/API/API\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\n//Take 2 props:\r\n// Business object to display\r\n//and updateData() function to update data in the parent component\r\n//If Business object is empty, then create a new one\r\nclass BusinessForm extends Component {\r\n  state = {\r\n    business: { name: \"\", address: \"\", phone: \"\", province: \"\" },\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage:\"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.business) {\r\n      this.setState({\r\n        business: this.props.business\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (field === \"phone\") {\r\n      value = formatPhone(value);\r\n    }\r\n\r\n    let business = this.state.business;\r\n    business[field] = value;\r\n    this.setState({\r\n      business,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  //Create a business\r\n  //Will be called when _id property of business is not present\r\n  createBusinessAPI = (business) => {\r\n    API.post(`businesses`, business)\r\n    .then(response => {\r\n        this.props.updateData();\r\n        this.props.closeCreateModal();\r\n\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  //Update business API\r\n  //Will be called when business has _id property\r\n  updateBusinessAPI = (business) => {\r\n    const _id = business._id;\r\n    const updateBusiness = {\r\n      name: business.name,\r\n      phone: business.phone,\r\n      address: business.address,\r\n      province: business.province\r\n    };\r\n    API.patch(`businesses/${_id}`, updateBusiness)\r\n    .then(response => {\r\n      //Update the data in the parent component\r\n      this.props.updateData();\r\n      this.setState({\r\n        ...this.state,\r\n        successMessage: \"Save successfully!\",\r\n        errorMessage: \"\",\r\n        loading: false,\r\n        edited: false\r\n      });\r\n    })\r\n    .catch(error => {\r\n      this.setState({\r\n        ...this.state,\r\n        successMessage:\"\",\r\n        errorMessage: \"Cannot save the data!\",\r\n        loading: false,\r\n        edited: false\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let { business } = this.state;\r\n    this.setState({\r\n      ...this.state,\r\n      successMessage: \"\",\r\n      errorMessage: \"\",\r\n      loading: true,\r\n      edited: false\r\n    })\r\n    //Check _id propery to decide to create or update\r\n    if (!business._id) {\r\n      this.createBusinessAPI(business)\r\n    } else {\r\n      this.updateBusinessAPI(business)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { business, edited } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row className=\"\">\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Name:\"\r\n              name=\"name\"\r\n              value={business.name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              value={business.address}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Phone:\"\r\n              name=\"phone\"\r\n              value={business.phone}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <ProvinceDropdown\r\n              handleChange={this.handleChange}\r\n              province={business.province}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BusinessForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Row, TextInput, Select } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nimport ContactForm from \"../contact/ContactForm\";\r\nimport { ContactTable } from \"../contact/ContactTable\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\nimport ProvinceDropdown from \"../common/ProvinceDropdown\";\r\nimport BusinessForm from \"./BusinessForm\";\r\n\r\n\r\n\r\nclass BusinessModalDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edited: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      business: this.props.business\r\n    });\r\n    this.getBusinessDetail(this.props.business._id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.business._id !== this.props.business._id) {\r\n      this.getBusinessDetail(this.props.business._id);\r\n      this.setState({\r\n        business: this.props.business,\r\n        errorMessage: \"\",\r\n        successMessage: \"\",\r\n        edited: false\r\n      });\r\n    }\r\n  }\r\n\r\n  getBusinessDetail(id) {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true\r\n    });\r\n    API.get(`businesses/${id}`)\r\n      .then(response => {\r\n        if (response.data.business) {\r\n          this.setState({\r\n            ...this.state,\r\n            contacts: response.data.business.contacts,\r\n            province: response.data.business.province,\r\n            loading: false\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false,\r\n          errorMessage: \"Could not fetch the data\"\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChangeBusiness = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n    if (field === \"phone\") {\r\n      value = formatPhone(value);\r\n    }\r\n    let business = this.state.business;\r\n    business[field] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      business,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  updateBusiness = e => {\r\n    e.preventDefault();\r\n    const _id = this.state.business._id;\r\n    const business = {\r\n      name: this.state.business.name,\r\n      phone: this.state.business.phone,\r\n      address: this.state.business.address,\r\n      province: this.state.business.province\r\n    };\r\n    this.setState({\r\n      errorMessage: \"\",\r\n      successMessage: \"\",\r\n      loading: true,\r\n      edited: false\r\n    });\r\n\r\n    API.patch(`businesses/${_id}`, business)\r\n      .then(response => {\r\n        //Update the data in the parent component\r\n        this.props.updateData();\r\n        this.setState({\r\n          ...this.state,\r\n          successMessage: \"Save successfully!\",\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: \"Cannot save the data!\",\r\n          loading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  addMoreContactToTable = contact => {\r\n    let contacts = this.state.contacts;\r\n    contacts.push(contact);\r\n    this.setState({\r\n      ...this.state,\r\n      contacts\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const contacts = this.state.contacts || [];\r\n    if (!this.state.business) {\r\n      return <Loading />;\r\n    }\r\n    const { business } = this.state;\r\n    return (\r\n      <Modal\r\n        actions={[\r\n          <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n            Close\r\n          </Button>\r\n        ]}\r\n        open={true}\r\n        style={{ boder: \"none\" }}\r\n        bottomSheet={false}\r\n        fixedFooter={true}\r\n        header=\"Business Detail\"\r\n        id=\"modal1\"\r\n        required\r\n        options={{\r\n          dismissible: true,\r\n          endingTop: \"10%\",\r\n          inDuration: 250,\r\n          onCloseEnd: null,\r\n          onCloseStart: null,\r\n          onOpenEnd: null,\r\n          onOpenStart: null,\r\n          opacity: 0.5,\r\n          outDuration: 250,\r\n          preventScrolling: true,\r\n          startingTop: \"4%\"\r\n        }}\r\n      >\r\n        {!this.state.loading ? (\r\n          <div>\r\n\r\n            <BusinessForm business={business} updateData={this.props.updateData}/>\r\n\r\n\r\n            <Row className=\"animated fadeInUp\">\r\n              <h5>Contacts </h5>\r\n              <ContactForm\r\n                business={business}\r\n                addMoreContactToTable={this.addMoreContactToTable}\r\n              />\r\n            </Row>\r\n            <ContactTable contacts={contacts} business={business} />\r\n          </div>\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { provinces: state.provinces };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BusinessModalDetail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Row, TextInput } from \"react-materialize\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\nimport ProvinceDropdown from \"../common/ProvinceDropdown\";\r\nimport API from \"../../utils/API/API\";\r\nimport BusinessForm from './BusinessForm'\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CreateBusinessModal extends Component {\r\n  state = {\r\n    business: { name: \"\", address: \"\", phone: \"\", province: \"\" }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.business) {\r\n      this.setState({\r\n        business: this.props.business\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (field === \"phone\") {\r\n      value = formatPhone(value);\r\n    }\r\n\r\n    let business = this.state.business;\r\n    business[field] = value;\r\n    this.setState( business);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { business } = this.state;\r\n    if (!business._id) {\r\n      API.post(`businesses`, business)\r\n        .then(response => {\r\n          this.props.updateData();\r\n          this.props.closeCreateModal();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n\r\n      API.patch(`businesses/${business._id}`, business)\r\n      .then(response => {\r\n        //Update the data in the parent component\r\n        this.props.updateData();\r\n        this.setState({\r\n          ...this.state,\r\n          successMessage: \"Save successfully!\",\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: \"Cannot save the data!\",\r\n          loading: false\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { business } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          header=\"Create a new business\"\r\n          id=\"modal-1\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeCreateModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n          <BusinessForm updateData={this.props.updateData} closeCreateModal={this.props.closeCreateModal}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateBusinessModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Table,\r\n  TextInput,\r\n  Select,\r\n  Icon,\r\n  Button,\r\n  Pagination\r\n} from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport axios from \"axios\";\r\nimport { fetch_province, fetch_business } from \"../../redux/actions/index\";\r\nimport BusinessModalDetail from \"./BusinessModalDetail\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatPhone from \"../../utils/commons/FormatPhone\";\r\nimport CreateBusinessModal from \"./CreateBusinessModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { provinces: state.provinces };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addProvinceToRedux: provinces => dispatch(fetch_province(provinces)),\r\n    addBusinessesToRedux: businesses => dispatch(fetch_business(businesses))\r\n  };\r\n}\r\n\r\nclass Business extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchBy: {\r\n        name: \"\",\r\n        phone: \"\",\r\n        province: \"\"\r\n      },\r\n      provinces: [],\r\n      loading: true,\r\n      search: false,\r\n      openCreateModal: false,\r\n      currentPage: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  filterByField(searchText, field, array) {\r\n    let results = array.filter(item =>\r\n      item[field]\r\n        .replace(/\\s/g, \"\")\r\n        .toLowerCase()\r\n        .includes(searchText.replace(/\\s/g, \"\").toLowerCase())\r\n    );\r\n    return results;\r\n  }\r\n\r\n  getDataForPagination = pageNumber => {\r\n    API.get(`businesses?pageNo=${pageNumber}`)\r\n      .then(response => {\r\n        this.setState({\r\n          ...this.state,\r\n          businesses: response.data.businesses,\r\n          businessCount: response.data.count\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getData = () => {\r\n    const getProvinceRequest = API.get(\"provinces\");\r\n    const getBusinessRequest = API.get(\"businesses?pageNo=1\");\r\n\r\n    //This API get all businesses and add to redux\r\n    // API(`/search/businesses`)\r\n    //   .then(response => {\r\n    //     this.props.addBusinessesToRedux(response.data);\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   });\r\n\r\n    //APT get all businesses with page Number and provinces\r\n    axios\r\n      .all([getProvinceRequest, getBusinessRequest])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          const provinces = responses[0].data;\r\n          const businesses = responses[1].data.businesses;\r\n          const businessCount = responses[1].data.count;\r\n\r\n          this.setState({\r\n            provinces,\r\n            businesses,\r\n            businessCount,\r\n            loading: false\r\n          });\r\n          //Save data in redux for later usage\r\n          this.props.addProvinceToRedux(provinces);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const searchBy = { ...this.state.searchBy };\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n    if (field === \"phone\") {\r\n      value = formatPhone(value);\r\n    }\r\n    searchBy[field] = value;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      searchBy\r\n    });\r\n  };\r\n\r\n  getProvinceName = _id => {\r\n    const { provinces } = this.state;\r\n    const foundProvince = provinces.filter(province => province._id === _id);\r\n    return foundProvince[0].name;\r\n  };\r\n\r\n  handleOpenModal = business => () => {\r\n    this.setState({\r\n      business\r\n    });\r\n  };\r\n\r\n  //Client side search only\r\n  //this function get all businesses from server by calling api /search/businesses\r\n  //then filter the options on Client side\r\n  handleFilter = e => {\r\n    e.preventDefault();\r\n    let businesses = [];\r\n    API.get(\"/search/businesses\")\r\n      .then(response => {\r\n        businesses = response.data;\r\n\r\n        const fields = Object.keys(this.state.searchBy);\r\n        fields.forEach(field => {\r\n          businesses = this.filterByField(\r\n            this.state.searchBy[field],\r\n            field,\r\n            businesses\r\n          );\r\n        });\r\n\r\n        this.setState({\r\n          ...this.state,\r\n          search: true,\r\n          results: businesses\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  handleResetFilter = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      ...this.state,\r\n      searchBy: {\r\n        name: \"\",\r\n        phone: \"\",\r\n        province: \"\"\r\n      },\r\n      search: false\r\n    });\r\n  };\r\n\r\n  handleCreateModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateModal = () => {\r\n    this.setState({\r\n      openCreateModal: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, phone, province } = this.state.searchBy;\r\n    const {\r\n      loading,\r\n      provinces,\r\n      business,\r\n      search,\r\n      openCreateModal,\r\n      businessCount,\r\n      currentPage\r\n    } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n\r\n    //Get the set of search otherwise display all businesses\r\n    let businesses = search ? this.state.results : this.state.businesses;\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>\r\n              Businesses{\" \"}\r\n              <Button\r\n                node=\"button\"\r\n                type=\"submit\"\r\n                waves=\"light\"\r\n                className=\"gradient-btn btn-red\"\r\n                onClick={this.handleCreateModel}\r\n              >\r\n                Add\r\n                <Icon left>add_box</Icon>\r\n              </Button>\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <form>\r\n            <h6>Filter by</h6>\r\n            <Col s={12} m={12} l={12} xl={12}>\r\n              <TextInput\r\n                s={12}\r\n                l={4}\r\n                m={4}\r\n                xl={4}\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleInputChange}\r\n              />\r\n\r\n              <TextInput\r\n                s={12}\r\n                l={3}\r\n                m={3}\r\n                xl={3}\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                onChange={this.handleInputChange}\r\n              />\r\n\r\n              <Select\r\n                onChange={this.handleInputChange}\r\n                options={{\r\n                  classes: \"\",\r\n                  dropdownOptions: {\r\n                    alignment: \"left\",\r\n                    autoTrigger: true,\r\n                    closeOnClick: true,\r\n                    constrainWidth: true,\r\n                    container: null,\r\n                    coverTrigger: true,\r\n                    hover: false,\r\n                    inDuration: 150,\r\n                    onCloseEnd: null,\r\n                    onCloseStart: null,\r\n                    onOpenEnd: null,\r\n                    onOpenStart: null,\r\n                    outDuration: 250\r\n                  }\r\n                }}\r\n                value={province}\r\n                name=\"province\"\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Province\r\n                </option>\r\n                {provinces.map(province => {\r\n                  return (\r\n                    <option\r\n                      className=\"black-text\"\r\n                      key={province._id}\r\n                      value={province._id}\r\n                    >\r\n                      {province.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Select>\r\n              <Button\r\n                className=\"gradient-btn btn-primary\"\r\n                node=\"button\"\r\n                onClick={this.handleFilter}\r\n                style={{\r\n                  marginRight: \"5px\",\r\n                  bottom: \"-20px\",\r\n                  marginBottom: \"20px\"\r\n                }}\r\n                waves=\"light\"\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button\r\n                node=\"button\"\r\n                className=\"gradient-btn btn-white\"\r\n                onClick={this.handleResetFilter}\r\n                style={{\r\n                  marginRight: \"5px\",\r\n                  bottom: \"-20px\",\r\n                  marginBottom: \"20px\"\r\n                }}\r\n                waves=\"light\"\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </form>\r\n        </Row>\r\n        <Row\r\n          className=\"animated fadeIn radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Col s={12} m={12} l={12} xl={12} style={{ marginTop: \"50px\" }}>\r\n            <Row style={{ textAlign: \"center\" }}>\r\n              <Pagination\r\n                activePage={currentPage}\r\n                items={businessCount / 5 + 1}\r\n                leftBtn={<Icon>chevron_left</Icon>}\r\n                maxButtons={3}\r\n                rightBtn={<Icon>chevron_right</Icon>}\r\n                onSelect={pageNumber => {\r\n                  this.getDataForPagination(pageNumber);\r\n                }}\r\n              />\r\n            </Row>\r\n            <Table striped={true} responsive={true}>\r\n              <thead>\r\n                <tr>\r\n                  <th data-field=\"id\">Name</th>\r\n                  <th data-field=\"price\">Phone</th>\r\n                  <th data-field=\"price\">Province</th>\r\n                  <th data-field=\"price\">Quick View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {businesses.length > 0 ? (\r\n                  businesses.map(business => {\r\n                    return (\r\n                      <tr key={business._id}>\r\n                        <td>\r\n                          <Link to={\"/businesses/\" + business._id}>\r\n                            {business.name}\r\n                          </Link>\r\n                        </td>\r\n                        <td>{business.phone}</td>\r\n                        <td>{this.getProvinceName(business.province)}</td>\r\n                        <td>\r\n                          <a\r\n                            onClick={this.handleOpenModal(business)}\r\n                            className=\"modal-trigger\"\r\n                            href=\"#modal1\"\r\n                          >\r\n                            <Icon>launch</Icon>\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td>There is no business found!</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div>\r\n          {business && (\r\n            <BusinessModalDetail\r\n              business={business}\r\n              updateData={this.getData}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          {openCreateModal && (\r\n            <CreateBusinessModal\r\n              closeCreateModal={this.closeCreateModal}\r\n              updateData={this.getData}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Business);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Icon, Button, Col, Row, Table } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    contacts: [],\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    API.get(`contacts`)\r\n      .then(response => {\r\n        this.setState({\r\n          contacts: response.data,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { contacts, loading } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <Row>\r\n          <Col>\r\n            <h5>Contact List</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"animated fadeInDown radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Table striped={true} responsive={true}>\r\n            <thead>\r\n              <tr>\r\n                <th data-field=\"name\">Name</th>\r\n                <th data-field=\"phone\">Phone</th>\r\n                <th data-field=\"email\">Email</th>\r\n                <th data-field=\"business\">Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.map(contact => {\r\n                return (\r\n                  <tr key={contact._id}>\r\n                    <td>{contact.name}</td>\r\n                    <td>{contact.phone}</td>\r\n                    <td>{contact.email}</td>\r\n\r\n                    <td>\r\n                      <a className=\"modal-trigger\" href=\"#modal1\">\r\n                        <Icon>launch</Icon>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Button,\r\n  Textarea,\r\n  DatePicker\r\n} from \"react-materialize\";\r\n// import PickDate from '../common/DatePicker'\r\nimport StatusDropdown from \"../common/StatusDropdown\";\r\nimport CategoryDropdown from \"../common/CategoryDropdown\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatDate from \"../../utils/commons/FormatDate\"\r\nimport Loading from \"../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectForm extends Component {\r\n  state = {\r\n    // project: {\r\n    //   business: \"\",\r\n    //   name: \"\",\r\n    //   description: \"\",\r\n    //   price: \"\",\r\n    //   googleLink: \"\",\r\n    //   startDate: \"\",\r\n    //   completedDate: \"\",\r\n    //   status: \"\",\r\n    //   category: \"\"\r\n    // },\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleChangeProject = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let project = this.state.project;\r\n    project[field] = value;\r\n    this.setState({\r\n      project,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let  project = {\r\n      business: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      googleLink: \"\",\r\n      startDate: \"\",\r\n      completedDate: \"\",\r\n      status: \"\",\r\n      category: \"\"\r\n    }\r\n    if (this.props.business) {\r\n\r\n      project.business = this.props.business._id;\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        project\r\n      });\r\n    }\r\n    if (this.props.project) {\r\n      project = this.props.project;\r\n      project.price = project.price.$numberDecimal;\r\n      this.setState({\r\n        ...this.state,\r\n        project\r\n      });\r\n    }\r\n  }\r\n\r\n  createProject = project => {\r\n    API.post(\"/projects\", project).then(response => {\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"Saved successfully!\",\r\n        errorMessage: \"\"\r\n      });\r\n      this.props.getBusinessData();\r\n    });\r\n  };\r\n\r\n  updateProject = project => {\r\n    API.patch(`/projects/${project._id}`, project).then(response => {\r\n\r\n      this.setState({\r\n        edited: false,\r\n        successMessage: \"Saved successfully!\",\r\n        errorMessage: \"\"\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const project = this.state.project\r\n    if (!project._id) {\r\n      this.createProject(project)\r\n    } else {\r\n      this.updateProject(project)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { edited, project } = this.state;\r\n\r\n    if(!project){\r\n      return <Loading/>\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row className=\"\">\r\n            <TextInput\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Name:\"\r\n              name=\"name\"\r\n              value={project.name}\r\n              onChange={this.handleChangeProject}\r\n              required\r\n            />\r\n\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={project.description}\r\n              onChange={this.handleChangeProject}\r\n              data-length={200}\r\n            />\r\n            <StatusDropdown\r\n              handleChangeProject={this.handleChangeProject}\r\n              status={project.status}\r\n            />\r\n            <CategoryDropdown\r\n              handleChangeProject={this.handleChangeProject}\r\n              category={project.category}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price:\"\r\n              name=\"price\"\r\n              value={project.price}\r\n              onChange={this.handleChangeProject}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Google Link:\"\r\n              name=\"googleLink\"\r\n              value={project.googleLink}\r\n              onChange={this.handleChangeProject}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate:  new Date(formatDate(project.startDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              required\r\n              value={formatDate(project.startDate)}\r\n              onChange={value => {\r\n                let project = Object.assign(this.state.project, {startDate: value})\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  project\r\n                });\r\n              }}\r\n            />\r\n\r\n            {/* <TextInput type='date' className='datepicker'  /> */}\r\n\r\n            <DatePicker\r\n              name=\"completedDate\"\r\n              label=\"Completed Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate:  new Date(formatDate(project.completedDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(project.completedDate)}\r\n              onChange={value => {\r\n                let project = Object.assign(this.state.project, {completedDate: value})\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  project\r\n                });\r\n              }}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Modal, Button} from 'react-materialize'\r\n\r\nimport ProjectForm from './ProjectForm'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nclass CreateProjectModal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Modal\r\n              actions={[\r\n                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n                  Close\r\n                </Button>\r\n              ]}\r\n              bottomSheet={false}\r\n              fixedFooter={false}\r\n              header=\"Create a new project\"\r\n              id=\"modal-1\"\r\n              open={true}\r\n              options={{\r\n                dismissible: true,\r\n                endingTop: \"10%\",\r\n                inDuration: 250,\r\n                onCloseEnd: this.props.closeCreateProjectModal,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                opacity: 0.5,\r\n                outDuration: 250,\r\n                preventScrolling: true,\r\n                startingTop: \"4%\"\r\n              }}\r\n            >\r\n              <ProjectForm business={this.props.business} getBusinessData={this.props.getBusinessData}/>\r\n            </Modal>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(CreateProjectModal);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { Row, Button, Icon } from \"react-materialize\";\r\nimport CreateProjectModal from \"../projects/CreateProjectModal\";\r\nimport ProjectTable from \"../projects/ProjectTable\";\r\nimport axios from \"axios\";\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {};\r\n}\r\n\r\nclass BusinessDetailPage extends Component {\r\n  state = {\r\n    loading: true,\r\n    errorMessage: \"\",\r\n    business: {},\r\n    openCreateProjectModal: false,\r\n    projects: []\r\n  };\r\n\r\n  updateData = () => {};\r\n\r\n  getBusinessData = () => {\r\n    const businessId = this.props.match.params.id;\r\n\r\n    const getBusinessRequest = API.get(`/businesses/${businessId}`);\r\n    const getProjectsRequest = API.get(`/projects/business/${businessId}`);\r\n\r\n    axios\r\n      .all([getBusinessRequest, getProjectsRequest])\r\n      .then(\r\n        axios.spread((...responses) => {\r\n          const business = responses[0].data.business;\r\n          const projects = responses[1].data;\r\n          this.setState({\r\n            business,\r\n            projects,\r\n            loading: false\r\n          });\r\n        })\r\n      )\r\n      .catch(error => {\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.id) {\r\n      this.getBusinessData();\r\n    }\r\n  }\r\n\r\n  handleOpenCreateProjectModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateProjectModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateProjectModal = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateProjectModal: false\r\n    });\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    const { business, openCreateProjectModal, projects } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-white\"\r\n            onClick={this.handleGoBack}\r\n          >\r\n            Go Back\r\n            <Icon left>arrow_back</Icon>\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <h5>\r\n            {business.name}{\" \"}\r\n            <Button\r\n              node=\"button\"\r\n              type=\"submit\"\r\n              waves=\"light\"\r\n              className=\"gradient-btn btn-red\"\r\n              onClick={this.handleOpenCreateProjectModel}\r\n            >\r\n              Create New Project\r\n              <Icon left>add_box</Icon>\r\n            </Button>\r\n          </h5>\r\n        </Row>\r\n\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          {projects && <ProjectTable projects={projects} />}\r\n        </Row>\r\n\r\n        {openCreateProjectModal && (\r\n          <CreateProjectModal\r\n            closeCreateProjectModal={this.closeCreateProjectModal}\r\n            business={business}\r\n            getBusinessData={this.getBusinessData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BusinessDetailPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  TextInput,\r\n  Textarea,\r\n  Button,\r\n  DatePicker\r\n} from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport formatDate from \"../../utils/commons/FormatDate\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass AccountForm extends Component {\r\n  state = {\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.account) {\r\n      let account = this.props.account;\r\n      if (account.price.$numberDecimal) {\r\n        account.price = account.price.$numberDecimal;\r\n      }\r\n\r\n      this.setState({\r\n        ...this.state,\r\n        account\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeAccount = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    let account = this.state.account;\r\n    account[field] = value;\r\n    this.setState({\r\n      account,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  updateAccount = account => {\r\n    API.patch(`/accounts/${account._id}`, account)\r\n      .then(response => {\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  createAccount = account => {\r\n    API.post(`/accounts`, account)\r\n      .then(response => {\r\n        let account = {\r\n          domain: \"\",\r\n          username: \"\",\r\n          password: \"\",\r\n          startDate: \"\",\r\n          expireDate: \"\",\r\n          price: \"\",\r\n          description: \"\",\r\n          project: this.props.account.project\r\n        };\r\n        this.setState({\r\n          successMessage: \"Saved Successfully\",\r\n          errorMessage: \"\",\r\n          edited: false,\r\n          account\r\n        });\r\n        this.props.getProjectDetail();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"Some errors have been occured!\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { account } = this.state;\r\n    if (account._id) {\r\n      this.updateAccount(account);\r\n    } else {\r\n      this.createAccount(account);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { account, edited } = this.state;\r\n    if (!account) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Domain:\"\r\n              name=\"domain\"\r\n              value={account.domain}\r\n              onChange={this.handleChangeAccount}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Username:\"\r\n              name=\"username\"\r\n              value={account.username}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Password:\"\r\n              name=\"password\"\r\n              value={account.password}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"startDate\"\r\n              label=\"Start Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.startDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.startDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  startDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              name=\"expireDate\"\r\n              label=\"Expire Date:\"\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              options={{\r\n                format: \"mmm dd, yyyy\",\r\n                defaultDate: new Date(formatDate(account.expireDate)),\r\n                setDefaultDate: true\r\n              }}\r\n              value={formatDate(account.expireDate)}\r\n              onChange={value => {\r\n                let account = Object.assign(this.state.account, {\r\n                  expireDate: value\r\n                });\r\n                this.setState({\r\n                  ...this.state,\r\n                  edited: true,\r\n                  account\r\n                });\r\n              }}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Price: (per year)\"\r\n              name=\"price\"\r\n              value={account.price}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n            <Textarea\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              value={account.description}\r\n              onChange={this.handleChangeAccount}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AccountForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Icon } from \"react-materialize\";\r\nimport AccountForm from \"./AccountForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CreateAccountModal extends Component {\r\n  render() {\r\n    const account = {\r\n      domain: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      startDate: \"\",\r\n      expireDate: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n      project: this.props.projectId\r\n    };\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={true}\r\n          header=\"Add An Account\"\r\n          id=\"modal-0\"\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n          trigger={\r\n            <Button node=\"button\" className=\"gradient-btn btn-red\">\r\n              <Icon>add_box</Icon>\r\n            </Button>\r\n          }\r\n        >\r\n          <AccountForm account={account} getProjectDetail={this.props.getProjectDetail}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateAccountModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Row} from \"react-materialize\"\r\nimport AccountForm from \"../account/AccountForm\"\r\nimport CreateAccountModal from \"../account/CreateAccountModal\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectAccounts extends Component {\r\n\r\n  render() {\r\n    const {accounts} = this.props\r\n    return (\r\n      <div>\r\n         <CreateAccountModal projectId={this.props.projectId} getProjectDetail={this.props.getProjectDetail}/>\r\n          {accounts.map(account => {\r\n            return <AccountForm account={account} key={account._id}/>\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectAccounts);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Icon } from \"react-materialize\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadReview extends Component {\r\n  render() {\r\n    const { url } = this.props;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          header=\"Upload File\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeUploadReviewModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n          <img src={url} style={{ height: \"100%\", width: \"100%\" }} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadReview);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Table, Icon } from \"react-materialize\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadReview from \"./UploadReview\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadTable extends Component {\r\n  state = {\r\n    uploads: [],\r\n    url:\"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.uploads) {\r\n      this.setState({\r\n        uploads: this.props.uploads\r\n      });\r\n    }\r\n  }\r\n\r\n  openUploadReviewModal = (url) => () => {\r\n    this.setState({\r\n      url\r\n    })\r\n  }\r\n\r\n  closeUploadReviewModal = (e) => {\r\n    this.setState({\r\n      url: \"\"\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.uploads.length !== this.props.uploads) {\r\n      this.setState({\r\n        uploads: nextProps.uploads\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { uploads, url } = this.state;\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Table striped={true} responsive={true}>\r\n            <thead>\r\n              <tr>\r\n                <th data-field=\"id\">Title</th>\r\n                <th data-field=\"name\">Description</th>\r\n                <th data-field=\"price\">Review</th>\r\n                <th data-field=\"price\">Download</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {uploads.map(upload => {\r\n                return (\r\n                  <tr key={upload._id}>\r\n                    <td>{upload.title}</td>\r\n                    <td>{upload.description}</td>\r\n                    {/* <td><img src={upload.url} style={{height: \"100px\"}} /></td> */}\r\n                    <td>\r\n                      <a href=\"#\" onClick={this.openUploadReviewModal(upload.url)}>\r\n                        <Icon>launch</Icon>\r\n                      </a>\r\n                    </td>\r\n                    <td>\r\n                      <a href={upload.url}>\r\n                        <Icon>cloud_download</Icon>\r\n                      </a>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n\r\n        {url&& <UploadReview url={url} closeUploadReviewModal={this.closeUploadReviewModal}/>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, TextInput, Button } from \"react-materialize\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadForm extends Component {\r\n  state = {\r\n    upload: {\r\n      title: \"\",\r\n      description: \"\",\r\n      file: null\r\n    },\r\n    edited: false,\r\n    loading: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    const { upload } = this.state;\r\n    const { projectId } = this.props;\r\n    let data = new FormData();\r\n    data.append(\"file\", upload.file);\r\n    data.append(\"title\", upload.title);\r\n    data.append(\"description\", upload.description);\r\n    API.post(`/uploads/${projectId}`, data)\r\n      .then(response => {\r\n        this.setState({\r\n          successMessage: \"File Upload Successfully\",\r\n          errorMessage: \"\",\r\n          loading: false\r\n        });\r\n        this.props.getProjectDetail();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          loading: false,\r\n          errorMessage: \"Errors have been occurred!\"\r\n        });\r\n      });\r\n  };\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    let upload = this.state.upload;\r\n    if (field === \"file\") {\r\n      upload.file = e.target.files[0];\r\n    } else {\r\n      upload[field] = e.target.value;\r\n    }\r\n    this.setState({\r\n      upload,\r\n      edited: true\r\n    });\r\n  };\r\n  render() {\r\n    const { edited, loading } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Title:\"\r\n              name=\"title\"\r\n              //   value={account.domain}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={6}\r\n              m={6}\r\n              xl={6}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              //   value={account.domain}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              l={12}\r\n              m={12}\r\n              xl={12}\r\n              label=\"Select File\"\r\n              type=\"file\"\r\n              name=\"file\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-primary\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        {loading && (\r\n          <Row>\r\n            <Loading />\r\n          </Row>\r\n        )}\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button, Icon } from \"react-materialize\";\r\nimport UploadForm from \"./UploadForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UploadModal extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={false}\r\n          header=\"Upload File\"\r\n          id=\"modal-0\"\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: null,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n          trigger={\r\n            <Button node=\"button\" className=\"gradient-btn btn-red\">\r\n              <Icon>add_box</Icon>\r\n            </Button>\r\n          }\r\n        >\r\n          <UploadForm projectId={this.props.projectId} getProjectDetail={this.props.getProjectDetail}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UploadModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport Loading from \"../loading/Loading\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport { Row, Button, Icon, Tabs, Tab } from \"react-materialize\";\r\nimport ProjectAccounts from \"./ProjectAccounts\";\r\nimport { ContactTable } from \"../contact/ContactTable\";\r\nimport ContactForm from \"../contact/ContactForm\";\r\nimport UploadTable from \"../upload/UploadTable\";\r\nimport UploadModal from \"../upload/UploadModal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BusinessForm from \"../business/BusinessForm\";\r\nimport TextInput from \"react-materialize/lib/TextInput\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectDetailPage extends Component {\r\n  state = {\r\n    loading: true,\r\n    project: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProjectDetail();\r\n  }\r\n\r\n  getProjectDetail = () => {\r\n    const projectId = this.props.match.params.id;\r\n    //get the project detail first\r\n    API.get(`/projects/${projectId}`)\r\n      .then(response => {\r\n        const project = response.data;\r\n        const businessId = response.data.business._id;\r\n        // then get the business contacts\r\n        API.get(`/businesses/${businessId}`).then(response2 => {\r\n          const business = response2.data.business;\r\n          const contacts = business.contacts;\r\n          this.setState({\r\n            contacts,\r\n            business,\r\n            project,\r\n            loading: false\r\n          });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          loading: true\r\n        });\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  handleGoBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  addMoreContactToTable = contact => {\r\n    let contacts = this.state.contacts;\r\n    if (!contacts.some(e => e._id == contact._id)) {\r\n      contacts.push(contact);\r\n      this.setState({\r\n        ...this.state,\r\n        contacts\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { project, loading, business, contacts } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-white\"\r\n            onClick={this.handleGoBack}\r\n          >\r\n            Go Back\r\n            <Icon left>arrow_back</Icon>\r\n          </Button>\r\n        </Row>\r\n        {/* <h5>Project Detail</h5> */}\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Row>\r\n            <h4>Project Details </h4>\r\n            <Link to={`/businesses/` + project.business._id}>\r\n              View all projects of this business\r\n            </Link>\r\n          </Row>\r\n\r\n          <Tabs className=\"tab-demo z-depth-1 tabs-fixed-width\">\r\n            <Tab\r\n              active\r\n              options={{\r\n                duration: 300,\r\n                onShow: null,\r\n                responsiveThreshold: Infinity,\r\n                swipeable: false\r\n              }}\r\n              title=\"General Info\"\r\n            >\r\n              <h5>General Info</h5>\r\n              <ProjectForm project={project} />\r\n            </Tab>\r\n            <Tab\r\n              options={{\r\n                duration: 300,\r\n                onShow: null,\r\n                responsiveThreshold: Infinity,\r\n                swipeable: false\r\n              }}\r\n              title=\"Accounts\"\r\n            >\r\n              <Row>\r\n                <h5>Accounts </h5>\r\n              </Row>\r\n\r\n              <ProjectAccounts\r\n                accounts={project.accounts}\r\n                projectId={project._id}\r\n                getProjectDetail={this.getProjectDetail}\r\n              />\r\n            </Tab>\r\n            <Tab\r\n              options={{\r\n                duration: 300,\r\n                onShow: null,\r\n                responsiveThreshold: Infinity,\r\n                swipeable: false\r\n              }}\r\n              title=\"Contacts\"\r\n            >\r\n              <Row>\r\n                <h5>Contacts </h5>\r\n                <ContactForm\r\n                  business={business}\r\n                  addMoreContactToTable={this.addMoreContactToTable}\r\n                />\r\n                <ContactTable contacts={contacts} business={business} />\r\n              </Row>\r\n            </Tab>\r\n\r\n            <Tab\r\n              options={{\r\n                duration: 300,\r\n                onShow: null,\r\n                responsiveThreshold: Infinity,\r\n                swipeable: false\r\n              }}\r\n              title=\"Business\"\r\n            >\r\n              <h5>Business Detail:</h5>\r\n              <BusinessForm\r\n                business={business}\r\n                updateData={this.getProjectDetail}\r\n              />\r\n            </Tab>\r\n            <Tab\r\n              options={{\r\n                duration: 300,\r\n                onShow: null,\r\n                responsiveThreshold: Infinity,\r\n                swipeable: false\r\n              }}\r\n              title=\"Uploads\"\r\n            >\r\n              <h5>Uploads</h5>\r\n              <UploadModal\r\n                projectId={project._id}\r\n                getProjectDetail={this.getProjectDetail}\r\n              />\r\n              <UploadTable uploads={project.uploads} />\r\n            </Tab>\r\n          </Tabs>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectDetailPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../utils/API/API\";\r\nimport {Row, Button, Icon} from \"react-materialize\"\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ViewUpload extends Component {\r\n  state = {\r\n    url: \"\"\r\n  };\r\n  componentDidMount() {\r\n    const uploadId = this.props.match.params.id;\r\n    API.get(`/individual-upload/${uploadId}`)\r\n      .then(response => {\r\n        this.setState({\r\n          url: response.data.url\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleGoBack = (e) => {\r\n      this.props.history.goBack()\r\n  }\r\n  render() {\r\n    const { url } = this.state;\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}>\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-white\"\r\n            onClick={this.handleGoBack}\r\n          >\r\n            Go Back\r\n            <Icon left>arrow_back</Icon>\r\n          </Button>\r\n        </Row>\r\n        <img src={url} style={{ height: \"100%\", width: \"100%\" }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ViewUpload);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Row, Select, Button } from \"react-materialize\";\r\nimport phoneFormat from \"../../../utils/commons/FormatPhone\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UserForm extends Component {\r\n  state = {\r\n    user: {\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      role: \"user\",\r\n      active: \"true\"\r\n    },\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { user } = this.props;\r\n    if (user) {\r\n      user.active = user.active.toString();\r\n      this.setState({\r\n        user\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    let value = e.target.value;\r\n    if (field === \"phone\") {\r\n      value = phoneFormat(value);\r\n    }\r\n    let user = this.state.user;\r\n    user[field] = value;\r\n    this.setState({\r\n      user,\r\n      edited: true,\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    const { user } = this.state;\r\n    user._id? this.updateUserProfile(user) : this.createNewUser(user)\r\n  };\r\n\r\n  createNewUser = (user) => {\r\n    API.post(`/users`, user)\r\n    .then(response => {\r\n      this.setState({\r\n        errorMessage: \"\",\r\n        successMessage: \"User has been created!\",\r\n        loading: false,\r\n        edited: false\r\n      });\r\n      this.props.updateData();\r\n    })\r\n    .catch(error => {\r\n      this.setState({\r\n        successMessage: \"\",\r\n        errorMessage: \"An error has been occurred!\",\r\n        loading: false,\r\n        edited: false\r\n      });\r\n    });\r\n  }\r\n\r\n  updateUserProfile = (user) => {\r\n      API.patch(`/users`, user).then(response=> {\r\n        this.setState({\r\n            errorMessage: \"\",\r\n            successMessage: \"User has been updated!\",\r\n            loading: false,\r\n            edited: false\r\n          });\r\n      }).catch(error => {\r\n        this.setState({\r\n            successMessage: \"\",\r\n            errorMessage: \"An error has been occurred!\",\r\n            loading: false,\r\n            edited: false\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { user, edited, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              onChange={this.handleChange}\r\n              value={user.name}\r\n              required\r\n            />\r\n            <TextInput\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              validate\r\n              email\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              onChange={this.handleChange}\r\n              value={user.email}\r\n              required\r\n            />\r\n            <TextInput\r\n              label=\"Phone\"\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              name=\"phone\"\r\n              onChange={this.handleChange}\r\n              value={user.phone}\r\n              required\r\n            />\r\n            <Select\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Role\"\r\n              name=\"role\"\r\n              onChange={this.handleChange}\r\n              options={{\r\n                classes: \"\",\r\n                dropdownOptions: {\r\n                  alignment: \"left\",\r\n                  autoTrigger: true,\r\n                  closeOnClick: true,\r\n                  constrainWidth: true,\r\n                  container: null,\r\n                  coverTrigger: true,\r\n                  hover: false,\r\n                  inDuration: 150,\r\n                  onCloseEnd: null,\r\n                  onCloseStart: null,\r\n                  onOpenEnd: null,\r\n                  onOpenStart: null,\r\n                  outDuration: 250\r\n                }\r\n              }}\r\n              value={user.role}\r\n              required\r\n            >\r\n              <option value=\"user\">User</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </Select>\r\n\r\n            <Select\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Active\"\r\n              name=\"active\"\r\n              onChange={this.handleChange}\r\n              options={{\r\n                classes: \"\",\r\n                dropdownOptions: {\r\n                  alignment: \"left\",\r\n                  autoTrigger: true,\r\n                  closeOnClick: true,\r\n                  constrainWidth: true,\r\n                  container: null,\r\n                  coverTrigger: true,\r\n                  hover: false,\r\n                  inDuration: 150,\r\n                  onCloseEnd: null,\r\n                  onCloseStart: null,\r\n                  onOpenEnd: null,\r\n                  onOpenStart: null,\r\n                  outDuration: 250\r\n                }\r\n              }}\r\n              value={user.active}\r\n              required\r\n            >\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </Select>\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              node=\"button\"\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n              waves=\"green\"\r\n              disabled={!edited}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>{loading && <Loading />}</Row>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Modal, Button} from \"react-materialize\"\r\nimport UserForm from \"./UserForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CreateNewUserModal extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter\r\n          header=\"Create New User\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd:  this.props.closeCreateModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n       <UserForm updateData={this.props.updateData} user={this.props.user}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateNewUserModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Icon, Button, Row } from \"react-materialize\";\r\nimport CreateNewUserModal from \"./CreateNewUserModal\";\r\nimport API from \"../../../utils/API/API\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass UserTable extends Component {\r\n  state = {\r\n    openModal: false,\r\n    loading: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  handleOpenModel = user => () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openModal: true,\r\n      user\r\n    });\r\n  };\r\n\r\n  handleResetPassword = user => () => {\r\n    if (window.confirm(`Reset Password for ${user.name}?`)) {\r\n      API.patch(\"/users/resetpassword\", { userId: user._id })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.setState({\r\n            successMessage: \"Password reset!\",\r\n            errorMessage: \"\"\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            successMessage: \"\",\r\n            errorMessage: \"Cannot Reset Password\"\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openModal: false\r\n    });\r\n  };\r\n  displayUser = () => {\r\n    const { users } = this.props;\r\n\r\n    return users.map(user => {\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.role}</td>\r\n          <td>\r\n            {user.active.toString() === \"true\" ? (\r\n              <span className=\"dot active\"></span>\r\n            ) : (\r\n              <span className=\"dot inactive\"></span>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" onClick={this.handleOpenModel(user)}>\r\n              <Icon>edit</Icon>\r\n            </a>\r\n          </td>\r\n          <td>\r\n            <Button\r\n              className=\"gradient-btn btn-green\"\r\n              onClick={this.handleResetPassword(user)}\r\n            >\r\n              <Icon>vpn_key</Icon>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { loading, openModal, user } = this.state;\r\n    return (\r\n      <div>\r\n        <Table hoverable={true} responsive={true}>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"name\">Name</th>\r\n              <th data-field=\"email\">Email</th>\r\n              <th data-field=\"role\">Role</th>\r\n              <th data-field=\"active\">Active</th>\r\n              <th data-field=\"edit\">Edit</th>\r\n              <th data-field=\"edit\">Reset Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.displayUser()}</tbody>\r\n        </Table>\r\n        {openModal && (\r\n          <CreateNewUserModal closeCreateModal={this.closeModal} user={user} />\r\n        )}\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../../utils/API/API\";\r\nimport UserTable from \"./UserTable\";\r\nimport { Row, Button, Icon } from \"react-materialize\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport Modal from \"react-materialize/lib/Modal\";\r\nimport CreateNewUserModal from \"./CreateNewUserModal\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass User extends Component {\r\n  state = {\r\n    users: [],\r\n    loading: true,\r\n    openCreateModal: false\r\n  };\r\n\r\n  handleCreateModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateModal = () => {\r\n    this.setState({\r\n      openCreateModal: false\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = () => {\r\n    API.get(`/admin/users`)\r\n      .then(response => {\r\n        this.setState({\r\n          users: response.data,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          loading: true\r\n        });\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n  render() {\r\n    const { users, loading, openCreateModal } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <h5>\r\n          <Icon>group</Icon> Users{\" \"}\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-red\"\r\n            onClick={this.handleCreateModel}\r\n          >\r\n            Add\r\n            <Icon left>add_box</Icon>\r\n          </Button>\r\n        </h5>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <UserTable users={users} />\r\n        </Row>\r\n        {openCreateModal && (\r\n          <CreateNewUserModal closeCreateModal={this.closeCreateModal} updateData={this.getUsers} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Row } from \"react-materialize\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass NotFound extends Component {\r\n  goHome = e => {\r\n    this.props.history.push(\"/projects\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <section className=\"page_404 radius-corner\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"s12 \">\r\n                <div className=\"s10 col-sm-offset-1  text-center\">\r\n                  <div className=\"four_zero_four_bg\">\r\n                    <h1 className=\"text-center \">404</h1>\r\n                  </div>\r\n\r\n                  <div className=\"contant_box_404\">\r\n                    <h3 className=\"h2\">Look like you're lost</h3>\r\n\r\n                    <h6>The page you are looking for not avaible!</h6>\r\n\r\n                    <Button\r\n                      onClick={this.goHome}\r\n                      className=\"gradient-btn btn-red\"\r\n                    >\r\n                      Go Home\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotFound);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Chip, Icon, Row, Table, Button } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ContributorForm extends Component {\r\n  state = {\r\n    contributors: [],\r\n    users: [],\r\n    project: {},\r\n    edited: false,\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  componentDidMount() {\r\n    let { contributors, users, project } = this.props;\r\n    this.setState({\r\n      contributors,\r\n      users,\r\n      project\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.contributors !== this.props.contributor) {\r\n      this.setState({\r\n        contributors: nextProps.contributors,\r\n        users: nextProps.users,\r\n        project: nextProps.project\r\n      });\r\n    }\r\n  }\r\n  displayContributor = () => {\r\n    const { contributors } = this.state;\r\n    const data = [];\r\n    contributors.forEach(contributor => {\r\n      const name = contributor.name;\r\n      const userId = contributor._id;\r\n      data.push({ tag: name, userId });\r\n    });\r\n    return (\r\n      <Chip\r\n        close={true}\r\n        closeIcon={<Icon className=\"close\">close</Icon>}\r\n        options={{\r\n          data: data,\r\n          placeholder: \"Contributors\",\r\n          onChipDelete: this.removeContributor(data)\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  removeContributor = newContributorData => () => {\r\n    let newContributors = [];\r\n    newContributorData.forEach(contributor => {\r\n      newContributors.push(contributor.userId);\r\n    });\r\n    let currentContributors = this.state.contributors;\r\n    currentContributors = currentContributors.filter(contributor =>\r\n      newContributors.includes(contributor._id)\r\n    );\r\n    this.setState({\r\n      contributors: currentContributors,\r\n      edited: true,\r\n      errorMessage: \"\"\r\n    });\r\n  };\r\n\r\n  addContributor = user => () => {\r\n    let currentContributors = this.state.contributors;\r\n    if (!currentContributors.includes(user)) {\r\n      currentContributors.push(user);\r\n      this.setState({\r\n        contributors: currentContributors,\r\n        errorMessage: \"\",\r\n        edited: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorMessage: \"Contributor already exist!\",\r\n        successMessage: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUpdateContributors = e => {\r\n    e.preventDefault();\r\n\r\n    const { contributors } = this.state;\r\n    let userIds = [];\r\n    contributors.forEach(contributor => {\r\n        userIds.push(contributor._id)\r\n    });\r\n\r\n    const projectId = this.state.project._id\r\n\r\n    if(projectId) {\r\n        API.patch(\"/projects\", {projectId, userIds}).then(response => {\r\n            this.setState({\r\n                successMessage: \"Update project successfully!\",\r\n                errorMessage: \"\",\r\n                edited: false,\r\n            })\r\n            this.props.updateData()\r\n        }).catch(error => {\r\n            this.setState({\r\n                successMessage: \"\",\r\n                errorMessage: \"There is an error occurred!\",\r\n                edited: false,\r\n            })\r\n        })\r\n    } else {\r\n        this.setState({\r\n            errorMessage: \"Missing Project Id for update\",\r\n            successMessage: \"\"\r\n        })\r\n    }\r\n\r\n  };\r\n\r\n  displayUser = () => {\r\n    const { users } = this.props;\r\n    return users.map(user => {\r\n      return (\r\n        <tr key={user._id}>\r\n          <td>{user.name}</td>\r\n          <td>{user.email}</td>\r\n          <td>{user.role}</td>\r\n          <td>\r\n            {user.active.toString() === \"true\" ? (\r\n              <span className=\"dot active\"></span>\r\n            ) : (\r\n              <span className=\"dot inactive\"></span>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <Button\r\n              node=\"button\"\r\n              className=\"gradient-btn btn-red\"\r\n              style={{\r\n                marginRight: \"5px\"\r\n              }}\r\n              waves=\"light\"\r\n              onClick={this.addContributor(user)}\r\n            >\r\n              Add\r\n              <Icon left>add</Icon>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { edited } = this.state;\r\n    return (\r\n      <div>\r\n        {this.displayContributor()}\r\n        <Row>\r\n          <Table hoverable={true} responsive={true}>\r\n            <thead>\r\n              <tr>\r\n                <th data-field=\"name\">Name</th>\r\n                <th data-field=\"email\">Email</th>\r\n                <th data-field=\"role\">Role</th>\r\n                <th data-field=\"active\">Active</th>\r\n                <th data-field=\"add\">Add</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.displayUser()}</tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row>\r\n          <Button\r\n            node=\"button\"\r\n            style={{\r\n              margin: \"5px\"\r\n            }}\r\n            waves=\"light\"\r\n            className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n            disabled={!edited}\r\n            onClick={this.handleUpdateContributors}\r\n          >\r\n            Save\r\n            <Icon left>save</Icon>\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContributorForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport ContributorForm from \"./ContributorForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass EditContributorsModal extends Component {\r\n  state = {\r\n    users: [],\r\n    contributors: []\r\n  };\r\n  componentDidMount() {\r\n\r\n    this.getUsers();\r\n  }\r\n\r\n  getContributors = users => {\r\n    const { project } = this.props;\r\n    const contributors = users.filter(user =>\r\n      project.contributors.includes(user._id)\r\n    );\r\n    return contributors;\r\n  };\r\n\r\n  getUsers = () => {\r\n    API.get(`/admin/users`)\r\n      .then(response => {\r\n          const users = response.data\r\n          const { project } = this.props;\r\n          const contributors = users.filter(user =>\r\n            project.contributors.includes(user._id)\r\n          );\r\n        this.setState({\r\n          users,\r\n          contributors,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          loading: true\r\n        });\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    const { users, loading, contributors } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          fixedFooter={true}\r\n          header=\"Edit Contributors\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeEditContributorsModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n          {contributors && <ContributorForm contributors={contributors} users={users} project={project} updateData={this.props.updateData}/>}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditContributorsModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Icon } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\nimport EditContributorsModal from \"./EditContributorsModal\";\r\nimport Axios from \"axios\";\r\nimport Loading from \"../../loading/Loading\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectTableAdmin extends Component {\r\n  state = {\r\n    loading: true,\r\n    projects: [],\r\n    statuses: [],\r\n    opendEditContributorsModal: false,\r\n    users: []\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.projects) {\r\n      this.setState({\r\n        ...this.state,\r\n        projects: this.props.projects,\r\n        loading: false\r\n      });\r\n    }\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    const getStatusesRequest = API.get(\"/statuses\");\r\n    const getUsersRequest = API.get(`/admin/users`);\r\n    Axios.all([getStatusesRequest, getUsersRequest])\r\n      .then(\r\n        Axios.spread((...responses) => {\r\n          const statuses = responses[0].data;\r\n          const users = responses[1].data;\r\n          this.setState({\r\n            statuses,\r\n            users,\r\n            loading: false\r\n          });\r\n        })\r\n      )\r\n      .catch(error => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  openEditContributorModal = project => () => {\r\n    this.setState({\r\n      opendEditContributorsModal: true,\r\n      project\r\n    });\r\n  };\r\n\r\n  closeEditContributorsModal = e => {\r\n    this.setState({\r\n      opendEditContributorsModal: false\r\n    });\r\n  };\r\n\r\n  displayContributor = project => {\r\n    const { users } = this.state;\r\n    const contributors = users.filter(user =>\r\n      project.contributors.includes(user._id)\r\n    );\r\n\r\n    return (\r\n      contributors.length > 0 &&\r\n      contributors.map(contributor => {\r\n        return <li key={contributor._id}>{contributor.name}</li>;\r\n      })\r\n    );\r\n  };\r\n\r\n  displayProjects = projects => {\r\n    const { statuses } = this.state;\r\n    return projects.map(project => {\r\n      const status = statuses.filter(\r\n        status => status._id === project.status\r\n      )[0];\r\n\r\n      return (\r\n        <tr key={project._id}>\r\n          <td>\r\n            <a href={\"/projects/\" + project._id}>{project.name}</a>\r\n          </td>\r\n          <td>{project.price.$numberDecimal}</td>\r\n          <td>\r\n            {status && (\r\n              <p style={{ color: `${status.color}` }}>{status.title}</p>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <ul>{this.displayContributor(project)}</ul>\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" onClick={this.openEditContributorModal(project)}>\r\n              <Icon>edit</Icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { projects } = this.props;\r\n    const { project, opendEditContributorsModal, loading } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"name\">Name</th>\r\n              <th data-field=\"price\">Price</th>\r\n              <th data-field=\"status\">Status</th>\r\n              <th data-field=\"contributors\">Contributors</th>\r\n              <th data-field=\"edit\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.length > 0 ? (\r\n              this.displayProjects(projects)\r\n            ) : (\r\n              <tr>\r\n                <td>There is no project found!</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n        {opendEditContributorsModal && (\r\n          <EditContributorsModal\r\n            project={project}\r\n            closeEditContributorsModal={this.closeEditContributorsModal}\r\n            updateData={this.props.updateData}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectTableAdmin);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Pagination, Icon } from \"react-materialize\";\r\nimport ProjectTableAdmin from \"./ProjectTableAdmin\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport ProjectFilter from \"../../projects/ProjectFilter\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProjectContributors extends Component {\r\n  state = {\r\n    loading: true,\r\n    pageNo: 1,\r\n    totalProjects: 0\r\n  };\r\n  componentDidMount() {\r\n    const { pageNo } = this.state;\r\n    this.getProjects(pageNo);\r\n  }\r\n  setPageNumber = pageNo => {\r\n    this.setState({\r\n      pageNo\r\n    });\r\n    this.getProjects(pageNo);\r\n  };\r\n\r\n  getProjects = pageNo => {\r\n    if(!pageNo) {\r\n      pageNo = this.state.pageNo\r\n    }\r\n    API.get(`/projects?pageNo=${pageNo}`)\r\n      .then(response => {\r\n        this.setState({\r\n          loading: false,\r\n          projects: response.data.projects,\r\n          totalProjects: response.data.count\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.props.history.push(\"/notfound\");\r\n      });\r\n  };\r\n\r\n  //get the new data from ProjectFilter Component and display search result\r\n  searchData = (newData, count) => {\r\n    this.setState({\r\n      projects: newData,\r\n      totalProjects: count\r\n    });\r\n  };\r\n\r\n  //Reset filter project\r\n  resetFilter = e => {\r\n\r\n    this.getProjects(1);\r\n  };\r\n\r\n\r\n  render() {\r\n    const { loading, projects, pageNo, totalProjects } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <Row>\r\n          <Col>\r\n            <h5><Icon>assignment_turned_in</Icon>Project Contributors</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ProjectFilter\r\n          searchData={this.searchData}\r\n          resetFilter={this.resetFilter}\r\n        />\r\n\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <Row style={{ textAlign: \"center\" }}>\r\n            <Pagination\r\n              activePage={pageNo}\r\n              items={totalProjects / 10 + 1}\r\n              leftBtn={<Icon>chevron_left</Icon>}\r\n              maxButtons={3}\r\n              rightBtn={<Icon>chevron_right</Icon>}\r\n              onSelect={pageNumber => {\r\n                this.setPageNumber(pageNumber);\r\n              }}\r\n            />\r\n          </Row>\r\n          <ProjectTableAdmin projects={projects} updateData={this.getProjects}/>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectContributors);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Button, Row, Select } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass StatusForm extends Component {\r\n  state = {\r\n    status: {\r\n      title: \"\",\r\n      color: \"\",\r\n      order: \"\",\r\n      active: true\r\n    },\r\n    edited: false\r\n  };\r\n  componentDidMount() {\r\n    const { status } = this.props;\r\n    if (status) {\r\n      this.setState({\r\n        status\r\n      });\r\n    }\r\n  }\r\n\r\n  createStatus = status => {\r\n    API.post(`/statuses`, status)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Status was created\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n  updateStatus = status => {\r\n    API.patch(`/statuses/${status._id}`, status)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Status was updated\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { status } = this.state;\r\n    if (status._id) {\r\n      this.updateStatus(status);\r\n    } else {\r\n      this.createStatus(status);\r\n      this.props.updateData();\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    let { status } = this.state;\r\n    status[field] = value;\r\n    this.setState({\r\n      status,\r\n      edited: true\r\n    });\r\n  };\r\n  render() {\r\n    const { status, edited } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Title:\"\r\n              name=\"title\"\r\n              value={status.title}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Color:\"\r\n              name=\"color\"\r\n              value={status.color}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Order:\"\r\n              name=\"order\"\r\n              value={status.order.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <Select\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Active\"\r\n              name=\"active\"\r\n              onChange={this.handleChange}\r\n              options={{\r\n                classes: \"\",\r\n                dropdownOptions: {\r\n                  alignment: \"left\",\r\n                  autoTrigger: true,\r\n                  closeOnClick: true,\r\n                  constrainWidth: true,\r\n                  container: null,\r\n                  coverTrigger: true,\r\n                  hover: false,\r\n                  inDuration: 150,\r\n                  onCloseEnd: null,\r\n                  onCloseStart: null,\r\n                  onOpenEnd: null,\r\n                  onOpenStart: null,\r\n                  outDuration: 250\r\n                }\r\n              }}\r\n              value={status.active.toString()}\r\n              required\r\n            >\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </Select>\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              disabled={!edited}\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatusForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-materialize\";\r\nimport StatusForm from \"./StatusForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass StatusModal extends Component {\r\n  render() {\r\n    const {status} = this.props || {}\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n        //   fixedFooter\r\n          header=\"Status\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n           <StatusForm status={status} updateData={this.props.updateData}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatusModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Icon } from \"react-materialize\";\r\nimport StatusModal from \"./StatusModal\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass StatusTable extends Component {\r\n  state = {\r\n    openModal: false,\r\n    status: {},\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  handleOpenModel = status => () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openModal: true,\r\n      status\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openModal: false\r\n    });\r\n  };\r\n\r\n  displayStatus = () => {\r\n    const { statuses } = this.props;\r\n    return statuses.map(status => {\r\n      return (\r\n        <tr key={status._id}>\r\n          <td>{status.title}</td>\r\n          <td>\r\n            <span\r\n              style={{ backgroundColor: `${status.color}` }}\r\n              className=\"dot\"\r\n            ></span>\r\n          </td>\r\n          <td>{status.order}</td>\r\n          <td>\r\n            {status.active.toString() === \"true\" ? (\r\n              <span className=\"dot active\"></span>\r\n            ) : (\r\n              <span className=\"dot inactive\"></span>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" onClick={this.handleOpenModel(status)}>\r\n              <Icon>edit</Icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { openModal, status } = this.state;\r\n    return (\r\n      <div>\r\n        <Table responsive={true} hoverable={true}>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"title\">Title</th>\r\n              <th data-field=\"color\">Color</th>\r\n              <th data-field=\"order\">Order</th>\r\n              <th data-field=\"active\">Active</th>\r\n              <th data-field=\"edit\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.displayStatus()}</tbody>\r\n        </Table>\r\n        {openModal && (\r\n          <StatusModal closeModal={this.closeModal} status={status} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StatusTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button, Icon } from \"react-materialize\";\r\nimport StatusTable from \"./StatusTable\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport StatusModal from \"./StatusModal\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass Status extends Component {\r\n\r\n    state = {\r\n        statuses: [],\r\n        loading: true,\r\n        openCreateModal: false\r\n    }\r\n    componentDidMount(){\r\n       this.getStatuses()\r\n    }\r\n\r\n    getStatuses = () => {\r\n        API.get(`/statuses`).then(response => {\r\n            const statuses = response.data\r\n            this.setState({\r\n                loading: false,\r\n                statuses\r\n            })\r\n        })\r\n    }\r\n\r\n  handleCreateModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateModal = () => {\r\n    this.setState({\r\n      openCreateModal: false\r\n    });\r\n  };\r\n  render() {\r\n      const {loading, statuses, openCreateModal} = this.state\r\n      if(loading){\r\n         return <Loading/>\r\n      }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <h5>\r\n          Statuses{\" \"}\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-red\"\r\n            onClick={this.handleCreateModel}\r\n          >\r\n            Add\r\n            <Icon left>add_box</Icon>\r\n          </Button>\r\n        </h5>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n            <StatusTable statuses={statuses}/>\r\n        </Row>\r\n        {openCreateModal && (\r\n          <StatusModal closeModal={this.closeCreateModal} updateData={this.getStatuses} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Status);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Button, Row, Select } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CategoryForm extends Component {\r\n  state = {\r\n    category: {\r\n      title: \"\",\r\n      description: \"\",\r\n      order: \"\",\r\n      active: true\r\n    },\r\n    edited: false\r\n  };\r\n  componentDidMount() {\r\n    const { category } = this.props;\r\n    if (category) {\r\n      this.setState({\r\n        category\r\n      });\r\n    }\r\n  }\r\n\r\n  createCategory = category => {\r\n    API.post(`/categories`, category)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Category was created\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  updateCategory = category => {\r\n    API.patch(`/categories/${category._id}`, category)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Category was updated\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { category } = this.state;\r\n    if (category._id) {\r\n      this.updateCategory(category);\r\n\r\n    } else {\r\n      this.createCategory(category);\r\n      this.props.updateData();\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    let { category } = this.state;\r\n    category[field] = value;\r\n    this.setState({\r\n      category,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { category, edited } = this.state;\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Title:\"\r\n              name=\"title\"\r\n              value={category.title}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Description:\"\r\n              name=\"description\"\r\n              value={category.description}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Order:\"\r\n              name=\"order\"\r\n              value={category.order.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <Select\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Active\"\r\n              name=\"active\"\r\n              onChange={this.handleChange}\r\n              options={{\r\n                classes: \"\",\r\n                dropdownOptions: {\r\n                  alignment: \"left\",\r\n                  autoTrigger: true,\r\n                  closeOnClick: true,\r\n                  constrainWidth: true,\r\n                  container: null,\r\n                  coverTrigger: true,\r\n                  hover: false,\r\n                  inDuration: 150,\r\n                  onCloseEnd: null,\r\n                  onCloseStart: null,\r\n                  onOpenEnd: null,\r\n                  onOpenStart: null,\r\n                  outDuration: 250\r\n                }\r\n              }}\r\n              value={category.active.toString()}\r\n              required\r\n            >\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </Select>\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              disabled={!edited}\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-materialize\";\r\nimport CategoryForm from \"./CategoryForm\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CategoryModal extends Component {\r\n  render() {\r\n    const {category} = this.props || {}\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n        //   fixedFooter\r\n          header=\"Category\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n           <CategoryForm category={category} updateData={this.props.updateData}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Icon } from \"react-materialize\";\r\nimport CategoryModal from \"./CategoryModal\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass CategoryTable extends Component {\r\n  state = {\r\n    openModal: false,\r\n    category: {}\r\n  };\r\n  handleOpenModel = category => () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openModal: true,\r\n      category\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openModal: false\r\n    });\r\n  };\r\n  displayCategory = () => {\r\n    const { categories } = this.props;\r\n    return categories.map(category => {\r\n      return (\r\n        <tr key={category._id}>\r\n          <td>{category.title}</td>\r\n          <td>{category.order}</td>\r\n          <td>\r\n            {category.active.toString() === \"true\" ? (\r\n              <span className=\"dot active\"></span>\r\n            ) : (\r\n              <span className=\"dot inactive\"></span>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" onClick={this.handleOpenModel(category)}>\r\n              <Icon>edit</Icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { openModal, category } = this.state;\r\n    return (\r\n      <div>\r\n        <Table responsive={true} hoverable={true}>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"title\">Title</th>\r\n              <th data-field=\"order\">Order</th>\r\n              <th data-field=\"active\">Active</th>\r\n              <th data-field=\"edit\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.displayCategory()}</tbody>\r\n        </Table>\r\n        {openModal && (\r\n          <CategoryModal closeModal={this.closeModal} category={category} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Row, Icon } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport CategoryTable from \"./CategoryTable\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass Category extends Component {\r\n  state = {\r\n    categories: [],\r\n    loading: true,\r\n    openCreateModal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCategories();\r\n  }\r\n\r\n  handleCreateModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateModal: true\r\n    });\r\n  };\r\n\r\n  getCategories = () => {\r\n    API.get(`/categories`).then(response => {\r\n      const categories = response.data;\r\n      this.setState({\r\n        loading: false,\r\n        categories\r\n      });\r\n    });\r\n  };\r\n\r\n  closeCreateModal = () => {\r\n    this.setState({\r\n      openCreateModal: false\r\n    });\r\n  };\r\n  render() {\r\n    const { loading, categories, openCreateModal } = this.state;\r\n    if (loading) {\r\n      return <Loading />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>\r\n        <h5>\r\n          Categories{\" \"}\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-red\"\r\n            onClick={this.handleCreateModel}\r\n          >\r\n            Add\r\n            <Icon left>add_box</Icon>\r\n          </Button>\r\n        </h5>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <CategoryTable categories={categories}   updateData={this.getCategories}/>\r\n        </Row>\r\n        {openCreateModal && (\r\n          <CategoryModal\r\n            closeModal={this.closeCreateModal}\r\n            updateData={this.getCategories}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Category);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextInput, Button, Row, Select } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProvinceForm extends Component {\r\n  state = {\r\n    province: {\r\n      name: \"\",\r\n      gst: { $numberDecimal: 0.00 },\r\n      pst: { $numberDecimal: 0.00 },\r\n      hst: { $numberDecimal: 0.00 },\r\n      order: \"\",\r\n      active: true\r\n    },\r\n    edited: false\r\n  };\r\n  componentDidMount() {\r\n    let { province } = this.props;\r\n    if (province) {\r\n      this.setState({\r\n        province\r\n      });\r\n    }\r\n  }\r\n\r\n  createProvince = province => {\r\n    API.post(`/provinces`, province)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Province was created\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  updateProvince = province => {\r\n    API.patch(`/provinces/${province._id}`, province)\r\n      .then(response => {\r\n        if (response.data) {\r\n          this.setState({\r\n            successMessage: \"Province was updated\",\r\n            errorMessage: \"\",\r\n            edited: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          successMessage: \"\",\r\n          errorMessage: \"An Error has been occurred\",\r\n          edited: false\r\n        });\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { province } = this.state;\r\n    if (province._id) {\r\n      this.updateProvince(province);\r\n    } else {\r\n      this.createProvince(province);\r\n      this.props.updateData();\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    let { province } = this.state;\r\n\r\n    if (field === \"gst\" || field === \"pst\" || field === \"hst\") {\r\n      province[field][\"$numberDecimal\"] = value;\r\n    } else {\r\n        province[field] = value;\r\n    }\r\n\r\n    this.setState({\r\n      province,\r\n      edited: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { province, edited } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Name:\"\r\n              name=\"name\"\r\n              value={province.name}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"GST:\"\r\n              name=\"gst\"\r\n              value={province.gst.$numberDecimal.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"PST:\"\r\n              name=\"pst\"\r\n              value={province.pst.$numberDecimal.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"HST:\"\r\n              name=\"hst\"\r\n              value={province.hst.$numberDecimal.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <TextInput\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Order:\"\r\n              name=\"order\"\r\n              value={province.order.toString()}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <Select\r\n              s={12}\r\n              m={6}\r\n              xl={6}\r\n              l={6}\r\n              label=\"Active\"\r\n              name=\"active\"\r\n              onChange={this.handleChange}\r\n              options={{\r\n                classes: \"\",\r\n                dropdownOptions: {\r\n                  alignment: \"left\",\r\n                  autoTrigger: true,\r\n                  closeOnClick: true,\r\n                  constrainWidth: true,\r\n                  container: null,\r\n                  coverTrigger: true,\r\n                  hover: false,\r\n                  inDuration: 150,\r\n                  onCloseEnd: null,\r\n                  onCloseStart: null,\r\n                  onOpenEnd: null,\r\n                  onOpenStart: null,\r\n                  outDuration: 250\r\n                }\r\n              }}\r\n              value={province.active.toString()}\r\n              required\r\n            >\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </Select>\r\n          </Row>\r\n          <Row>\r\n            <Button\r\n              disabled={!edited}\r\n              className={edited ? \"gradient-btn btn-green\" : \"\"}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </form>\r\n        <Row>\r\n          {this.state.successMessage && (\r\n            <Row className=\"animated shake\">\r\n              <p className=\"green-text animated bounceOutLeft delay-3s\">\r\n                {this.state.successMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n          {this.state.errorMessage && (\r\n            <Row className=\"animated rubberBand\">\r\n              <p className=\"red-text animated bounceOutLeft delay-3s \">\r\n                {this.state.errorMessage}\r\n              </p>\r\n            </Row>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-materialize\";\r\nimport ProvinceForm from \"./ProvinceForm\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProvinceModal extends Component {\r\n  render() {\r\n    const {province} = this.props || {}\r\n    return (\r\n      <div>\r\n        <Modal\r\n          actions={[\r\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\r\n              Close\r\n            </Button>\r\n          ]}\r\n          bottomSheet={false}\r\n          //   fixedFooter\r\n          header=\"Province\"\r\n          id=\"modal-0\"\r\n          open={true}\r\n          options={{\r\n            dismissible: true,\r\n            endingTop: \"10%\",\r\n            inDuration: 250,\r\n            onCloseEnd: this.props.closeModal,\r\n            onCloseStart: null,\r\n            onOpenEnd: null,\r\n            onOpenStart: null,\r\n            opacity: 0.5,\r\n            outDuration: 250,\r\n            preventScrolling: true,\r\n            startingTop: \"4%\"\r\n          }}\r\n        >\r\n          <ProvinceForm province={province} updateData={this.props.updateData} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Icon } from \"react-materialize\";\r\nimport ProvinceModal from \"./ProvinceModal\";\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass ProvinceTable extends Component {\r\n  state = {\r\n    openModal: false,\r\n    province: {},\r\n    successMessage: \"\",\r\n    errorMessage: \"\"\r\n  };\r\n  handleOpenModel = province => () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openModal: true,\r\n      province\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openModal: false\r\n    });\r\n  };\r\n\r\n  displayProvince = () => {\r\n    const { provinces } = this.props;\r\n    return provinces.map(province => {\r\n      return (\r\n        <tr key={province._id}>\r\n          <td>{province.name}</td>\r\n          <td>{province.gst.$numberDecimal}</td>\r\n          <td>{province.pst.$numberDecimal}</td>\r\n          <td>{province.hst.$numberDecimal}</td>\r\n          <td>{province.order}</td>\r\n          <td>\r\n            {province.active.toString() === \"true\" ? (\r\n              <span className=\"dot active\"></span>\r\n            ) : (\r\n              <span className=\"dot inactive\"></span>\r\n            )}\r\n          </td>\r\n          <td>\r\n            <a href=\"#\" onClick={this.handleOpenModel(province)}>\r\n              <Icon>edit</Icon>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const { openModal, province } = this.state;\r\n    return (\r\n      <div>\r\n        <Table responsive={true} hoverable={true}>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"name\">Name</th>\r\n              <th data-field=\"Gst\">Gst</th>\r\n              <th data-field=\"Pst\">Pst</th>\r\n              <th data-field=\"Pst\">Pst</th>\r\n              <th data-field=\"order\">Order</th>\r\n              <th data-field=\"active\">Active</th>\r\n              <th data-field=\"edit\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.displayProvince()}</tbody>\r\n        </Table>\r\n        {openModal && (\r\n          <ProvinceModal closeModal={this.closeModal} province={province} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProvinceTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button, Icon } from \"react-materialize\";\r\nimport API from \"../../../utils/API/API\";\r\nimport ProvinceModal from \"./ProvinceModal\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport ProvinceTable from \"./ProvinceTable\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nclass Province extends Component {\r\n  state = {\r\n    provinces: [],\r\n    loading: true,\r\n    openCreateModal: false\r\n  };\r\n  componentDidMount() {\r\n    this.getProvinces();\r\n  }\r\n\r\n  getProvinces = () => {\r\n    API.get(`/provinces`).then(response => {\r\n      const provinces = response.data;\r\n      this.setState({\r\n        loading: false,\r\n        provinces\r\n      });\r\n    });\r\n  };\r\n  handleCreateModel = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      openCreateModal: true\r\n    });\r\n  };\r\n\r\n  closeCreateModal = () => {\r\n    this.setState({\r\n      openCreateModal: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {loading, provinces, openCreateModal} = this.state\r\n    if(loading){\r\n       return <Loading/>\r\n    }\r\n    return (\r\n      <div>\r\n        <Row style={{ marginTop: \"20px\" }}></Row>{\" \"}\r\n        <h5>\r\n          Provinces{\" \"}\r\n          <Button\r\n            node=\"button\"\r\n            type=\"submit\"\r\n            waves=\"light\"\r\n            className=\"gradient-btn btn-red\"\r\n            onClick={this.handleCreateModel}\r\n          >\r\n            Add\r\n            <Icon left>add_box</Icon>\r\n          </Button>\r\n        </h5>\r\n        <Row\r\n          className=\" radius-corner\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            boxShadow: \"1px 1px 1px #9E9E9E\"\r\n          }}\r\n        >\r\n          <ProvinceTable provinces={provinces} />\r\n        </Row>\r\n        {openCreateModal && (\r\n          <ProvinceModal\r\n            closeModal={this.closeCreateModal}\r\n            updateData={this.getProvinces}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Province);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\nimport Nav from \"../layout/menu/Nav\";\r\nimport { Container } from \"react-materialize\";\r\nimport Login from \"../features/login/Login\";\r\nimport Project from \"../features/projects/Project\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"../features/profile/Profile\";\r\nimport Business from \"../features/business/Business\";\r\nimport Contact from \"../features/contact/Contact\";\r\nimport BusinessDetailPage from \"../features/business/BusinessDetailPage\";\r\nimport ProjectDetailPage from \"../features/projects/ProjectDetailPage\";\r\nimport ViewUpload from \"../features/upload/ViewUpload\";\r\nimport User from \"../features/admin/user/User\";\r\nimport NotFound from \"../features/admin/notfound/NotFound\";\r\nimport ProjectContributors from \"../features/admin/project/ProjectContributors\";\r\nimport Status from \"../features/admin/status/Status\";\r\nimport Category from \"../features/admin/category/Category\";\r\nimport Province from \"../features/admin/province/Province\";\r\nconst mapStateToProps = state => {\r\n  return { user: state.user };\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const loggedIn = this.props.user.authenticated;\r\n    const admin = this.props.user.role === \"admin\" && loggedIn ? true : false;\r\n    return (\r\n      <Router>\r\n        <Route\r\n          path=\"/(.+)\"\r\n          render={() => (\r\n            <div>\r\n              <Nav />\r\n              <Container className=\"main\">\r\n                <Switch>\r\n                  {admin && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/admin/users\"\r\n                      component={admin ? User : NotFound}\r\n                    />\r\n                  )}\r\n                  {admin && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/admin/projects\"\r\n                      component={admin ? ProjectContributors : NotFound}\r\n                    />\r\n                  )}\r\n                  {admin && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/admin/statuses\"\r\n                      component={admin ? Status : NotFound}\r\n                    />\r\n                  )}\r\n                  {admin && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/admin/categories\"\r\n                      component={admin ? Category : NotFound}\r\n                    />\r\n                  )}\r\n                  {admin && (\r\n                    <Route\r\n                      exact\r\n                      path=\"/admin/provinces\"\r\n                      component={admin ? Province : NotFound}\r\n                    />\r\n                  )}\r\n\r\n\r\n                  <Route\r\n                    exact\r\n                    path=\"/projects\"\r\n                    component={loggedIn ? Project : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/businesses\"\r\n                    component={loggedIn ? Business : Login}\r\n                  />\r\n                  <Route\r\n                    path=\"/businesses/:id\"\r\n                    component={loggedIn ? BusinessDetailPage : Login}\r\n                  />\r\n                  <Route\r\n                    path=\"/projects/:id\"\r\n                    component={loggedIn ? ProjectDetailPage : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/contacts\"\r\n                    component={loggedIn ? Contact : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/profile/me\"\r\n                    component={loggedIn ? Profile : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/login\"\r\n                    component={loggedIn ? Project : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/viewupload/:id\"\r\n                    component={loggedIn ? ViewUpload : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/notfound\"\r\n                    component={loggedIn ? NotFound : Login}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/*\"\r\n                    component={loggedIn ? NotFound : Login}\r\n                  />\r\n                </Switch>\r\n              </Container>\r\n            </div>\r\n          )}\r\n        />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/index\";\r\nimport \"./index.css\";\r\nimport App from \"../src/layout/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n\r\n  rootEl\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}